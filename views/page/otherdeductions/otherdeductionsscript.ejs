<script>
  let otherdeduct = "";
  let employeeid = "";

  $(document).ready(function () {
    console.log("Initialize");
    LoadTable();
    LoadListEmp();
    LoadeditListEmp();
    Loadedittype();

    //   $(document).on('keyup', '#myInput', function () {
    //     searchTable();
    //   });

    function LoadTable() {
      $("#dataTableDeduction").DataTable({
        destroy: true,
        processing: true,
        serverSide: true,
        paging: false,
        searching: false,
        info: false,
        scrollY: 600,
        scrollCollapse: true,
        serverMethod: "GET",
        ajax: {
          url: "/otherdeductions/load",
          dataSrc: (json) => {
            var finalData = [];
            var data = json.data;

            //console.log(data);
            $.each(data, (key, item) => {
              var action = "";
              var status = item.status;

              action = `
                    <button id="editBtn" class="btn text-primary" name="editBtn" data-bs-toggle="modal" data-bs-target="#editdeductionmodal"><i class="fas fa-fw fa-pen"></i></button>
                   `;

              var imgElement = document.createElement("img");
              imgElement.src = "data:image/jpg;base64," + item.image;
              imgElement.alt = "Profile Image";
              imgElement.style.width = "90px";
              imgElement.style.height = "90px";

              finalData.push({
                image: imgElement.outerHTML,
                otherdeduct: item.otherdeduct,
                employeeid: item.employeeid,
                idtype: item.idtype,
                amount: item.amount,
                period: item.period,
                cutoff: item.cutoff,
                action: action,
              });
            });

            return finalData;
          },
        },
        columnDefs: [
          {
            targets: 1,
            className: "td-indent",
          },
        ],
        columns: [
          { data: "image" },
          { data: "otherdeduct" },
          { data: "employeeid" },
          { data: "idtype" },
          {
            data: "amount",
            render: function (data, type, row) {
              return (
                "₱" +
                parseFloat(data).toLocaleString("en-US", {
                  minimumFractionDigits: 2,
                  maximumFractionDigits: 2,
                })
              );
            },
          },
          { data: "period" },
          { data: "cutoff" },
          { data: "action" },
        ],
        createdRow: function (row, data, dataIndex) {
          var idtypeCell = $(row).find("td:eq(3)");
          var amountCell = $(row).find("td:eq(4)");

          idtypeCell.wrapInner("<span class='idtype-text'></span>");
          amountCell.wrapInner("<span class='amount-text'></span>");

          $("td", row).each(function (index) {
            this.style.textAlign = "center";
            this.style.verticalAlign = "middle";
          });
        },
        initComplete: function () {
          console.log("Done");
        },
      });
    }

    $(document).on("click", "#deductionsvbtn", function () {
      let employeeid = $("#employee").val();
      let idtype = $("#govid").val();
      let amount = $("#deductamount").val();
      let period = $("#deductperiod").val();
      let cutoff = $("#cutoff").val();

      var message = "";

      if (employeeid == "") {
        message += "employeeid is required ";
      }

      if (idtype == "") {
        message += "monthly is required ";
      }

      if (amount == "") {
        message += "allowances is required ";
      }

      if (period == "") {
        message += "monthly is required ";
      }

      if (cutoff == "") {
        message += "allowances is required ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        amount = amount.replace(/,/g, "").replace("₱", "");
        $.ajax({
          type: "POST",
          url: "/otherdeductions/save",
          data: {
            employeeid: employeeid,
            idtype: idtype,
            amount: parseFloat(amount),
            period: period,
            cutoff: cutoff,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal({
                title: "Saved Successfully",
                text: "You clicked the button!",
                icon: "success",
                button: "OK!",
              }).then((result) => {
                window.location.reload();
              });
              LoadTable();
            } else {
              swal({
                title: "Exist",
                text: "Data already exists!",
                icon: "warning",
                button: "OK!",
              }).then((result) => {
                window.location.reload();
              });
              LoadTable();
            }
          },
          error: function (err) {
            swal("Data already exist!", "You clicked the button!", "warning");
          },
        });
      }
    });

    function LoadListEmp() {
      $.ajax({
        type: "GET",
        url: "/employee/load",
        success: function (result) {
          //console.log(result.data);
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.newEmployeeId, item.newEmployeeId);
            $(options).html(item.firstname);
            $("#employee").append(options);
            // console.log(item.firstname);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    $(document).ready(function () {
      $("#employee").on("change", function () {
        var employeeId = $(this).val();
        $("#govid").empty();
        $.ajax({
          type: "POST",
          url: "/employee/getdeductother",
          data: { employeeid: employeeId },
          success: function (result) {
            //console.log(result.data);
            var data = result.data;

            $.each(data, function (key, item) {
              var options = new Option(item.otherdeductid, item.otherdeductid);
              $(options).html(item.idtype);
              $("#govid").append(options);
              // console.log(item.idtype);
            });
          },
          error: function (result) {
            alert("error: " + result.data);
          },
        });
      });
    });

    $(document).ready(function () {
      $("#deductperiod").on("change", function () {
        var selectedDeductPeriod = $(this).val();
        $("#cutoff").empty();
        if (selectedDeductPeriod === "1") {
          $("#cutoff").append("<option>1st Cut Off</option>");
          $("#cutoff").append("<option>2nd Cut Off</option>");
        } else if (selectedDeductPeriod === "2") {
          $("#cutoff").append(
            "<option selected>1st Cut Off and 2nd Cut Off</option>"
          );
        }
      });
    });

    function LoadeditListEmp() {
      $.ajax({
        type: "GET",
        url: "/employee/loadedit",
        success: function (result) {
          //console.log(result.data);
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.newEmployeeId, item.newEmployeeId);
            $(options).html(item.firstname);
            $("#editemployee").append(options);
            // console.log(item.firstname);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    function Loadedittype() {
      $.ajax({
        type: "GET",
        url: "/otherdeductionsID/load",
        success: function (result) {
          console.log(result.data);
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.otherdeductid, item.otherdeductid);
            $(options).html(item.idtype);
            $("#editgovid").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    // $(document).ready(function () {
    //     // Assuming you have a modal button with the ID "editBtn"
    //     $('#editBtn').on('click', function () {
    //         // Get the selected employee ID
    //         var employeeId = $("#editemployee").val();

    //         // Clear existing options in the "editgovid" select dropdown
    //         $("#editgovid").empty();

    //         // Use AJAX to get government IDs for the specified employee
    //         $.ajax({
    //             type: "POST",
    //             url: "/employee/getdeductother",
    //             data: { employeeid: employeeId },
    //             success: function (result) {
    //                 console.log(result.data);
    //                 var data = result.data;

    //                 $.each(data, function (key, item) {
    //                     var options = new Option(item.otherdeductid, item.otherdeductid);
    //                     $(options).html(item.idtype);
    //                     $("#editgovid").append(options);
    //                     console.log(item.idtype);
    //                 });
    //             },
    //             error: function (result) {
    //                 alert("error: " + result.data);
    //             },
    //         });
    //     });
    // });

    // $(document).ready(function () {
    //     $("#editBtn").on("click", function () { // Change event to click for the editBtn
    //         var employeeId = $("#editemployee").val(); // Get the value of editemployee field
    //         $("#editgovid").empty();
    //         $.ajax({
    //             type: "POST",
    //             url: "/employee/getdeductother",
    //             data: { employeeid: employeeId },
    //             success: function (result) {
    //                 console.log(result.data);
    //                 var data = result.data;

    //                 $.each(data, function (key, item) {
    //                     var options = new Option(item.otherdeductid, item.otherdeductid);
    //                     $(options).html(item.idtype);
    //                     $("#editgovid").append(options);
    //                     console.log(item.idtype);
    //                 });
    //             },
    //             error: function (result) {
    //                 alert("error: " + result.data);
    //             },
    //         });
    //     });
    // });

    $(document).ready(function () {
      $("#editdeductperiod").on("change", function () {
        var selectedDeductPeriod = $(this).val();
        if (selectedDeductPeriod === "1") {
          $("#editcutoff").empty();
          $("#editcutoff").append("<option>1st Cut Off</option>");
          $("#editcutoff").append("<option>2nd Cut Off</option>");
        } else if (selectedDeductPeriod === "2") {
          $("#editcutoff").empty();
          $("#editcutoff").append(
            "<option selected>1st Cut Off and 2nd Cut Off</option>"
          );
        }
      });
    });

    $("#dataTableDeduction tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      console.log(dataRow);
      otherdeduct = dataRow[1];
    });

    $(document).on("click", "#editBtn", function () {
      $.ajax({
        type: "POST",
        url: "/otherdeductions/getotherdeduction",
        data: {
          otherdeduct: otherdeduct,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            $.each(existingData, (key, item) => {
              $("#editemployee").val(item.employeeid);
              $("#editgovid").val(item.idtype);
              $("#editdeductamount").val(formatCurrencyValue(item.amount));
              $("#editdeductperiod").val(item.period);
              $("#editcutoff").val(item.cutoff);
            });
          } else {
            swal("Error fetching employee data", message, "error");
          }
        },
        error: function (err) {
          swal(
            "An error occurred while fetching employee data",
            message,
            "error"
          );
        },
      });
    });

    $(document).on("click", "#editdeductionsvbtn", function () {
      let id = otherdeduct;
      let employeeid = $("#editemployee").val();
      let idtype = $("#editgovid").val();
      let amount = $("#editdeductamount")
        .val()
        .replace(/[^\d.-]/g, "");
      let period = $("#editdeductperiod").val();
      let cutoff = $("#editcutoff").val();

      var message = "";

      if (employeeid === "") {
        message += "employeeid is required. ";
      }

      if (idtype === "") {
        message += "type is required. ";
      }

      if (amount === "") {
        message += "amount is required. ";
      }

      if (period === "") {
        message += "period is required. ";
      }

      if (cutoff === "") {
        message += "cutoff is required. ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "POST",
          url: "/otherdeductions/update",
          data: {
            otherdeduct: id,
            employeeid: employeeid,
            idtype: idtype,
            amount: parseFloat(amount),
            period: period,
            cutoff: cutoff,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal({
                title: "Update Successfully",
                text: "You clicked the button!",
                icon: "success",
                button: "OK!",
              }).then((results) => {
                window.location.reload();
              });
              LoadTable();
            } else if (result.msg == "exist") {
              swal({
                title: "Exist",
                text: "Data already exists!",
                icon: "warning",
                button: "OK!",
              });
            } else {
              swal(
                "Data already exists!",
                "You clicked the button!",
                "warning"
              );
            }
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
          },
        });
      }
    });
  });

  //#region FUNCTIONS

  function formatCurrencyValue(amount) {
    var formattedAmount = new Intl.NumberFormat("en-PH", {
      style: "currency",
      currency: "PHP",
    }).format(amount);
    return formattedAmount;
  }

  $("#deductamount").on({
    input: function () {
      formatCurrency($(this));
    },
    blur: function () {
      formatCurrency($(this), true);
    },
  });

  function formatNumber(n) {
    return n.replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ",");
  }

  function formatCurrency(input, blur) {
    var input_val = input.val();

    var numeric_val = input_val.replace(/\D/g, "");

    if (numeric_val === "" || numeric_val === "00") {
      return;
    }
    var formatted_val = formatNumber(numeric_val);
    formatted_val = "₱" + formatted_val;
    if (blur) {
      formatted_val += ".00";
    }

    input.val(formatted_val);
  }

  $("#editdeductamount").on({
    input: function () {
      formatCurrency($(this));
    },
    blur: function () {
      formatCurrency($(this), true);
    },
  });

  function formatNumber(n) {
    return n.replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ",");
  }

  function formatCurrency(input, blur) {
    var input_val = input.val();
    var numeric_val = input_val.replace(/\D/g, "");
    if (numeric_val === "" || numeric_val === "00") {
      return;
    }
    var formatted_val = formatNumber(numeric_val);
    formatted_val = "₱" + formatted_val;
    if (blur) {
      formatted_val += ".00";
    }
    input.val(formatted_val);
  }

  //#endregion
</script>
