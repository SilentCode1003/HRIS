<script>
  let leaveid = "";
  $(document).ready(function () {
    LoadTable();
    searchTable();
    LoadEditEmp();
    LoadSubgroup();

    $(document).on("keyup", "#myInput2", function () {
      searchTable();
    });

    function LoadTable() {
      $("#dataTablependingleave").DataTable({
        destroy: true,
        processing: true,
        serverSide: true,
        paging: false,
        searching: false,
        info: false,
        scrollY: 600,
        scrollCollapse: true,
        serverMethod: "GET",
        ajax: {
          url: "/pendingleave/load",
          dataSrc: (json) => {
            var finalData = [];
            var data = json.data;

            $.each(data, (key, item) => {
              var action = "";
              var status = item.status;

              action = `
                    <button id="editBtn" class="btn text-primary" name="editBtn" data-bs-toggle="modal" data-bs-target="#allleavemodal"><i class="fas fa-fw fa-pen"></i></button>
                   `;

              finalData.push({
                leaveid: item.leaveid,
                employeeid: item.employeeid,
                leavetype: item.leavetype,
                leavestartdate: item.leavestartdate,
                leaveenddate: item.leaveenddate,
                reason: item.reason,
                applieddate: item.applieddate,
                action: action,
              });
            });

            return finalData;
          },
        },
        columnDefs: [
          {
            targets: 1,
            className: "td-indent",
          },
        ],
        columns: [
          { data: "leaveid" },
          { data: "employeeid" },
          { data: "leavetype" },
          { data: "leavestartdate" },
          { data: "leaveenddate" },
          { data: "reason" },
          { data: "applieddate" },
          { data: "action" },
        ],
        createdRow: function (row, data, dataIndex) {
          var leavestartdateCell = $(row).find("td:eq(3)");
          var leaveenddateCell = $(row).find("td:eq(4)");
          var applieddateCell = $(row).find("td:eq(6)");

          leavestartdateCell.wrapInner(
            "<span class='leavestartdate-text'></span>"
          );
          leaveenddateCell.wrapInner("<span class='leaveenddate-text'></span>");
          applieddateCell.wrapInner("<span class='applieddate-text'></span>");

          $("td", row).each(function (index) {
            this.style.textAlign = "center";
            this.style.verticalAlign = "middle";
          });
        },
        initComplete: function () {},
      });
    }

    function LoadSubgroup() {
      $.ajax({
        type: "GET",
        url: "/subgroup/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.subgroupid, item.subgroupid);
            $(options).html(item.subgroupname);
            $("#subgroupid").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    function LoadEditEmp() {
      $.ajax({
        type: "GET",
        url: "/employee/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.id, item.id);
            $(options).html(item.fullname);
            $("#leaveemployeename").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    $("#dataTablependingleave tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      leaveid = dataRow[0];
    });

    $(document).on("click", "#editBtn", function () {
      $.ajax({
        type: "POST",
        url: "/index/getleave",
        data: {
          leaveid: leaveid,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            $.each(existingData, (key, item) => {
              $("#pendingleaveid").val(item.leaveid);
              $("#leaveemployeename").val(item.employee);
              $("#reqleavetype").val(item.leavetype);
              $("#leavestartdate").val(item.leavestartdate);
              $("#leaveenddate").val(item.leaveenddate);
              $("#leavereason").val(item.leavereason);
              $("#leaveapplieddate").val(item.leaveapplieddate);
              $("#previewleave").attr(
                "src",
                "data:image/jpg;base64," + item.leaveimage
              );
              $("#leavedays").val(item.totalleavedays);
              $("#unusedleave").val(item.unusedleave);
              $("#usedleave").val(item.usedleave);
              $("#leaveyear").val(item.leaveyear);
              $("#reqleavestatus").val(item.leavestatus);
              $("#leaveduration").val(item.leaveduration);
              $("#paiddays").val(item.leavepaiddays);
              $("#unpaiddays").val(item.leaveunpaiddays);
            });
          } else {
            swal("Error fetching employee data", "success");
          }
        },
        error: function (err) {
          swal("An error occurred while fetching employee data", err, "error");
        },
      });
    });

    $(document).on(
      "change",
      "#leavestartdate, #leaveenddate, #paiddays",
      function () {
        let startDate = $("#leavestartdate").val();
        let endDate = $("#leaveenddate").val();
        let paidDays = parseFloat($("#paiddays").val());
        let unusedLeave = parseFloat($("#unusedleave").val());
        let duration = calculateLeaveDuration(startDate, endDate);

        if (duration > unusedLeave) {
          let unpaidDays = duration - unusedLeave;
          $("#paiddays").val(unusedLeave);
          $("#unpaiddays").val(unpaidDays);
        } else {
          $("#leaveduration").val(duration);
          $("#paiddays").val(duration);
          $("#unpaiddays").val(0);
        }
      }
    );

    function calculateLeaveDuration(startDate, endDate) {
      let start = new Date(startDate);
      let end = new Date(endDate);
      let difference = end - start;
      let durationDays = difference / (1000 * 60 * 60 * 24) + 1;
      return Math.round(durationDays);
    }

    $(document).on("click", "#leavesavebutton", function () {
      let id = leaveid;
      let employeeid = $("#leaveemployeename").val(); 
      let status = $("#reqleavestatus").val();
      let leavestartdate = $("#leavestartdate").val();
      let leaveenddate = $("#leaveenddate").val();
      let leaveduration = $("#leaveduration").val();
      let leavepaidays = $("#paiddays").val();
      let leaveunpaiddays = $("#unpaiddays").val();
      let comment = $("#leavecomment").val();

      console.log(employeeid, "employeeid");

      var message = "";

      if (status === "Pending") {
        message += "status is required. ";
      }

      if (leavestartdate === "") {
        message += "status is required. ";
      }

      if (leaveenddate === "") {
        message += "Youre not Allowed to Cancel The Employee Request";
      }

      if (leaveduration === "") {
        message += "comment is required. ";
      }

      if (leavepaidays === "") {
        message += "comment is required. ";
      }

      if (leaveunpaiddays === "") {
        message += "comment is required. ";
      }

      if (comment === "") {
        message += "comment is required. ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        swal({
          title: "Are you sure?",
          text: `Do you want to '${status}' this request?`,
          icon: "warning",
          buttons: true,
          dangerMode: true,
        }).then((willApprove) => {
          if (willApprove) {
            $.ajax({
              type: "POST",
              url: "/allleave/update",
              data: {
                leaveid: id,
                employeeid: employeeid,
                status: status,
                leavestartdate: leavestartdate,
                leaveenddate: leaveenddate,
                leaveduration: leaveduration,
                leavepaidays: leavepaidays,
                leaveunpaiddays: leaveunpaiddays,
                comment: comment,
              },
              success: function (result) {
                if (result.msg === "success") {
                  swal(
                    "Save Successfully",
                    "You clicked the button!",
                    "success"
                  ).then(() => {
                    window.location.reload();
                  });
                  LoadTable();
                } else if (result.msg === "conflict") {
                  const conflictingDates = result.conflictingDates.join(", ");
                  swal({
                    title: "You Need to Reject this Request",
                    text: `The following dates are already taken: ${conflictingDates}`,
                    icon: "warning",
                    button: "OK",
                  });
                } else if (result.msg === "error") {
                  swal({
                    title: "Error",
                    text: "An unexpected error occurred while saving data.",
                    icon: "error",
                    button: "OK",
                  });
                } else {
                  swal({
                    title: "Unknown Response",
                    text: "The server returned an unknown response.",
                    icon: "warning",
                    button: "OK",
                  });
                }
              },
              error: function (err) {
                swal("Error", "An error occurred while saving data.", "error");
              },
              error: function (err) {
                swal("Error", "An error occurred while saving data.", "error");
              },
            });
          } else {
            swal("Action Canceled", "", "info");
          }
        });
      }
    });
  });

  function searchTable() {
    var input, filter, found, table, tr, td, i, j;
    input = document.getElementById("myInput2");
    filter = input.value.toUpperCase();
    table = document.getElementById("dataTablependingleave");
    tr = table.getElementsByTagName("tr");
    for (i = 0; i < tr.length; i++) {
      td = tr[i].getElementsByTagName("td");
      for (j = 0; j < td.length; j++) {
        if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
          found = true;
        }
      }
      if (found) {
        tr[i].style.display = "";
        found = false;
      } else {
        tr[i].style.display = "none";
      }
    }
  }
</script>
