<script>
  let base64String = "";
  let approveot_id = "";
  $(document).ready(function () {
    console.log("Initialize");
    let employeeid = "<%= employeeid %>";
    LoadTable();
    LoadPayrollDate();
    EditLoadPayrollDate();
    LoadSubgroup();
    EditLoadSubgroup();

    function LoadTable() {
      $("#dataTableapplyOvertime").DataTable({
        destroy: true,
        processing: true,
        serverSide: true,
        paging: false,
        searching: false,
        info: false,
        scrollY: 400,
        scrollCollapse: true,
        type: "GET",
        ajax: {
          url: "/eportalrequestovertime/load",
          dataSrc: (json) => {
            var finalData = [];
            var data = json.data;

            console.log(data);
            $.each(data, (key, item) => {
              var action = "";
              var status = item.status;

              action = `
                      <button id="editBtn" class="btn text-primary" name="editBtn" data-bs-toggle="modal" data-bs-target="#appliedot"><i class="fas fa-fw fa-pen"></i></button>
                    `;

              finalData.push({
                approveot_id: item.id,
                attendancedate: item.attendancedate,
                clockin: item.clockin,
                clockout: item.clockout,
                totalhours: item.total_hours,
                night_ot: item.night_differentials,
                earlyot: item.early_ot,
                normal_ot: item.normal_ot,
                payrolldate: item.payroll_date,
                overtimestatus: item.status,
                action: action,
              });
            });

            console.log(finalData);

            return finalData;
          },
        },
        columnDefs: [
          {
            targets: 1,
            className: "td-indent",
          },
        ],
        columns: [
          { data: "approveot_id" },
          { data: "attendancedate" },
          { data: "clockin" },
          { data: "clockout" },
          { data: "totalhours" },
          { data: "night_ot" },
          { data: "earlyot" },
          { data: "normal_ot" },
          { data: "payrolldate" },
          { data: "overtimestatus" },
          { data: "action" },
        ],
        createdRow: function (row, data, dataIndex) {
          //miyaka
          var overtimestatusCell = $(row).find("td:eq(9)");

          var overtimestatusText = data.overtimestatus;

          var overtimestatusClass = "";

          switch (overtimestatusText.toLowerCase()) {
            case "approved":
              overtimestatusClass = "approved-status";
              break;
            case "cancelled":
              overtimestatusClass = "cancelled-status";
              break;
            case "pending":
              overtimestatusClass = "pending-status";
              break;
            default:
              overtimestatusClass = "";
          }

          overtimestatusCell.html(
            `<span class="${overtimestatusClass}">${overtimestatusText}</span>`
          );

          $("td", row).each(function (index) {
            this.style.textAlign = "center";
            this.style.verticalAlign = "middle";
          });
        },
        initComplete: function () {
          console.log("Done");
        },
      });
    }

    function LoadSubgroup() {
      $.ajax({
        type: "GET",
        url: "/teamleadusers/subgroupload",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.subgroupid, item.subgroupid);
            $(options).html(item.subgroupname);
            $("#addappliedsubgroup").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    function EditLoadSubgroup() {
      $.ajax({
        type: "GET",
        url: "/teamleadusers/subgroupload",
        success: function (result) {
          var data = result.data;
          $.each(data, function (key, item) {
            var options = new Option(item.subgroupid, item.subgroupid);
            $(options).html(item.subgroupname);
            $("#appliedsubgroup").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    $(document).on("click", "#addappliedday", function () {
      $("#addappliedday").on("change", function () {
        let selectedDate = $(this).val();
        console.log("Selected Date:", selectedDate);
        let formattedDate = new Date(selectedDate).toISOString().split("T")[0];

        console.log("Formatted Date:", formattedDate);
        $.ajax({
          type: "POST",
          url: "/eportalrequestovertime/getattendancedate",
          data: {
            attendancedate: formattedDate,
            employeeid: employeeid,
          },
          success: function (result) {
            if (result.msg === "success") {
              const existingData = result.data;
              const currentDate = new Date();
              const DateSubmmitted = currentDate.toISOString().split("T")[0];

              $.each(existingData, (key, item) => {
                let combinedTime;
                if (item.starttime === item.endtime) {
                  combinedTime = item.pao_starttime;
                } else {
                  combinedTime = `${item.starttime} - ${item.endtime}`;
                }
                $("#addotshiftscheduled").text(combinedTime);
                $("#otpositionname").text(item.schedtimein);
                $("#otdepartmentname").text(item.schedtimeout);
                $("#addotpositionname").text(item.positioname);
                $("#addotdepartmentname").text(item.departmentname);
                $("#addotfullname").text(item.fullname);
                $("#adddatesubmittedot").text(DateSubmmitted);
              });
            } else if (result.msg === "notexist") {
              swal(
                "Warning", "You have No Logs On that Date", "warning"
              ).then((results) => {
                window.location.reload();
              });
              LoadTable();
            } else {
              swal("Error fetching employee data", "", "error");
            }
          },
          error: function (err) {
            swal(
              "An error occurred while fetching employee data",
              err,
              "error"
            );
          },
        });
      });
    });

    $(document).on("click", "#addovertime", function () {
      let clockin = $("#addappliedotstart").val();
      let clockout = $("#addappliedotend").val();
      let attendancedate = $("#addappliedday").val();
      let payrolldate = $("#addpayrolldateot").val();
      let reason = $("#addappliedotreason").val();
      let overtimestatus = $("#addappliedstatusot").val();
      let subgroup = $("#addappliedsubgroup").val();
      let overtimeimage = base64String;

      var message = "";

      if (clockin === "") {
        message += "status is required. ";
      }

      if (clockout === "") {
        message += "status is required. ";
      }

      if (attendancedate === "") {
        message += "status is required. ";
      }

      if (payrolldate === "") {
        message += "status is required. ";
      }

      if (reason === "") {
        message += "status is required. ";
      }

      if (subgroup === "") {
        message += "subgroup is required. ";
      }

      if (overtimestatus === "") {
        message += "status is required. ";
      }

      if (overtimestatus === "Approved") {
        message += "You Are Not Allowed to Approved You're Request";
      }

      if (overtimeimage === "") {
        message += "status is required. ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        function formatDateTime(dateTime) {
          let date = new Date(dateTime);
          let year = date.getFullYear();
          let month = ("0" + (date.getMonth() + 1)).slice(-2);
          let day = ("0" + date.getDate()).slice(-2);
          let hours = ("0" + date.getHours()).slice(-2);
          let minutes = ("0" + date.getMinutes()).slice(-2);
          let seconds = ("0" + date.getSeconds()).slice(-2);
          return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;
        }

        // function extractDate(dateString) {
        //   let dateParts = dateString.split(", ")[1];
        //   return dateParts;
        // }

        let formattedClockin = formatDateTime(clockin);
        let formattedClockout = formatDateTime(clockout);
        // let attendancedateFormatted = extractDate(attendancedate);

        //console.log(attendancedateFormatted, "formatday");
        console.log(formattedClockin, "format");
        console.log(formattedClockout, "format");

        $.ajax({
          type: "POST",
          url: "/eportalrequestovertime/addrequstot",
          data: {
            employeeid: employeeid,
            clockin: formattedClockin,
            clockout: formattedClockout,
            attendancedate: attendancedate,
            payrolldate: payrolldate,
            reason: reason,
            overtimestatus: overtimestatus,
            subgroup: subgroup,
            overtimeimage: overtimeimage,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal(
                "Save Successfully",
                "You clicked the button!",
                "success"
              ).then((results) => {
                window.location.reload();
              });
              LoadTable();
            }
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
          },
        });
      }
    });

    $("#dataTableapplyOvertime tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      console.log(dataRow);
      approveot_id = dataRow[0];
    });
    $(document).on("click", "#editBtn", function () {
      $.ajax({
        type: "POST",
        url: "/eportalrequestovertime/getovertime",
        data: {
          approveot_id: approveot_id,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;
            const currentDate = new Date();
            const DateSubmmitted = currentDate.toISOString().split("T")[0];

            $.each(existingData, (key, item) => {
              $("#id").val(item.approveot_id);
              let combinedTime;
              if (item.start_time === item.end_time) {
                combinedTime = item.start_time;
              } else {
                combinedTime = `${item.start_time} - ${item.end_time}`;
              }
              $("#otshiftscheduled").text(combinedTime);
              $("#otpositionname").text(item.positionname);
              $("#otdepartmentname").text(item.departmentname);
              $("#otfullname").text(item.fullname);
              $("#appliedday").val(item.attendancedate);
              $("#appliedotstart").val(item.clockin);
              $("#appliedotend").val(item.clockout);
              $("#appliedottotal").val(item.totalhours);
              $("#appliednightdiff").val(item.nightdiff);
              $("#appliednormal").val(item.normalot);
              $("#appliedeaarlyot").val(item.earlyot);
              $("#appliedotreason").val(item.reason);
              $("#payrolldateot").val(item.payrolldate);
              $("#appliedstatusot").val(item.status);
              $("#datesubmitted").text(DateSubmmitted);
              $("#nightotpay").val(item.nightotpay);
              $("#normalotpay").val(item.normalotpay);
              $("#earlyotpay").val(item.earlyotpay);
              $("#totalotnetpay").val(item.totalotpay);
              $("#schedtimein").val(item.scheduledtimein);
              $("#schedtimeout").val(item.scheduledtimeout);
              $("#editpreview").attr(
                "src",
                "data:image/jpg;base64," + item.overtimeimage
              );
              base64String = item.overtimeimage;

              console.log(item.clockin);
              console.log(item.clockout);
            });
          } else {
            swal("Error fetching employee data", "success");
          }
        },
        error: function (err) {
          swal("An error occurred while fetching employee data", err, "error");
        },
      });
    });

    function LoadPayrollDate() {
      $.ajax({
        type: "GET",
        url: "/setpayrolldate/loadreq",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.payrolldate, item.payrolldate);
            $(options).html(item.payrolldate);
            $("#payrolldateot").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    function EditLoadPayrollDate() {
      $.ajax({
        type: "GET",
        url: "/setpayrolldate/loadreq",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.payrolldate, item.payrolldate);
            $(options).html(item.payrolldate);
            $("#addpayrolldateot").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    $(document).on("click", "#applyovertimesavebtn", function () {
      console.log("Save button clicked");
      let id = approveot_id;
      let clockin = $("#appliedotstart").val();
      let clockout = $("#appliedotend").val();
      let attendancedate = $("#appliedday").val();
      let payrolldate = $("#payrolldateot").val();
      let reason = $("#appliedotreason").val();
      let overtimestatus = $("#appliedstatusot").val();
      let subgroup = $("#appliedsubgroup").val();
      let overtimeimage = base64String;

      var message = "";

      if (clockin === "") {
        message += "status is required. ";
      }

      if (clockout === "") {
        message += "status is required. ";
      }

      if (attendancedate === "") {
        message += "status is required. ";
      }

      if (payrolldate === "") {
        message += "status is required. ";
      }

      if (reason === "") {
        message += "status is required. ";
      }

      if (overtimestatus === "") {
        message += "status is required. ";
      }

      if (overtimeimage === "") {
        message += "status is required. ";
      }

      if (subgroup === "") {
        message += "status is required. ";
      }

      if (overtimestatus === "Approved") {
        message += "You Are Not Allowed to Approved You're Request";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        function formatDateTime(dateTime) {
          let date = new Date(dateTime);
          let year = date.getFullYear();
          let month = ("0" + (date.getMonth() + 1)).slice(-2);
          let day = ("0" + date.getDate()).slice(-2);
          let hours = ("0" + date.getHours()).slice(-2);
          let minutes = ("0" + date.getMinutes()).slice(-2);
          let seconds = ("0" + date.getSeconds()).slice(-2);
          return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;
        }

        function extractDate(dateString) {
          let dateParts = dateString.split(", ")[1];
          return dateParts;
        }

        let formattedClockin = formatDateTime(clockin);
        let formattedClockout = formatDateTime(clockout);
        let attendancedateFormatted = extractDate(attendancedate);

        console.log(attendancedateFormatted, "format");
        console.log(formattedClockin, "format");
        console.log(formattedClockout, "format");

        $.ajax({
          type: "POST",
          url: "/eportalrequestovertime/update",
          data: {
            employeeid: employeeid,
            approveot_id: id,
            clockin: formattedClockin,
            clockout: formattedClockout,
            attendancedate: attendancedateFormatted,
            payrolldate: payrolldate,
            reason: reason,
            subgroup: subgroup,
            overtimestatus: overtimestatus,
            overtimeimage: overtimeimage,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal(
                "Save Successfully",
                "You clicked the button!",
                "success"
              ).then((results) => {
                window.location.reload();
              });
              LoadTable();
            }
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
          },
        });
      }
    });
  });

  function formatDate(dateString) {
    const date = new Date(dateString);
    const year = date.getFullYear();
    let month = (date.getMonth() + 1).toString().padStart(2, "0");
    let day = date.getDate().toString().padStart(2, "0");
    return `${year}-${month}-${day}`;
  }

  function formatDateTime(dateTime) {
    const formattedDateTime = moment(dateTime).format("YYYY-MM-DD HH:mm:ss");
    return formattedDateTime;
  }

  $(document).on("change", "#editotimage", function (e) {
    const input = document.getElementById("editotimage");
    const file = input.files[0];

    const reader = new FileReader();
    reader.readAsDataURL(file);
    reader.onloadend = function () {
      const preview = document.getElementById("editpreview");
      preview.src = reader.result;
    };
    imageUploadedleave();
  });

  function imageUploadedleave() {
    const input = document.getElementById("editotimage");
    const file = input.files[0];

    var reader = new FileReader();

    reader.onload = function () {
      base64String = reader.result.replace("data:", "").replace(/^.+,/, "");

      imageBase64Stringsep = base64String;
    };
    reader.readAsDataURL(file);
  }

  $(document).on("change", "#uploadimage", function (e) {
    const input = document.getElementById("uploadimage");
    const file = input.files[0];

    const reader = new FileReader();
    reader.readAsDataURL(file);
    reader.onloadend = function () {
      const preview = document.getElementById("preview");
      preview.src = reader.result;
    };
    imageUploaded();
  });

  function imageUploaded() {
    const input = document.getElementById("uploadimage");
    const file = input.files[0];

    var reader = new FileReader();

    reader.onload = function () {
      base64String = reader.result.replace("data:", "").replace(/^.+,/, "");

      imageBase64Stringsep = base64String;
    };
    reader.readAsDataURL(file);
  }
</script>
