<script>
  let approveot_id = "";

  $(document).ready(function () {
    LoadTable();
    searchTable();
    LoadList();
    //LoadEditEmp();

    $(document).on("keyup", "#myInput", function () {
      searchTable();
    });

    function LoadTable() {
      $("#dataTableOtapproval").DataTable({
        destroy: true,
        processing: true,
        serverSide: true,
        paging: false,
        searching: false,
        info: false,
        scrollY: 600,
        scrollCollapse: true,
        serverMethod: "GET",
        ajax: {
          url: "/teamleadappliedovertime/load",
          dataSrc: (json) => {
            var finalData = [];
            var data = json.data;

            console.log(data);
            $.each(data, (key, item) => {
              var action = "";
              var status = item.status;

              action = `<button id="editBtn" class="btn text-primary" name="editBtn" data-bs-toggle="modal" data-bs-target="#otapprovalmodal"><i class="fas fa-fw fa-pen"></i></button>`;

              // var imgElement = document.createElement("img");
              // imgElement.src = "data:image/jpg;base64," + item.image;
              // imgElement.alt = "Profile Image";
              // imgElement.style.width = "90px";
              // imgElement.style.height = "90px";

              finalData.push({
                // image: imgElement.outerHTML,
                approveot_id: item.id,
                fullname: item.fullname,
                attendancedate: item.attendancedate,
                clockin: item.clockin,
                clockout: item.clockout,
                totalhours: item.total_hours,
                payrolldate: item.payroll_date,
                overtimestatus: item.status,
                action: action,
              });
            });

            return finalData;
          },
        },
        columnDefs: [
          {
            targets: 1,
            className: "td-indent",
          },
        ],
        columns: [
          // { data: "image" },
          { data: "approveot_id" },
          { data: "fullname" },
          { data: "attendancedate" },
          { data: "clockin" },
          { data: "clockout" },
          { data: "totalhours" },
          { data: "payrolldate" },
          { data: "overtimestatus" },
          { data: "action" },
        ],
        createdRow: function (row, data, dataIndex) {
          $("td", row).each(function (index) {
            this.style.textAlign = "center";
            this.style.verticalAlign = "middle";
          });
        },
        initComplete: function () {},
      });
    }

    function LoadList() {
      $.ajax({
        type: "GET",
        url: "/setpayrolldate/loadreq",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.payrolldate, item.payrolldate);
            $(options).html(item.payrolldate);
            $("#appliedpayrolldate").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    // function LoadEditEmp() {
    //   $.ajax({
    //     type: "GET",
    //     url: "/employee/load",
    //     success: function (result) {
    //       var data = result.data;

    //       $.each(data, function (key, item) {
    //         var options = new Option(item.id, item.id);
    //         $(options).html(item.fullname);
    //         $("#appliedotfullname").append(options);
    //       });
    //     },
    //     error: function (result) {
    //       alert("error: " + result.data);
    //     },
    //   });
    // }

    $("#dataTableOtapproval tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      console.log(dataRow);
      approveot_id = dataRow[0];
    });

    $(document).on("click", "#editBtn", function () {
      $.ajax({
        type: "POST",
        url: "/teamleadappliedovertime/getotapproval",
        data: {
          approveot_id: approveot_id,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            $.each(existingData, (key, item) => {
              $("#previewleave").attr("src", "data:image/jpg;base64," + item.overtimeimage);
              base64String = item.overtimeimage;
              $("#appliedotfullname").val(item.fullname);
              $("#appliedattendancedate").val(item.attendancedate);
              $("#appliedclockin").val(item.clockin);
              $("#appliedclockout").val(item.clockout);
              $("#totalothours").val(item.total_hours);
              $("#totalnightdiff").val(item.night_differentials);
              $("#totalearlytot").val(item.early_ot);
              $("#totalnormalot").val(item.normal_ot);
              $("#appliedpayrolldate").val(item.payroll_date);
              $("#appliedreason").val(item.reason);
              $("#appliedstatus").val(item.status);
            });
          } else {
            swal("Error fetching employee data", message, "error");
          }
        },
        error: function (err) {
          swal(
            "An error occurred while fetching employee data",
            message,
            "error"
          );
        },
      });
    });


    $(document).on("click", "#otsavebutton", function () {
      console.log("hit");
      let id = approveot_id;
      let requeststatus = $("#appliedstatus").val();
      let comment = $("#otcomment").val();

      console.log(approveot_id, "LEAVE");
      console.log(requeststatus, "LEAVE");
      console.log(comment, "LEAVE");

      var message = "";

      if (requeststatus === "") {
        message += "Status is required. ";
      }

      if (comment === "") {
        message += "comment is required. ";
      }

      if (message !== "") {
        swal("Oops!!!", message, "error");
      } else {
        $.ajax({
          type: "POST",
          url: "/teamleadappliedovertime/ovetimeaction",
          data: {
            approveot_id: approveot_id,
            status: requeststatus,
            comment: comment,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal({
                title: "Saved Successfully",
                text: "You clicked the button!",
                icon: "success",
                button: "OK!",
              }).then((results) => {
                window.location.reload();
              });
              LoadTable();
            } else {
              swal({
                title: "Exist",
                text: "Data already exists!",
                icon: "warning",
                button: "OK!",
              });
            }
          },
          error: function (err) {
            swal("Data already exist!", "You clicked the button!", "warning");
          },
        });
      }
    });

    $(document).on("click", "#otsavebutton", function () {
      console.log("HIT");
      let id = approveot_id;
      let night_ot = $("#otnight").val();
      let earlyot = $("#otearly").val();
      let normal_ot = $("#otnormal").val();
      let payrolldate = $("#otpayrolldate").val();
      let overtimestatus = $("#otstatus").val();

      var message = "";

      if (night_ot === "") {
        message += "departmentname is required. ";
      }

      if (earlyot === "") {
        message += "departmentname is required. ";
      }

      if (normal_ot === "") {
        message += "departmenthead is required. ";
      }

      if (payrolldate === "") {
        message += "status is required. ";
      }

      if (overtimestatus === "Applied" || overtimestatus === "Pending") {
        message += "You Need to Approve or Disregard. ";
      }
      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "POST",
          url: "otapproval/update",
          data: {
            approveot_id: id,
            night_ot: night_ot,
            earlyot: earlyot,
            normal_ot: normal_ot,
            payrolldate: payrolldate,
            overtimestatus: overtimestatus,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal(
                "Update Successfully",
                "You clicked the button!",
                "success"
              ).then((results) => {
                window.location.reload();
              });
              LoadTable();
            } else if (result.msg == "exist") {
              swal("Exist", "Data already exists!", "warning");
            }
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
          },
        });
      }
    });

    // Event listener for clockin and clockout input fields
    // $("#otclockin, #otclockout").on("change", function () {
    //   // Get the values of clockin and clockout
    //   let clockinValue = $("#otclockin").val();
    //   let clockoutValue = $("#otclockout").val();

    //   // Calculate duration in minutes
    //   let duration = moment
    //     .duration(
    //       moment(clockoutValue, "HH:mm").diff(moment(clockinValue, "HH:mm"))
    //     )
    //     .asMinutes();

    //   // Adjust night_ot, earlyot, and normal_ot based on duration
    //   if (duration >= 480) {
    //     // 8 hours or more
    //     $("#otnight").val(duration);
    //     $("#otearly").val(0);
    //     $("#otnormal").val(0);
    //   } else if (duration >= 240) {
    //     // 4 to 8 hours
    //     $("#otnight").val(0);
    //     $("#otearly").val(duration);
    //     $("#otnormal").val(0);
    //   } else {
    //     // Less than 4 hours
    //     $("#otnight").val(0);
    //     $("#otearly").val(0);
    //     $("#otnormal").val(duration);
    //   }
    // });

    $(document).on("change", "#otimage", function (e) {
      const input = document.getElementById("otimage");
      const file = input.files[0];

      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onloadend = function () {
        const preview = document.getElementById("previewleave");
        preview.src = reader.result;
      };
      editimage();
    });

    function editimage() {
      const input = document.getElementById("otimage");
      const file = input.files[0];

      var reader = new FileReader();
      reader.onload = function (e) {
        const img = new Image();
        img.src = e.target.result;

        img.onload = function () {
          const canvas = document.createElement("canvas");
          const ctx = canvas.getContext("2d");

          const targetWidth = 250;
          const targetHeight = 250;
          canvas.width = targetWidth;
          canvas.height = targetHeight;

          ctx.drawImage(img, 0, 0, targetWidth, targetHeight);

          base64String = canvas
            .toDataURL()
            .replace("data:image/png;base64,", "");

          imageBase64Stringsep = base64String;
        };
      };
      reader.readAsDataURL(file);
    }

    // function populateEventDropdown() {
    //     var dropdown = document.getElementById("otpayrolldate");
    //     dropdown.innerHTML = "";

    //     var currentDate = new Date();
    //     var currentYear = currentDate.getFullYear();
    //     var currentMonth = currentDate.getMonth() + 1;
    //     var currentDay = currentDate.getDate();

    //     var nextMonth = currentMonth + 1;
    //     var nextYear = currentYear;
    //     if (nextMonth > 12) {
    //         nextMonth = 1;
    //         nextYear++;
    //     }

    //     if (currentDay <= 15) {
    //         dropdown.add(new Option(currentYear + "-" + addZero(currentMonth) + "-15", currentYear + "-" + addZero(currentMonth) + "-15"));
    //     }

    //     var lastDayCurrentMonth = new Date(currentYear, currentMonth, 0).getDate();
    //     dropdown.add(new Option(currentYear + "-" + addZero(currentMonth) + "-" + lastDayCurrentMonth, currentYear + "-" + addZero(currentMonth) + "-" + lastDayCurrentMonth));

    //     dropdown.add(new Option(nextYear + "-" + addZero(nextMonth) + "-15", nextYear + "-" + addZero(nextMonth) + "-15"));

    //     var lastDayNextMonth = new Date(nextYear, nextMonth, 0).getDate();
    //     dropdown.add(new Option(nextYear + "-" + addZero(nextMonth) + "-" + lastDayNextMonth, nextYear + "-" + addZero(nextMonth) + "-" + lastDayNextMonth));
    // }

    // function addZero(number) {
    //     return number < 10 ? "0" + number : number;
    // }

    // populateEventDropdown();

    function searchTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInput");
      filter = input.value.toUpperCase();
      table = document.getElementById("dataTableOtapproval");
      tr = table.getElementsByTagName("tr");
      for (i = 0; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
          }
        }
        if (found) {
          tr[i].style.display = "";
          found = false;
        } else {
          tr[i].style.display = "none";
        }
      }
    }
  });
</script>
