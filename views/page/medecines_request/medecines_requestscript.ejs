<script>
  let requestid = "";
  let medecineid = "";

  $(document).ready(function () {
    LoadTable();
    LoadList();
    searchTable();
    LoadListEdit();
    LoadMedecine();
    EditPayrollDate();

    $(document).on("keyup", "#myInput", function () {
      searchTable();
    });

    function LoadTable() {
      $("#dataTableMedecineRequest").DataTable({
        destroy: true,
        processing: true,
        serverSide: true,
        paging: false,
        searching: false,
        info: false,
        scrollY: 600,
        scrollCollapse: true,
        serverMethod: "GET",
        ajax: {
          url: "/medecines_request/load",
          dataSrc: (json) => {
            var finalData = [];
            var data = json.data;

            console.log(data);

            $.each(data, (key, item) => {
              var action = "";
              var status = item.status;

              action = `
                    <button id="editBtn" class="btn text-primary" name="editBtn" data-bs-toggle="modal" data-bs-target="#editadjustmentmodal"><i class="fas fa-fw fa-pen"></i></button>
                    `;
              finalData.push({
                requestid: item.requestid,
                fullname: item.fullname,
                medecinename: item.medecinename,
                quantity: item.quantity,
                medecinecategory: item.medecinecategory,
                quantityrequest: item.quantityrequest,
                requestdate: item.requestdate,
                approvedby: item.approvedby,
                action: action,
              });
            });

            return finalData;
          },
        },
        columns: [
          { data: "requestid" },
          { data: "fullname" },
          { data: "medecinename" },
          { data: "quantity" },
          { data: "medecinecategory" },
          { data: "quantityrequest" },
          { data: "requestdate" },
          { data: "approvedby" },
          { data: "action" },
        ],
        createdRow: function (row, data, dataIndex) {
          // //miyaka
          var statusCell = $(row).find("td:eq(2)");

          var statusText = data.medecinename;

          var statusClass = "";

          // switch (statusText.toLowerCase()) {
          //   case "active":
          //     statusClass = "active-status";
          //     break;
          //   case "inactive":
          //     statusClass = "inactive-status";
          //     break;
          //   default:
          //     statusClass = "";
          // }

          statusCell.html(`<span class="${statusClass}">${statusText}</span>`);

          $("td", row).each(function (index) {
            this.style.textAlign = "center";
            this.style.verticalAlign = "middle";
          });
        },
        initComplete: function () {},
      });
    }

    $("#medreqemployeename").on("change", function () {
      let employeeid = $(this).val();
      $.ajax({
        type: "POST",
        url: "/payroll_adjustments/getimage",
        data: {
          employeeid: employeeid,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            $.each(existingData, (key, item) => {
              $("#previewleave").attr(
                "src",
                "data:image/jpg;base64," + item.profile_pic
              );
            });
          } else {
            swal("Error fetching employee data", "", "error");
          }
        },
        error: function (err) {
          swal("An error occurred while fetching employee data", err, "error");
        },
      });
    });

    $("#medreqname").on("change", function () {
      let medecineid = $(this).val();
      $.ajax({
        type: "POST",
        url: "/medecines_request/getmedecinequantity",
        data: {
          medecineid: medecineid,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            let totalQuantity = 0;
            $.each(existingData, (key, item) => {
              totalQuantity += parseInt(item.quantity, 10);
            });

            $("#medreqtotalquantity").val(totalQuantity);
          } else {
            swal("Error fetching medecine data", "", "error");
          }
        },
        error: function (err) {
          swal("An error occurred while fetching medecine data", err, "error");
        },
      });
    });

    $(document).on("click", "#medreqsavebtn", function () {
      let employeeid = $("#medreqemployeename").val();
      let medecinename = $("#medreqname").val();
      let medecinerequestednumber = $("#medrequsetednumber").val();
      let medreqreason = $("#medreqreason").val();

      var message = "";

      if (employeeid == "") {
        message += "Employee Name is required ";
      }

      if (medecinename == "") {
        message += "Type is required ";
      }

      if (medecinerequestednumber == "") {
        message += "Amount is required ";
      } else if (
        isNaN(medecinerequestednumber) ||
        medecinerequestednumber <= 0
      ) {
        message += "Amount must be a valid number greater than zero ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "POST",
          url: "/medecines_request/check_quantity", 
          data: {
            medecinename: medecinename,
            medecinerequestednumber: medecinerequestednumber,
          },
          success: function (result) {
            if (result.status === "success") {
              $.ajax({
                type: "POST",
                url: "/medecines_request/save",
                data: {
                  employeeid: employeeid,
                  medecinename: medecinename,
                  medecinerequestednumber: medecinerequestednumber,
                  medreqreason: medreqreason,
                },
                success: function (result) {
                  if (result.msg == "success") {
                    swal(
                      "Save Successfully",
                      "Medicine request saved successfully!",
                      "success"
                    ).then((result) => {
                      window.location.reload();
                    });
                    LoadTable(); 
                  } else if (result.msg == "exist") {
                    swal("Error", "This combination already exists.", "error");
                  }
                },
                error: function (err) {
                  swal(
                    "Error",
                    "An error occurred while saving data.",
                    "error"
                  );
                },
              });
            } else if (result.status === "error") {
              swal("Error", result.message, "error");
            }
          },
          error: function (err) {
            swal(
              "Error",
              "An error occurred while checking quantity.",
              "error"
            );
          },
        });
      }
    });

    function LoadList() {
      $.ajax({
        type: "GET",
        url: "/employee/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.id, item.id);
            $(options).html(item.fullname);
            $("#medreqemployeename").append(options);
          });
        },
        error: function (result) {
          swal("error: " + result.data);
        },
      });
    }

    function LoadMedecine() {
      $.ajax({
        type: "GET",
        url: "/medecines/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.medecineid, item.medecineid);
            $(options).html(item.name + " - " + item.category);
            $("#medreqname").append(options);
          });
        },
        error: function (result) {
          swal("Error fetching employee data", "", "error");
        },
      });
    }

    function LoadListEdit() {
      $.ajax({
        type: "GET",
        url: "/employee/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.id, item.id);
            $(options).html(item.fullname);
            $("#editpaemployeename").append(options);
          });
        },
        error: function (result) {
          swal("error: " + result.data);
        },
      });
    }

    function EditPayrollDate() {
      $.ajax({
        type: "GET",
        url: "/setpayrolldate/loadreq",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.payrolldate, item.payrolldate);
            $(options).html(item.payrolldate);
            $("#editpapayrolldate").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    $("#dataTableMedecineRequest tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      adjustmentid = dataRow[0];
      console.log(dataRow);
    });

    $(document).on("click", "#editBtn", function () {
      $.ajax({
        type: "POST",
        url: "/payroll_adjustments/getpayrolladjustment",
        data: {
          adjustmentid: adjustmentid,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            $.each(existingData, (key, item) => {
              $("#editpaemployeename").val(item.employeeid);
              $("#editpaorigindate").val(item.origindate);
              $("#editpatype").val(item.adjustmenttype);
              $("#editpaamount").val(item.adjust_amount);
              $("#editpapayrolldate").val(item.payrolldate);
              $("#editstatuspa").val(item.adjustmentstatus);
              $("#editpareason").val(item.reason);
              $("#preview").attr("src", "data:image/jpg;base64," + item.image);
            });
          } else {
            swal("Error fetching employee data", msg, "error");
          }
        },
        error: function (err) {
          console.error("An error occurred while fetching employee data", err);
          swal("An error occurred while fetching employee data", msg, "error");
        },
      });
    });

    $(document).on("click", "#adjustmenteditbtn", function () {
      let id = adjustmentid;
      let employeeid = $("#editpaemployeename").val();
      let origindate = $("#editpaorigindate").val();
      let adjustmenttype = $("#editpatype").val();
      let adjust_amount = $("#editpaamount").val();
      let payrolldate = $("#editpapayrolldate").val();
      let adjustmentstatus = $("#editstatuspa").val();
      let reason = $("#editpareason").val();

      let message = "";

      if (employeeid === "") {
        message += "employeeid ID is required. ";
      }

      if (adjustmenttype === "") {
        message += "adjustmenttype is required. ";
      }

      if (adjust_amount === "") {
        message += "adjust_amount is required. ";
      }

      if (payrolldate === "") {
        message += "payrolldate is required. ";
      }

      if (adjustmentstatus === "") {
        message += "adjustmentstatus is required. ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "PUT",
          url: "/payroll_adjustments/edit",
          data: {
            adjustmentid: id,
            employeeid: employeeid,
            origindate: origindate,
            adjustmenttype: adjustmenttype,
            adjust_amount: adjust_amount,
            payrolldate: payrolldate,
            adjustmentstatus: adjustmentstatus,
            reason: reason,
          },
          success: function (result) {
            if (result.msg === "success") {
              swal({
                title: "Update Successfully",
                text: "You clicked the button!",
                icon: "success",
                button: "OK!",
              }).then(() => {
                window.location.reload();
              });
            } else if (result.msg === "exist") {
              swal(
                "Exist",
                "Maybe The Department and Approver Count combination already exists.",
                "warning"
              );
            } else {
              swal("Error", "An error occurred while updating.", "error");
            }
          },
          error: function (err) {
            swal(
              "Error",
              "An error occurred while making the request.",
              "error"
            );
          },
        });
      }
    });

    function searchTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInput");
      filter = input.value.toUpperCase();
      table = document.getElementById("dataTableMedecineRequest");
      tr = table.getElementsByTagName("tr");
      for (i = 0; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
          }
        }
        if (found) {
          tr[i].style.display = "";
          found = false;
        } else {
          tr[i].style.display = "none";
        }
      }
    }
  });
</script>
