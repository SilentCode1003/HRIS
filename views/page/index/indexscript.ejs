<script>
  $(document).ready(function () {
    //#region declaration
    let leaveid = "";
    let cashadvanceid = "";
    let anouncementdiv = "";
    let bdaydiv = "";
    let approveot_id = "";
    let requestid = "";
    let holidayid = "";
    let base64String = "";
    let rdotid = "";
    LoadEditEmp();
    LoadList();
    LoadListHoliday();
    LoadListRdot();
    //LoadTable();
    loadtotalCard();
    LoadBdayFolks();
    loadleaveBadge();
    loadCashBadge();
    loadOvertimeBadge();
    loadCOABadge();
    loadattendanceBadge();
    loadHolidayBadge();
    LoadSubgroup();
    loadRDOTbadge();
    loadregularCard();
    loadprobitionaryCard();
    loadresignedCard();
    loadtotaladminCard();
    loadtotalITCard();
    loadtotalcablingCard();
    loadtotalcandidateCard();
    loadtotalbagapuroCard();
    loadtotalapprenticeCard();
    load1YearCard();
    searchEmployeeTable();
    searchRegularTable();
    searchprobaTable();
    searchresignedTable();
    searchadminTable();
    searchitTable();
    searchcablingTable();
    searchcandidateTable();
    searchbagapuroTable();
    searchapprenticeTable();
    GenerateAnouncement();
    fetchDepartmentCards();

    //#endregion

    //#region search key up

    $(document).on("keyup", "#myInputtotal", function () {
      searchEmployeeTable();
    });

    $(document).on("keyup", "#myInputRegular", function () {
      searchRegularTable();
    });

    $(document).on("keyup", "#myInputproba", function () {
      searchprobaTable();
    });

    $(document).on("keyup", "#myInputresigned", function () {
      searchresignedTable();
    });

    $(document).on("keyup", "#myInputtotaladmin", function () {
      searchadminTable();
    });

    $(document).on("keyup", "#myInputtotalit", function () {
      searchitTable();
    });

    $(document).on("keyup", "#myInputtotalcabling", function () {
      searchcablingTable();
    });

    $(document).on("keyup", "#myInputtotalcandidate", function () {
      searchcandidateTable();
    });

    $(document).on("keyup", "#myInputtotalbagapuro", function () {
      searchbagapuroTable();
    });

    $(document).on("keyup", "#myInputtotalapprentice", function () {
      searchapprenticeTable();
    });

    //#endregion

    //#region department card

    function fetchDepartmentCards() {
      $.ajax({
        type: "GET",
        url: "/department/loaddepartmentcard",
        success: function (response) {
          if (response.msg === "success") {
            const departmentData = response.data;
            renderDepartmentCards(departmentData);
          } else {
            console.error("Error fetching department data:", response.data);
          }
        },
        error: function (err) {
          console.error("Error fetching department data:", err);
        },
      });
    }

    function renderDepartmentCards(departmentData) {
      const departmentCardsContainer = $("#departmentCardsContainer");
      departmentCardsContainer.empty();

      departmentData.forEach((department, index) => {
        if (
          department &&
          department.DepartmentName &&
          department.EmployeeCount !== undefined &&
          department.Icon &&
          department.DepartmentID
        ) {
          const employeeCount =
            department.EmployeeCount > 0 ? department.EmployeeCount : 0;

          const cardHtml = `
            <div data-toggle="modal" id="department${index}" data-target="#${department.DepartmentID}Modal"
              class="card-link col-xl-2 col-md-6 mb-4 datacard" data-department-id="${department.DepartmentID}">
              <div id="total${department.DepartmentID}" class="card h-100 py-2 db-card department-card">
                <div class="card-body">
                  <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                      <div class="text-xs font-weight-bold text-uppercase mb-1 card-text">
                        ${department.DepartmentName}
                      </div>
                      <div class="h5 mb-0 font-weight-bold card-text">${employeeCount}</div>
                    </div>
                    <div class="col-auto">
                      <img src="data:image/png;base64,${department.Icon}" class="department-icon" />
                    </div>
                  </div>
                </div>
              </div>
            </div>
          `;

          departmentCardsContainer.append(cardHtml);
        } else {
          console.error(
            "Error: Incomplete department data at index",
            index,
            ":",
            department
          );
        }
      });

      $(document).on("click", ".datacard", function () {
        const departmentId = $(this).data("department-id");

        console.log(departmentId, "id");

        $.ajax({
          type: "POST",
          url: "/department/loadmodal",
          data: {
            departmentid: departmentId,
          },
          success: function (response) {
            if (response.msg === "success") {
              renderDepartmentModal(response.data);
              $("#totalCablingModal .h3").text(response.data.departmentName);
            } else {
              console.error("Error fetching department data:", response.data);
            }
          },
          error: function (err) {
            console.error("Error fetching department data:", err);
          },
        });
      });

      function renderDepartmentModal(modalData) {
        const departmentName = modalData[0].departmentName;
        $("#alldepartmentname").text(departmentName);
        console.log(departmentName);
        $("#totalcablingtable tbody").empty();
        modalData.forEach((employee) => {
          const row = `
            <tr>
                <td>${employee.newEmployeeId}</td>
                <td>${employee.firstname}</td>
                <td>${employee.phone}</td>
                <td>${employee.email}</td>
                <td>${employee.position}</td>
                <td>${employee.tenure}</td>
            </tr>
        `;
          $("#totalcablingtable tbody").append(row);
        });
        $("#totalCablingModal").modal("show");
      }
    }

    //#endregion

    //#region Load Modal Table
    //#Employee Modal
    $(document).on("click", "#totalEMP", function () {
      $.ajax({
        type: "GET",
        url: "/employee/totalactive",
        success: function (json) {
          var data = json.data;

          populatedatatable(data);
        },
        error: function (xhr, status, error) {},
      });
    });

    function populatedatatable(data) {
      const tableBody = $("#dataTableemployees tbody");
      tableBody.empty();

      if (data.length === 0) {
        const tr = $("<tr>").append(
          $("<td>", {
            colspan: 7,
            class: "text-center",
            text: "No Data Matched",
          })
        );
        tableBody.append(tr);
      } else {
        data.forEach((item) => {
          const tr = $("<tr>").append(
            // $("<td>", {
            //   html: item.profilePicturePath
            //     ? `<img src="data:image/jpg;base64,${item.profilePicturePath}" alt="Product Image" class="" style="max-width: 90px; max-height: 90px;"/>`
            //     : "No Image",
            //   "data-label": "Product Image",
            // }),
            $("<td>", {
              text: item.newEmployeeId,
              "data-label": "ID",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.firstname,
              "data-label": "Name",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.phone,
              "data-label": "Contact",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.email,
              "data-label": "Email",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.jobstatus,
              "data-label": "Job Status",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.department,
              "data-label": "Department",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.position,
              "data-label": "Position",
              class: "custom-mobile-align",
            })
          );

          tableBody.append(tr);
        });
      }
    }

    //#Regular Employee Modal
    $(document).on("click", "#totalregularEMP", function () {
      $(`#regularemloyeetbl`).find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/employee/totalregular",
        success: function (json) {
          var finalData = [];
          var data = json.data;
          populateregularemloyeetbl(data);
        },
        error: function (xhr, status, error) {},
      });
    });

    function populateregularemloyeetbl(data) {
      const tableBody = $("#regularemloyeetbl tbody");
      tableBody.empty();

      if (data.length === 0) {
        const tr = $("<tr>").append(
          $("<td>", {
            colspan: 7,
            class: "text-center",
            text: "No Data Matched",
          })
        );
        tableBody.append(tr);
      } else {
        data.forEach((item) => {
          const tr = $("<tr>").append(
            // $("<td>", {
            //   html: item.profilePicturePath
            //     ? `<img src="data:image/jpg;base64,${item.profilePicturePath}" alt="Product Image" class="" style="max-width: 90px; max-height: 90px;"/>`
            //     : "No Image",
            //   "data-label": "Product Image",
            // }),
            $("<td>", {
              text: item.newEmployeeId,
              "data-label": "ID",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.firstname,
              "data-label": "Name",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.contact,
              "data-label": "Contact",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.email,
              "data-label": "Email",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.me_department,
              "data-label": "Department",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.me_position,
              "data-label": "Position",
              class: "custom-mobile-align",
            })
          );

          tableBody.append(tr);
        });
      }
    }

    //#Probationary Employee Modal
    $(document).on("click", "#totalprobiEMP", function () {
      $(`#probiemloyeetbl`).find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/employee/totalprobi",
        success: function (json) {
          var finalData = [];
          var data = json.data;
          populateprobiemloyeetbl(data);
        },
        error: function (xhr, status, error) {},
      });
    });

    function populateprobiemloyeetbl(data) {
      const tableBody = $("#probiemloyeetbl tbody");
      tableBody.empty();

      if (data.length === 0) {
        const tr = $("<tr>").append(
          $("<td>", {
            colspan: 7,
            class: "text-center",
            text: "No Data Matched",
          })
        );
        tableBody.append(tr);
      } else {
        data.forEach((item) => {
          const tr = $("<tr>").append(
            // $("<td>", {
            //   html: item.profilePicturePath
            //     ? `<img src="data:image/jpg;base64,${item.profilePicturePath}" alt="Product Image" class="" style="max-width: 90px; max-height: 90px;"/>`
            //     : "No Image",
            //   "data-label": "Product Image",
            // }),
            $("<td>", {
              text: item.newEmployeeId,
              "data-label": "ID",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.firstname,
              "data-label": "Name",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.phone,
              "data-label": "Contact",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.email,
              "data-label": "Email",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.department,
              "data-label": "Department",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.position,
              "data-label": "Position",
              class: "custom-mobile-align",
            })
          );

          tableBody.append(tr);
        });
      }
    }

    //#Resigned Employee
    $(document).on("click", "#totalresignedEMP", function () {
      $(`#resignedemployeetbl`).find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/employee/totalresigned",
        success: function (json) {
          var finalData = [];
          var data = json.data;
          populateresignedemployeetbl(data);
        },
        error: function (xhr, status, error) {},
      });
    });

    function populateresignedemployeetbl(data) {
      const tableBody = $("#resignedemployeetbl tbody");
      tableBody.empty();

      if (data.length === 0) {
        const tr = $("<tr>").append(
          $("<td>", {
            colspan: 8,
            class: "text-center",
            text: "No Data Matched",
          })
        );
        tableBody.append(tr);
      } else {
        data.forEach((item) => {
          const tr = $("<tr>").append(
            // $("<td>", {
            //   html: item.profilePicturePath
            //     ? `<img src="data:image/jpg;base64,${item.profilePicturePath}" alt="Product Image" class="" style="max-width: 90px; max-height: 90px;"/>`
            //     : "No Image",
            //   "data-label": "Product Image",
            // }),
            $("<td>", {
              text: item.newEmployeeId,
              "data-label": "ID",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.firstname,
              "data-label": "Name",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.phone,
              "data-label": "Contact",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.department,
              "data-label": "Department",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.position,
              "data-label": "Position",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.reason,
              "data-label": "Reason",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.dateresigned,
              "data-label": "Date Resigned",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.createdate,
              "data-label": "Create Date",
              class: "custom-mobile-align",
            })
          );

          tableBody.append(tr);
        });
      }
    }

    //#Total Admin
    $(document).on("click", "#totaladminEMP", function () {
      $(`#totaladmintable`).find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/totaladmin",
        success: function (json) {
          var finalData = [];
          var data = json.data;
          populatetotaladmintable(data);
        },
        error: function (xhr, status, error) {},
      });
    });

    function populatetotaladmintable(data) {
      const tableBody = $("#totaladmintable tbody");
      tableBody.empty();

      if (data.length === 0) {
        const tr = $("<tr>").append(
          $("<td>", {
            colspan: 7,
            class: "text-center",
            text: "No Data Matched",
          })
        );
        tableBody.append(tr);
      } else {
        data.forEach((item) => {
          const tr = $("<tr>").append(
            // $("<td>", {
            //   html: item.profilePicturePath
            //     ? `<img src="data:image/jpg;base64,${item.profilePicturePath}" alt="Product Image" class="" style="max-width: 90px; max-height: 90px;"/>`
            //     : "No Image",
            //   "data-label": "Product Image",
            // }),
            $("<td>", {
              text: item.newEmployeeId,
              "data-label": "ID",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.firstname,
              "data-label": "Name",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.phone,
              "data-label": "Contact",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.email,
              "data-label": "Email",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.position,
              "data-label": "Position",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.tenure,
              "data-label": "Tenure",
              class: "custom-mobile-align",
            })
          );

          tableBody.append(tr);
        });
      }
    }

    //#Total IT Department
    $(document).on("click", "#totalitEMP", function () {
      $(`#totalittable`).find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/index/totalIT",
        success: function (json) {
          var finalData = [];
          var data = json.data;
          populatetotalittable(data);
        },
        error: function (xhr, status, error) {},
      });
    });

    function populatetotalittable(data) {
      const tableBody = $("#totalittable tbody");
      tableBody.empty();

      if (data.length === 0) {
        const tr = $("<tr>").append(
          $("<td>", {
            colspan: 6,
            class: "text-center",
            text: "No Data Matched",
          })
        );
        tableBody.append(tr);
      } else {
        data.forEach((item) => {
          const tr = $("<tr>").append(
            // $("<td>", {
            //   html: item.profilePicturePath
            //     ? `<img src="data:image/jpg;base64,${item.profilePicturePath}" alt="Product Image" class="" style="max-width: 90px; max-height: 90px;"/>`
            //     : "No Image",
            //   "data-label": "Product Image",
            // }),
            $("<td>", {
              text: item.newEmployeeId,
              "data-label": "ID",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.firstname,
              "data-label": "Name",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.phone,
              "data-label": "Contact",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.email,
              "data-label": "Email",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.position,
              "data-label": "Position",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.tenure,
              "data-label": "Tenure",
              class: "custom-mobile-align",
            })
          );

          tableBody.append(tr);
        });
      }
    }

    //#Total Cabling Department
    $(document).on("click", "#totalcablingEMP", function () {
      $(`#totalcablingtable`).find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/index/totalcabling",
        success: function (json) {
          var finalData = [];
          var data = json.data;
          populatetotalcablingtable(data);
        },
        error: function (xhr, status, error) {},
      });
    });

    function populatetotalcablingtable(data) {
      const tableBody = $("#totalcablingtable tbody");
      tableBody.empty();

      if (data.length === 0) {
        const tr = $("<tr>").append(
          $("<td>", {
            colspan: 6,
            class: "text-center",
            text: "No Data Matched",
          })
        );
        tableBody.append(tr);
      } else {
        data.forEach((item) => {
          const tr = $("<tr>").append(
            // $("<td>", {
            //   html: item.profilePicturePath
            //     ? `<img src="data:image/jpg;base64,${item.profilePicturePath}" alt="Product Image" class="" style="max-width: 90px; max-height: 90px;"/>`
            //     : "No Image",
            //   "data-label": "Product Image",
            // }),
            $("<td>", {
              text: item.newEmployeeId,
              "data-label": "ID",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.firstname,
              "data-label": "Name",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.phone,
              "data-label": "Contact",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.email,
              "data-label": "Email",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.position,
              "data-label": "Position",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.tenure,
              "data-label": "Tenure",
              class: "custom-mobile-align",
            })
          );

          tableBody.append(tr);
        });
      }
    }

    //#Total Candidate for Regular
    $(document).on("click", "#totalcandidate", function () {
      $(`#totalcandidatetable`).find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/index/totalcandidate",
        success: function (json) {
          var finalData = [];
          var data = json.data;
          populatetotalcandidatetable(data);
        },
        error: function (xhr, status, error) {},
      });
    });

    function populatetotalcandidatetable(data) {
      const tableBody = $("#totalcandidatetable tbody");
      tableBody.empty();

      if (data.length === 0) {
        const tr = $("<tr>").append(
          $("<td>", {
            colspan: 6,
            class: "text-center",
            text: "No Data Matched",
          })
        );
        tableBody.append(tr);
      } else {
        data.forEach((item) => {
          const tr = $("<tr>").append(
            // $("<td>", {
            //   html: item.profilePicturePath
            //     ? `<img src="data:image/jpg;base64,${item.profilePicturePath}" alt="Product Image" class="" style="max-width: 90px; max-height: 90px;"/>`
            //     : "No Image",
            //   "data-label": "Product Image",
            // }),
            $("<td>", {
              text: item.newEmployeeId,
              "data-label": "ID",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.firstname,
              "data-label": "Name",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.department,
              "data-label": "Department",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.hiredate,
              "data-label": "Hire Date",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.position,
              "data-label": "Position",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.tenure,
              "data-label": "Tenure",
              class: "custom-mobile-align",
            })
          );

          tableBody.append(tr);
        });
      }
    }

    //#Bagapuro Family
    $(document).on("click", "#totalbagapuro", function () {
      $(`#totalbagapurotable`).find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/index/totalbagapuroapi",
        success: function (json) {
          var finalData = [];
          var data = json.data;
          populatetotalbagapurotable(data);
        },
        error: function (xhr, status, error) {},
      });
    });

    function populatetotalbagapurotable(data) {
      const tableBody = $("#totalbagapurotable tbody");
      tableBody.empty();

      if (data.length === 0) {
        const tr = $("<tr>").append(
          $("<td>", {
            colspan: 6,
            class: "text-center",
            text: "No Data Matched",
          })
        );
        tableBody.append(tr);
      } else {
        data.forEach((item) => {
          const tr = $("<tr>").append(
            // $("<td>", {
            //   html: item.profilePicturePath
            //     ? `<img src="data:image/jpg;base64,${item.profilePicturePath}" alt="Product Image" class="" style="max-width: 90px; max-height: 90px;"/>`
            //     : "No Image",
            //   "data-label": "Product Image",
            // }),
            $("<td>", {
              text: item.newEmployeeId,
              "data-label": "ID",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.firstname,
              "data-label": "Name",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.department,
              "data-label": "Department",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.hiredate,
              "data-label": "Hire Date",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.position,
              "data-label": "Position",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.tenure,
              "data-label": "Tenure",
              class: "custom-mobile-align",
            })
          );

          tableBody.append(tr);
        });
      }
    }

    //#Apprentice Modal
    $(document).on("click", "#totalapprentice", function () {
      $(`#totalapprenticetable`).find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/index/apprenticemodal",
        success: function (json) {
          var finalData = [];
          var data = json.data;
          populatetotalapprenticetable(data);
        },
        error: function (xhr, status, error) {},
      });
    });

    function populatetotalapprenticetable(data) {
      const tableBody = $("#totalapprenticetable tbody");
      tableBody.empty();

      if (data.length === 0) {
        const tr = $("<tr>").append(
          $("<td>", {
            colspan: 5,
            class: "text-center",
            text: "No Data Matched",
          })
        );
        tableBody.append(tr);
      } else {
        data.forEach((item) => {
          const tr = $("<tr>").append(
            // $("<td>", {
            //   html: item.profilePicturePath
            //     ? `<img src="data:image/jpg;base64,${item.profilePicturePath}" alt="Product Image" class="" style="max-width: 90px; max-height: 90px;"/>`
            //     : "No Image",
            //   "data-label": "Product Image",
            // }),
            $("<td>", {
              text: item.newEmployeeId,
              "data-label": "ID",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.firstname,
              "data-label": "Name",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.department,
              "data-label": "Department",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.hiredate,
              "data-label": "Hire Date",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.position,
              "data-label": "Position",
              class: "custom-mobile-align",
            })
          );

          tableBody.append(tr);
        });
      }
    }

    //#endregion

    //#region Load Card
    function loadtotalCard() {
      $.ajax({
        type: "GET",
        url: "/index/countactive",
        success: function (result) {
          if (result.msg === "success") {
            const totalActive = result.data.activeCount;
            $("#totalEmployeeCard .h5").text(totalActive);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadregularCard() {
      $.ajax({
        type: "GET",
        url: "/index/countregular",
        success: function (result) {
          if (result.msg === "success") {
            const totalRegular = result.data.regularCount;
            $("#regularEmployeeCard .h5").text(totalRegular);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadprobitionaryCard() {
      $.ajax({
        type: "GET",
        url: "/index/countprobitionary",
        success: function (result) {
          if (result.msg === "success") {
            const totalProbitionary = result.data.probitionaryCount;

            // Update the content of the Total Employee card using id
            $("#probationaryEmployeeCard .h5").text(totalProbitionary);
          } else {
            // Handle error cases if needed
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          // Handle AJAX error
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadresignedCard() {
      $.ajax({
        type: "GET",
        url: "/index/countresigned",
        success: function (result) {
          if (result.msg === "success") {
            const totalResigned = result.data.resignedCount;

            // Update the content of the Total Employee card using id
            $("#resignedEmployeeCard .h5").text(totalResigned);
          } else {
            // Handle error cases if needed
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          // Handle AJAX error
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadtotaladminCard() {
      $.ajax({
        type: "GET",
        url: "/index/countadmin",
        success: function (result) {
          if (result.msg === "success") {
            const totalempadmin = result.data.adminCount;

            // Update the content of the Total Employee card using id
            $("#totalADMIN .h5").text(totalempadmin);
          } else {
            // Handle error cases if needed
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          // Handle AJAX error
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadtotalITCard() {
      $.ajax({
        type: "GET",
        url: "/index/countit",
        success: function (result) {
          if (result.msg === "success") {
            const totalIT = result.data.ITCount;
            $("#totalIT .h5").text(totalIT);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadtotalcablingCard() {
      $.ajax({
        type: "GET",
        url: "/index/countcabling",
        success: function (result) {
          if (result.msg === "success") {
            const totalCabling = result.data.CablingCount;
            $("#totalCABLING .h5").text(totalCabling);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadtotalcandidateCard() {
      $.ajax({
        type: "GET",
        url: "/index/countcandidate",
        success: function (result) {
          if (result.msg === "success") {
            const totalCandidate = result.data.CandidateCount;
            $("#totalempcandidate .h5").text(totalCandidate);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadtotalbagapuroCard() {
      $.ajax({
        type: "GET",
        url: "/index/countbagapuro",
        success: function (result) {
          if (result.msg === "success") {
            const totalBagapuro = result.data.BagapuroCount;
            $("#totalempbagapuro .h5").text(totalBagapuro);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadtotalapprenticeCard() {
      $.ajax({
        type: "GET",
        url: "/index/countapprentice",
        success: function (result) {
          if (result.msg === "success") {
            const totalApprentice = result.data.ApprenticeCount;
            $("#totalempapprentice .h5").text(totalApprentice);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function load1YearCard() {
      $.ajax({
        type: "GET",
        url: "/index/count1year",
        success: function (result) {
          if (result.msg === "success") {
            const total1year = result.data.Years1Count;
            $("#total1Year .h5").text(total1year);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }
    //#endregion

    //#region Load Badge Notif
    function loadleaveBadge() {
      $.ajax({
        type: "GET",
        url: "/index/countreqleavebadge",
        success: function (result) {
          if (result.msg === "success") {
            const totalleave = result.data.leavereqCount;
            $("#loadleaveBadge").text(totalleave);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadCashBadge() {
      $.ajax({
        type: "GET",
        url: "/index/countcashreqbadge",
        success: function (result) {
          if (result.msg === "success") {
            const totalCa = result.data.CAreqCount;
            $("#loadcaBadge").text(totalCa);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadOvertimeBadge() {
      $.ajax({
        type: "GET",
        url: "/index/countovertimeot",
        success: function (result) {
          if (result.msg === "success") {
            const totalOT = result.data.OTreqCount;
            $("#loadotBadge").text(totalOT);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadCOABadge() {
      $.ajax({
        type: "GET",
        url: "/index/countCOA",
        success: function (result) {
          if (result.msg === "success") {
            const totalCOA = result.data.COAreqCount;
            $("#loadCOABadge").text(totalCOA);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadHolidayBadge() {
      $.ajax({
        type: "GET",
        url: "/index/countholiday",
        success: function (result) {
          if (result.msg === "success") {
            const totalHOLIDAY = result.data.HOLIDAYreqCount;
            $("#loadHolidayBadge").text(totalHOLIDAY);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadRDOTbadge() {
      $.ajax({
        type: "GET",
        url: "/index/countrdot",
        success: function (result) {
          if (result.msg === "success") {
            const totalRDOT = result.data.RDOTreqCount;
            $("#loadRestDayOTBadge").text(totalRDOT);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadattendanceBadge() {
      $.ajax({
        type: "GET",
        url: "/index/countattendancebadge",
        success: function (result) {
          if (result.msg === "success") {
            const totalLATE = result.data.LATECount;
            $("#loadattendanceBadge").text(totalLATE);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    //#endregion

    //#region Announcement and Bday Folks
    // $.ajax({
    //   url: "/announcement/load",
    //   method: "GET",
    //   dataType: "json",

    //   success: function (data) {
    //     let details = data.data;
    //     let bulletinid = [];
    //     $.each(details, (key, item) => {
    //       bulletinid.push({
    //         id: item.bulletinid,
    //       });
    //     });
    //     LoadAnnouncement(bulletinid);
    //   },
    //   error: function (error) {
    //     console.error(error);
    //   },
    // });

    // function LoadAnnouncement(bulletinid) {
    //   $.each(bulletinid, (key, item) => {
    //     let id = item.id;
    //     GenerateAnouncement();
    //   });
    // }

    function GenerateAnouncement() {
      $.ajax({
        type: "GET",
        url: "/index/getbulletin",
        // data: {
        //   bulletinid: id,
        // },
        success: function (result) {
          if (result.msg === "success") {
            const announcementData = result.data;
            let counter = 0;

            $.each(announcementData, (key, item) => {
              counter++;
              anouncementdiv += `
              <div class="carousel-item active" data-bs-interval="4000">
                                    <img id="preview${counter}" src="data:image/jpg;base64,${item.image}" class="d-block w-100 hrmis-img-announce" alt="...">


                                <div class="announcement-hrmis">
                                    <h6 id="announcedate${counter}" class="a-date text-center">${item.targetdate}</h6>
                                    <h6 id="announcetitle${counter}" class="announce-title">${item.title}</h6>
                                    <p id="announcedesc${counter}" class="a-des">${item.description}</p>
                                <button class="carousel-control-prev" type="button"
                                    data-bs-target="#carouselannouncement" data-bs-slide="prev">
                                    <i class='bx bxs-left-arrow prev-hrmis' aria-hidden="true"></i>
                                    <span class="visually-hidden">Previous</span>
                                </button>
                                <button class="carousel-control-next" type="button"
                                    data-bs-target="#carouselannouncement" data-bs-slide="next">
                                    <i class='bx bxs-right-arrow next-hrmis' aria-hidden="true"></i>
                                    <span class="visually-hidden">Next</span>
                                </button>
                                </div>
                                </div>`;
            });
          } else {
            console.error("Error: ", result.message);
            swal(
              "An error occurred while fetching announcement data",
              "Please try again later.",
              "error"
            );
          }

          $("#carouselannouncement").html(anouncementdiv);
        },
        error: function (err) {
          console.error("AJAX Error: ", err.responseText);
          swal(
            "An error occurred while fetching announcement data",
            "Please try again later.",
            "error"
          );
        },
      });
    }

    //<<<<<<<<<<<B DAY FOLKS>>>>>>>>>>>>>>>>>>>>>>>>

    function LoadBdayFolks() {
      $.ajax({
        type: "GET",
        url: "/index/getbday",
        success: function (result) {
          if (result.msg === "success") {
            const bdayData = result.data;
            let counterbday = 0;

            $.each(bdayData, (key, item) => {
              counterbday++;
              bdaydiv += `
                          <div class="carousel-item active" data-bs-interval="3000">
                                <div class="bday-hrmis">
                                  <p class="bday-greet">Happy Birthday</p>
                                  <img id="preview${counterbday}" src="data:image/jpg;base64,${item.profilePicturePath}" alt="..." class="image-frame t-5 rounded-circle">
                                 <h5 id="employeeid${counterbday}" class="fname-eportal ribbon">${item.firstname}</h5>
                                  <h6 id="bdaydate${counterbday}" class="bday-text-hrmis">${item.birthday}</h6>

                                  <button class="carousel-control-prev" type="button"
                                    data-bs-target="#carouselannouncement" data-bs-slide="prev">
                                    <span class="carousel-control-prev-icon prev-bday" aria-hidden="true"></span>
                                    <span class="visually-hidden">Previous</span>
                                </button>
                                <button class="carousel-control-next" type="button"
                                    data-bs-target="#carouselannouncement" data-bs-slide="next">
                                    <span class="carousel-control-next-icon next-bday" aria-hidden="true"></span>
                                    <span class="visually-hidden">Next</span>
                                </button>
                                </div>
                                </div>`;
            });

            $("#carouselbday").html(bdaydiv);
          } else {
            console.error("Error: ", result.message);
            swal(
              "An error occurred while fetching announcement data",
              "Please try again later.",
              "error"
            );
          }
        },
        // Add a closing bracket here
      });
    }

    //#endregion

    //#region Load All Requset Table
    //Leave Section>>>>>>>>>>>>>>>>>>
    $(document).on("click", "#nav-leave-tab", function () {
      $("#dataTableleaverequest").find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/index/load",
        success: function (json) {
          var finalData = [];
          var data = json.data;

          material_list_tbl = document.getElementById("dataTableleaverequest");

          $.each(data, function (key, item) {
            var row = material_list_tbl.insertRow(1);
            // var IMAGE = row.insertCell(0);
            var LEAVE_ID = row.insertCell(0);
            var FIRSTNAME = row.insertCell(1);
            var LEAVE_STARTDADTE = row.insertCell(2);
            var LEAVE_ENDATE = row.insertCell(3);
            var LEAVE_TYPE = row.insertCell(4);
            var REASON = row.insertCell(5);
            var APPLIEDDATE = row.insertCell(6);
            var ACTION = row.insertCell(7);

            var action = document.createElement("button");
            action.id = "editBtn";
            action.className = "btn text-primary view-btn";
            action.setAttribute("data-bs-toggle", "modal");
            action.setAttribute("data-bs-target", "#allleavemodal");
            action.innerHTML = '<i class="fas fa-fw fa-eye"></i>';
            action.onclick = function () {
              var dataRow = [];
              $(this)
                .closest("tr")
                .find("td")
                .each(function () {
                  dataRow.push($(this).text());
                });
              leaveid = dataRow[0];
            };

            // var imgElement = document.createElement("img");
            // imgElement.src = "data:image/jpg;base64," + item.image;
            // imgElement.alt = "Profile Image";
            // imgElement.style.width = "70px";
            // imgElement.style.height = "70px";

            // IMAGE.appendChild(imgElement);
            LEAVE_ID.innerHTML = item.leaveid;
            FIRSTNAME.innerHTML = item.firstname;
            LEAVE_STARTDADTE.innerHTML = item.leavestartdate;
            LEAVE_ENDATE.innerHTML = item.leaveenddate;
            LEAVE_TYPE.innerHTML = item.leavetype;
            REASON.innerHTML = item.reason;
            APPLIEDDATE.innerHTML = item.applieddate;
            ACTION.appendChild(action);

            $.each(
              [
                LEAVE_ID,
                FIRSTNAME,
                LEAVE_STARTDADTE,
                LEAVE_ENDATE,
                LEAVE_TYPE,
                REASON,
                APPLIEDDATE,
                ACTION,
              ],
              function (_, cell) {
                cell.style.textAlign = "center";
                cell.style.verticalAlign = "middle";
              }
            );
          });
        },
        error: function (xhr, status, error) {},
      });
    });


    function LoadSubgroup() {
      $.ajax({
        type: "GET",
        url: "/subgroup/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.subgroupid, item.subgroupid);
            $(options).html(item.subgroupname);
            $("#leavesubgroup").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    $(document).on("click", "#editBtn", function () {
      $.ajax({
        type: "POST",
        url: "/index/getleave",
        data: {
          leaveid: leaveid,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            $.each(existingData, (key, item) => {
              $("#pendingleaveid").val(item.leaveid);
              $("#leaveemployeename").val(item.fullname);
              $("#reqleavetype").val(item.leavetype);
              $("#leavestartdate").val(item.leavestartdate);
              $("#leaveenddate").val(item.leaveenddate);
              $("#leavereason").val(item.leavereason);
              $("#leaveapplieddate").val(item.leaveapplieddate);
              $("#previewleave").attr(
                "src",
                "data:image/jpg;base64," + item.leaveimage
              );
              $("#leavedays").val(item.totalleavedays);
              $("#unusedleave").val(item.unusedleave);
              $("#usedleave").val(item.usedleave);
              $("#leaveyear").val(item.leaveyear);
              $("#reqleavestatus").val(item.leavestatus);
              $("#leaveduration").val(item.leaveduration);
              $("#paiddays").val(item.leavepaiddays);
              $("#unpaiddays").val(item.leaveunpaiddays);
              $("#leavesubgroup").val(item.leavesubgroupid);
            });
          } else {
            swal("Error fetching employee data", "success");
          }
        },
        error: function (err) {
          swal("An error occurred while fetching employee data", err, "error");
        },
      });
    });

    $(document).on(
      "change",
      "#leavestartdate, #leaveenddate, #paiddays",
      function () {
        let startDate = $("#leavestartdate").val();
        let endDate = $("#leaveenddate").val();
        let paidDays = parseFloat($("#paiddays").val());
        let unusedLeave = parseFloat($("#unusedleave").val());
        let duration = calculateLeaveDuration(startDate, endDate);

        if (duration > unusedLeave) {
          let unpaidDays = duration - unusedLeave;
          $("#paiddays").val(unusedLeave);
          $("#unpaiddays").val(unpaidDays);
        } else {
          $("#leaveduration").val(duration);
          $("#paiddays").val(duration);
          $("#unpaiddays").val(0);
        }
      }
    );

    function calculateLeaveDuration(startDate, endDate) {
      let start = new Date(startDate);
      let end = new Date(endDate);
      let difference = end - start;
      let durationDays = difference / (1000 * 60 * 60 * 24) + 1;
      return Math.round(durationDays);
    }

    $(document).on("click", "#leavesavebutton", function () {
      let id = leaveid;
      let status = $("#reqleavestatus").val();
      let leavestartdate = $("#leavestartdate").val();
      let leaveenddate = $("#leaveenddate").val();
      let leaveduration = $("#leaveduration").val();
      let leavepaidays = $("#paiddays").val();
      let leaveunpaiddays = $("#unpaiddays").val();
      let comment = $("#leavecomment").val();

      var message = "";

      if (status === "Pending") {
        message += "status is required. ";
      }

      if (leavestartdate === "") {
        message += "status is required. ";
      }

      if (leaveenddate === "") {
        message += "Youre not Allowed to Cancel The Employee Request";
      }

      if (leaveduration === "") {
        message += "comment is required. ";
      }

      if (leavepaidays === "") {
        message += "comment is required. ";
      }

      if (leaveunpaiddays === "") {
        message += "comment is required. ";
      }

      if (comment === "") {
        message += "comment is required. ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        swal({
          title: "Are you sure?",
          text: `Do you want to '${status}' this request?`,
          icon: "warning",
          buttons: true,
          dangerMode: true,
        }).then((willApprove) => {
          if (willApprove) {
            $.ajax({
              type: "POST",
              url: "/allleave/update",
              data: {
                leaveid: id,
                status: status,
                leavestartdate: leavestartdate,
                leaveenddate: leaveenddate,
                leaveduration: leaveduration,
                leavepaidays: leavepaidays,
                leaveunpaiddays: leaveunpaiddays,
                comment: comment,
              },
              success: function (result) {
                if (result.msg == "success") {
                  swal(
                    "Save Successfully",
                    "You clicked the button!",
                    "success"
                  ).then((results) => {
                    window.location.reload();
                  });
                  LoadTable();
                }
              },
              error: function (err) {
                swal("Error", "An error occurred while saving data.", "error");
              },
              error: function (err) {
                swal("Error", "An error occurred while saving data.", "error");
              },
            });
          } else {
            swal("Action Canceled", "", "info");
          }
        });
      }
    });

    //cashadvance section-->
    $(document).on("click", "#nav-ca-tab", function () {
      $("#dataTablecashrequest").find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/index/loadCA",
        success: function (json) {
          var finalData = [];
          var data = json.data;

          material_list_tbl = document.getElementById("dataTablecashrequest");

          $.each(data, function (key, item) {
            var row = material_list_tbl.insertRow(1);
            // var IMAGE = row.insertCell(0);
            var CASHADVANCE_ID = row.insertCell(0);
            var NAME = row.insertCell(1);
            var REQUEST_DATE = row.insertCell(2);
            var AMOUNT = row.insertCell(3);
            var PURPOSE = row.insertCell(4);
            var STATUS = row.insertCell(5);
            var ACTION = row.insertCell(6);

            var action = document.createElement("button");
            action.id = "editCABtn";
            action.className = "btn text-primary view-btn";
            action.setAttribute("data-bs-toggle", "modal");
            action.setAttribute("data-bs-target", "#pendingcamodal");
            action.innerHTML = '<i class="fas fa-fw fa-eye"></i>';
            action.onclick = function () {
              var dataRow = [];
              $(this)
                .closest("tr")
                .find("td")
                .each(function () {
                  dataRow.push($(this).text());
                });
              cashadvanceid = dataRow[0];
            };

            // var imgElement = document.createElement("img");
            // imgElement.src = "data:image/jpg;base64," + item.image;
            // imgElement.alt = "Profile Image";
            // imgElement.style.width = "70px";
            // imgElement.style.height = "70px";

            // IMAGE.appendChild(imgElement);
            CASHADVANCE_ID.innerHTML = item.employeeid;
            NAME.innerHTML = item.firstname;
            REQUEST_DATE.innerHTML = item.requestdate;
            AMOUNT.innerHTML = item.amount;
            PURPOSE.innerHTML = item.purpose;
            STATUS.innerHTML = item.status;
            ACTION.appendChild(action);

            $.each(
              [
                CASHADVANCE_ID,
                NAME,
                REQUEST_DATE,
                AMOUNT,
                PURPOSE,
                STATUS,
                ACTION,
              ],
              function (_, cell) {
                cell.style.textAlign = "center";
                cell.style.verticalAlign = "middle";
              }
            );
          });
        },
        error: function (xhr, status, error) {},
      });
    });

    $(document).on("click", "#editCABtn", function () {
      $.ajax({
        type: "POST",
        url: "/requestcashadvance/getreqca",
        data: {
          cashadvanceid: cashadvanceid,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            $.each(existingData, (key, item) => {
              $("#id").val(item.cashadvanceid);
              $("#pendingcaname").val(item.employeeid);
              $("#pendingcaemail").val(item.email);
              $("#pendingcagender").val(item.gender);
              $("#pendingcaphone").val(item.phone);
              $("#pendingreqdate").val(item.requestdate);
              $("#pendingamount").val(item.amount);
              $("#pendingpurpose").val(item.purpose);
              $("#pendingcastatus").val(item.status);
              $("#pendingcaapprovaldate").val(item.approvaldate);
            });
          } else {
            swal("Error fetching employee data", "success");
          }
        },
        error: function (err) {
          swal("An error occurred while fetching employee data", err, "error");
        },
      });
    });
    $(document).on("click", "#pendingcasavebtn", function () {
      let id = cashadvanceid;
      let status = $("#pendingcastatus").val();
      let comment = $("#pendingcaremarks").val();

      let message = "";

      if (status === "") {
        message += "Status is required. ";
      }

      if (comment === "") {
        message += "Comment is required. ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        swal({
          title: "Are you sure?",
          text: `Do you want to '${status}' this request?`,
          icon: "warning",
          buttons: true,
          dangerMode: true,
        }).then((willApprove) => {
          if (willApprove) {
            $.ajax({
              type: "POST",
              url: "/requestcashadvance/update",
              data: {
                cashadvanceid: id,
                status: status,
                comment: comment,
              },
              success: function (result) {
                if (result.msg === "success") {
                  swal({
                    title: "Save Successfully",
                    text: "You clicked the button!",
                    icon: "success",
                  }).then(() => {
                    window.location.reload();
                  });
                  LoadTable();
                } else {
                  swal(
                    "Error",
                    "An error occurred while saving data.",
                    "error"
                  );
                }
              },
              error: function (xhr, status, error) {
                swal({
                  title: "Error",
                  text: "An error occurred while saving data.",
                  icon: "error",
                });
                console.error("AJAX error:", error);
              },
            });
          } else {
            // User clicked "Cancel"
            swal("Action Canceled", "", "info");
          }
        });
      }
    });

    //reqovertime section-->
    $(document).on("click", "#nav-ot-tab", function () {
      $("#dataTableovertimerequest").find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/index/loadreqOT",
        success: function (json) {
          var finalData = [];
          var data = json.data;

          material_list_tbl = document.getElementById(
            "dataTableovertimerequest"
          );

          $.each(data, function (key, item) {
            var row = material_list_tbl.insertRow(1);
            // var IMAGE = row.insertCell(0);
            var APPROVEDOT_ID = row.insertCell(0);
            var NAME = row.insertCell(1);
            var ATTENDANCE_DATE = row.insertCell(2);
            var PAYROLL_DATE = row.insertCell(3);
            var CLOCKIN = row.insertCell(4);
            var CLOCKOUT = row.insertCell(5);
            var TOTAL_HOURS = row.insertCell(6);
            var ACTION = row.insertCell(7);

            var action = document.createElement("button");
            action.id = "editOTBTN";
            action.className = "btn text-primary view-btn";
            action.setAttribute("data-bs-toggle", "modal");
            action.setAttribute("data-bs-target", "#otapprovalmodal");
            action.innerHTML = '<i class="fas fa-fw fa-eye"></i>';
            action.onclick = function () {
              var dataRow = [];
              $(this)
                .closest("tr")
                .find("td")
                .each(function () {
                  dataRow.push($(this).text());
                });
              approveot_id = dataRow[0];
            };

            // var imgElement = document.createElement("img");
            // imgElement.src = "data:image/jpg;base64," + item.image;
            // imgElement.alt = "Profile Image";
            // imgElement.style.width = "70px";
            // imgElement.style.height = "70px";

            // IMAGE.appendChild(imgElement);
            APPROVEDOT_ID.innerHTML = item.approveot_id;
            NAME.innerHTML = item.fullname;
            ATTENDANCE_DATE.innerHTML = item.attendancedate;
            PAYROLL_DATE.innerHTML = item.payrolldate;
            CLOCKIN.innerHTML = item.clockin;
            CLOCKOUT.innerHTML = item.clockout;
            TOTAL_HOURS.innerHTML = item.totalhours;
            ACTION.appendChild(action);

            $.each(
              [
                APPROVEDOT_ID,
                NAME,
                ATTENDANCE_DATE,
                PAYROLL_DATE,
                CLOCKIN,
                CLOCKOUT,
                TOTAL_HOURS,
              ],
              function (_, cell) {
                cell.style.textAlign = "center";
                cell.style.verticalAlign = "middle";
              }
            );
          });
        },
        error: function (xhr, status, error) {},
      });
    });

    function LoadEditEmp() {
      $.ajax({
        type: "GET",
        url: "/employee/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.id, item.id);
            $(options).html(item.fullname);
            $("#leaveemployeename").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    function LoadList() {
      $.ajax({
        type: "GET",
        url: "/setpayrolldate/loadreq",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.payrolldate, item.payrolldate);
            $(options).html(item.payrolldate);
            $("#otpayrolldate").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    $(document).on("click", "#editOTBTN", function () {
      $.ajax({
        type: "POST",
        url: "/otapproval/getotapproval",
        data: {
          approveot_id: approveot_id,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            $.each(existingData, (key, item) => {
              $("#preview").attr("src", "data:image/jpg;base64," + item.image);
              base64String = item.image;
              $("#otfullname").val(item.fullname);
              $("#otdate").val(item.attendancedate);
              $("#otclockin").val(item.clockin);
              $("#otclockout").val(item.clockout);
              $("#ottotalothours").val(item.totalhours);
              $("#otnight").val(item.night_ot);
              $("#otearly").val(item.earlyot);
              $("#otnormal").val(item.normal_ot);
              $("#otnightpay").val(item.night_pay);
              $("#otnormalpay").val(item.normal_pay);
              $("#otearlypay").val(item.earlyot_pay);
              $("#ottotalpay").val(item.totalot_pay);
              $("#otpayrolldate").val(item.payrolldate);
              $("#otstatus").val(item.overtimestatus);
              $("#otreason").val(item.reason);
              $("#otsubgroup").val(item.subgroupid);
            });
          } else {
            swal("Error fetching employee data", "success");
          }
        },
        error: function (err) {
          swal("An error occurred while fetching employee data", err, "error");
        },
      });
    });
    $(document).on("click", "#otsavebutton", function () {
      let id = approveot_id;
      let night_ot = $("#otnight").val();
      let earlyot = $("#otearly").val();
      let normal_ot = $("#otnormal").val();
      let payrolldate = $("#otpayrolldate").val();
      let overtimestatus = $("#otstatus").val();

      var message = "";

      if (night_ot === "") {
        message += "departmentname is required. ";
      }

      if (earlyot === "") {
        message += "departmentname is required. ";
      }

      if (normal_ot === "") {
        message += "departmenthead is required. ";
      }

      if (payrolldate === "") {
        message += "status is required. ";
      }

      if (overtimestatus === "Applied" || overtimestatus === "Pending") {
        message += "You Need to Approve or Disregard. ";
      }
      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "POST",
          url: "otapproval/update",
          data: {
            approveot_id: id,
            night_ot: night_ot,
            earlyot: earlyot,
            normal_ot: normal_ot,
            payrolldate: payrolldate,
            overtimestatus: overtimestatus,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal(
                "Update Successfully",
                "You clicked the button!",
                "success"
              ).then((results) => {
                window.location.reload();
              });
              LoadTable();
            } else if (result.msg == "exist") {
              swal("Exist", "Data already exists!", "warning");
            }
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
          },
        });
      }
    });

    //request attendance section-->>>>
    $(document).on("click", "#nav-reqattendance-tab", function () {
      $("#dataTableattendancerequest").find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/index/loadreqattendance",
        success: function (json) {
          var finalData = [];
          var data = json.data;

          material_list_tbl = document.getElementById(
            "dataTableattendancerequest"
          );

          $.each(data, function (key, item) {
            var row = material_list_tbl.insertRow(1);
            // var IMAGE = row.insertCell(0);
            var REQUEST_ID = row.insertCell(0);
            var FULLNAME = row.insertCell(1);
            var ATTENDANCE_DATE = row.insertCell(2);
            var TIME_IN = row.insertCell(3);
            var TIME_OUT = row.insertCell(4);
            var TOTAL_HOURS = row.insertCell(5);
            var ACTION = row.insertCell(6);

            var action = document.createElement("button");
            action.id = "editCOABTN";
            action.className = "btn text-primary view-btn";
            action.setAttribute("data-bs-toggle", "modal");
            action.setAttribute("data-bs-target", "#editrequestcoamodal");
            action.innerHTML = '<i class="fas fa-fw fa-eye"></i>';
            action.onclick = function () {
              var dataRow = [];
              $(this)
                .closest("tr")
                .find("td")
                .each(function () {
                  dataRow.push($(this).text());
                });
              requestid = dataRow[0];
            };

            // var imgElement = document.createElement("img");
            // imgElement.src = "data:image/jpg;base64," + item.image;
            // imgElement.alt = "Profile Image";
            // imgElement.style.width = "70px";
            // imgElement.style.height = "70px";

            // IMAGE.appendChild(imgElement);
            REQUEST_ID.innerHTML = item.requestid;
            FULLNAME.innerHTML = item.employeeid;
            ATTENDANCE_DATE.innerHTML = item.attendancedate;
            TIME_IN.innerHTML = item.timein;
            TIME_OUT.innerHTML = item.timeout;
            TOTAL_HOURS.innerHTML = item.total;
            ACTION.appendChild(action);

            $.each(
              [
                REQUEST_ID,
                FULLNAME,
                ATTENDANCE_DATE,
                TIME_IN,
                TIME_OUT,
                TOTAL_HOURS,
              ],
              function (_, cell) {
                cell.style.textAlign = "center";
                cell.style.verticalAlign = "middle";
              }
            );
          });
        },
        error: function (xhr, status, error) {},
      });
    });

    $(document).on("click", "#editCOABTN", function () {
      $.ajax({
        type: "POST",
        url: "/attendancerequest/getattendancerequest",
        data: {
          requestid: requestid,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            $.each(existingData, (key, item) => {
              $("#editpreview").attr(
                "src",
                "data:image/jpg;base64," + item.image
              );
              $("#empid").val(item.emp_id);
              $("#coafullname").val(item.employeeid);
              $("#editattendancedate").val(item.attendancedate);
              $("#edittimein").val(item.timein);
              $("#edittimeout").val(item.timeout);
              $("#coatotalhours").val(item.total);
              $("#coacreatedate").val(item.createdate);
              $("#coarequeststatus").val(item.requeststatus);
              $("#editcoareason").val(item.reason);
              $("#coasubgroupid").val(item.subgroupid);
              $("#editpreviewfile").attr(
                "src",
                "data:image/jpg;base64," + item.file
              );
            });
          } else {
            swal("Error fetching employee data", "success");
          }
        },
        error: function (err) {
          swal("An error occurred while fetching employee data", err, "error");
        },
      });
    });

    $(document).on("click", "#editcOAsavebtn", function () {
      let id = requestid;
      let emp_id = $("#empid").val();
      let attendancedate = $("#editattendancedate").val();
      let timein = $("#edittimein").val();
      let timeout = $("#edittimeout").val();
      let requeststatus = $("#editcoastatus").val();

      var message = "";

      if (attendancedate == "") {
        message += "Attendance date is required. ";
      }

      if (timein == "") {
        message += "Time in is required. ";
      }

      if (timeout == "") {
        message += "Time out is required. ";
      }

      if (requeststatus === "") {
        message += "Status is required. ";
      }

      if (message !== "") {
        swal("Oops!!!", message, "error");
      } else {
        if (requeststatus === "Approved") {
          $.ajax({
            type: "POST",
            url: "/attendancerequest/updateMasterAttendance",
            data: {
              emp_id: emp_id,
              attendancedate: attendancedate,
              timein: timein,
              timeout: timeout,
            },
            success: function (masterResult) {
              if (masterResult.msg == "success") {
                $.ajax({
                  type: "POST",
                  url: "/attendancerequest/updateAttendanceRequest",
                  data: {
                    requestid: requestid,
                  },
                  success: function (attendanceResult) {
                    if (attendanceResult.msg == "success") {
                      swal(
                        "Save Successfully",
                        "You clicked the button!",
                        "success"
                      ).then((results) => {
                        window.location.reload();
                      });
                      LoadTable();
                    }
                  },
                  error: function (attendanceErr) {
                    swal(
                      "Error",
                      "An error occurred while updating attendance request.",
                      "error"
                    );
                  },
                });
              }
            },
            error: function (masterErr) {
              swal(
                "Error",
                "An error occurred while updating master attendance.",
                "error"
              );
            },
          });
        } else if (requeststatus === "Rejected") {
          $.ajax({
            type: "POST",
            url: "/attendancerequest/updateAttendanceRequestRejected",
            data: {
              requestid: requestid,
            },
            success: function (result) {
              if (result.msg == "success") {
                swal(
                  "Status Updated",
                  "The request status has been updated to Rejected.",
                  "success"
                ).then((results) => {
                  window.location.reload();
                });
              }
            },
            error: function (err) {
              swal(
                "Error",
                "An error occurred while updating request status to Rejected.",
                "error"
              );
            },
          });
        }
      }
    });

    //req holiday section-->
    $(document).on("click", "#nav-reqholiday-tab", function () {
      $("#dataTableholidayrequest").find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/index/loadHoliday",
        success: function (json) {
          var finalData = [];
          var data = json.data;

          material_list_tbl = document.getElementById(
            "dataTableholidayrequest"
          );

          $.each(data, function (key, item) {
            var row = material_list_tbl.insertRow(1);
            // var IMAGE = row.insertCell(0);
            var HOLIDAY_ID = row.insertCell(0);
            var NAME = row.insertCell(1);
            var ATTENDANCE_DATE = row.insertCell(2);
            var HOLIDAY_TYPE = row.insertCell(3);
            var PAYROLL_DATE = row.insertCell(4);
            var TIMEIN = row.insertCell(5);
            var TIMEOUT = row.insertCell(6);
            var TOTAL_HOURS = row.insertCell(7);
            var ACTION = row.insertCell(8);

            var action = document.createElement("button");
            action.id = "editHolidayBTN";
            action.className = "btn text-primary view-btn";
            action.setAttribute("data-bs-toggle", "modal");
            action.setAttribute("data-bs-target", "#holidayreqmodal");
            action.innerHTML = '<i class="fas fa-fw fa-eye"></i>';
            action.onclick = function () {
              var dataRow = [];
              $(this)
                .closest("tr")
                .find("td")
                .each(function () {
                  dataRow.push($(this).text());
                });
              holidayid = dataRow[0];
            };

            HOLIDAY_ID.innerHTML = item.holidayid;
            NAME.innerHTML = item.fullname;
            ATTENDANCE_DATE.innerHTML = item.attendancedate;
            HOLIDAY_TYPE.innerHTML = item.holidaytype;
            PAYROLL_DATE.innerHTML = item.payrolldate;
            TIMEIN.innerHTML = item.timein;
            TIMEOUT.innerHTML = item.timeout;
            TOTAL_HOURS.innerHTML = item.total_hours;
            ACTION.appendChild(action);

            $.each(
              [
                HOLIDAY_ID,
                NAME,
                ATTENDANCE_DATE,
                HOLIDAY_TYPE,
                PAYROLL_DATE,
                TIMEIN,
                TIMEOUT,
                TOTAL_HOURS,
              ],
              function (_, cell) {
                cell.style.textAlign = "center";
                cell.style.verticalAlign = "middle";
              }
            );
          });
        },
        error: function (xhr, status, error) {},
      });
    });

    function LoadEditEmp() {
      $.ajax({
        type: "GET",
        url: "/employee/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.id, item.id);
            $(options).html(item.fullname);
            $("#leaveemployeename").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    function LoadListHoliday() {
      $.ajax({
        type: "GET",
        url: "/setpayrolldate/loadreq",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.payrolldate, item.payrolldate);
            $(options).html(item.payrolldate);
            $("#hdpayrolldate").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    $(document).on("click", "#editHolidayBTN", function () {
      $.ajax({
        type: "POST",
        url: "/index/getholidayapproval",
        data: {
          holidayid: holidayid,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            console.log(existingData, "data");

            $.each(existingData, (key, item) => {
              $("#previewholiday").attr(
                "src",
                "data:image/jpg;base64," + item.file
              );
              base64String = item.file;
              $("#hdayfname").val(item.fullname);
              $("#hdayatday").val(item.attendancedate);
              $("#hdtype").val(item.holidaytype);
              $("#hdpayrolldate").val(item.payrolldate);
              $("#hdclockin").val(item.timein);
              $("#hdclockout").val(item.timeout);
              $("#hdtotalhours").val(item.total_hours);
              $("#hdday").val(item.holidaydate);
              $("#hdsubgroup").val(item.subgroupid);
              $("#hdstatus").val(item.status);
              $("#hdnormalot").val(item.normal_ot_total);
              $("#hdndot").val(item.nightdiff_ot_total);
            });
          } else {
            swal("Error fetching employee data", "success");
          }
        },
        error: function (err) {
          swal("An error occurred while fetching employee data", err, "error");
        },
      });
    });
    $(document).on("click", "#holidaysavebutton", function () {
      let id = holidayid;
      let payrolldate = $("#hdpayrolldate").val();
      let status = $("#hdstatus").val();
      let comment = $("#hdcomment").val();

      var message = "";

      if (payrolldate === "") {
        message += "status is required. ";
      }

      if (status === "Applied" || status === "Pending") {
        message += "You Need to Approve or Disregard. ";
      }
      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "PUT",
          url: "/holidayaction",
          data: {
            holidayid: id,
            payrolldate: payrolldate,
            status: status,
            comment: comment,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal(
                "Update Successfully",
                "You clicked the button!",
                "success"
              ).then((results) => {
                window.location.reload();
              });
              LoadTable();
            } else if (result.msg == "exist") {
              swal("Exist", "Data already exists!", "warning");
            }
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
          },
        });
      }
    });

    //req rdot section-->
    $(document).on("click", "#nav-reqrestdayot-tab", function () {
      $("#dataTablerestdayotrequest").find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/index/loadrdot",
        success: function (json) {
          var finalData = [];
          var data = json.data;

          material_list_tbl = document.getElementById(
            "dataTablerestdayotrequest"
          );

          $.each(data, function (key, item) {
            var row = material_list_tbl.insertRow(1);
            // var IMAGE = row.insertCell(0);
            var RDOT_ID = row.insertCell(0);
            var NAME = row.insertCell(1);
            var ATTENDANCE_DATE = row.insertCell(2);
            var PAYROLL_DATE = row.insertCell(3);
            var TIMEIN = row.insertCell(4);
            var TIMEOUT = row.insertCell(5);
            var TOTAL_HOURS = row.insertCell(6);
            var ACTION = row.insertCell(7);

            var action = document.createElement("button");
            action.id = "editRdotBTN";
            action.className = "btn text-primary view-btn";
            action.setAttribute("data-bs-toggle", "modal");
            action.setAttribute("data-bs-target", "#rdotreqmodal");
            action.innerHTML = '<i class="fas fa-fw fa-eye"></i>';
            action.onclick = function () {
              var dataRow = [];
              $(this)
                .closest("tr")
                .find("td")
                .each(function () {
                  dataRow.push($(this).text());
                });
              rdotid = dataRow[0];
            };

            RDOT_ID.innerHTML = item.rdotid;
            NAME.innerHTML = item.fullname;
            ATTENDANCE_DATE.innerHTML = item.attendancedate;
            PAYROLL_DATE.innerHTML = item.payrolldate;
            TIMEIN.innerHTML = item.timein;
            TIMEOUT.innerHTML = item.timeout;
            TOTAL_HOURS.innerHTML = item.total_hours;
            ACTION.appendChild(action);

            $.each(
              [
                RDOT_ID,
                NAME,
                ATTENDANCE_DATE,
                PAYROLL_DATE,
                TIMEIN,
                TIMEOUT,
                TOTAL_HOURS,
                ACTION,
              ],
              function (_, cell) {
                cell.style.textAlign = "center";
                cell.style.verticalAlign = "middle";
              }
            );
          });
        },
        error: function (xhr, status, error) {},
      });
    });

    function LoadListRdot() {
      $.ajax({
        type: "GET",
        url: "/setpayrolldate/loadreq",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.payrolldate, item.payrolldate);
            $(options).html(item.payrolldate);
            $("#rdotpayrolldate").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    $(document).on("click", "#editRdotBTN", function () {
      $.ajax({
        type: "POST",
        url: "/getrdotapproval",
        data: {
          rdotid: rdotid,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;
            console.log(existingData, "data");
            $.each(existingData, (key, item) => {
              $("#previewrdot").attr(
                "src",
                "data:image/jpg;base64," + item.file
              );
              base64String = item.file;
              $("#rdotfullname").val(item.fullname);
              $("#rdotatdate").val(item.attendancedate);
              $("#rdotpayrolldate").val(item.payrolldate);
              $("#rdotclockin").val(item.timein);
              $("#rdotclockout").val(item.timeout);
              $("#rdothours").val(item.total_hours);
              $("#rdotsubgroup").val(item.subgroupid);
              $("#rdotstatus").val(item.status);
            });
          } else {
            swal("Error fetching employee data", "success");
          }
        },
        error: function (err) {
          swal("An error occurred while fetching employee data", err, "error");
        },
      });
    });
    $(document).on("click", "#reqrdotsavebutton", function () {
      let id = rdotid;
      let payrolldate = $("#rdotpayrolldate").val();
      let status = $("#rdotstatus").val();
      let comment = $("#rdotcomment").val();
      var message = "";

      if (payrolldate === "") {
        message += "status is required. ";
      }

      if (status === "Applied" || status === "Pending") {
        message += "You Need to Approve or Disregard. ";
      }
      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "PUT",
          url: "/rdotaction",
          data: {
            rdotid: id,
            payrolldate: payrolldate,
            status: status,
            comment: comment,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal(
                "Update Successfully",
                "You clicked the button!",
                "success"
              ).then((results) => {
                window.location.reload();
              });
            } else if (result.msg == "exist") {
              swal("Exist", "Data already exists!", "warning");
            }
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
          },
        });
      }
    });

    //status attendance section-->>>>
    $(document).on("click", "#nav-status-tab", function () {
      $.ajax({
        type: "GET",
        url: "/index/attendancestatus",
        success: function (result) {
          let latestatus = "";
          if (result.msg === "success") {
            const existingData = result.data;
            if (existingData.length === 0) {
              latestatus +=
                '<div><img src="/images/img/nolate.gif" class="d-block w-100 nolate-img" alt=""</div>';
            } else {
              let counter = 0;
              $.each(existingData, (key, item) => {
                counter++;
                latestatus += `<div class="p-3 d-flex align-items-center bg-light border-bottom osahan-post-header">
                  <div class="dropdown-list-image mr-3">
                      <img id="profilepreview${counter}" src="data:image/jpg;base64,${item.image}" class="rounded-circle" alt="" />
                  </div>
                  <div class="font-weight-bold mr-3">
                      <div class="text-truncate" id="latestatusname${counter}">${item.FullName} Is Late in ${item.minutes_late} Minutes</div>
                      <div class="small" id="latestatusclockin${counter}">${item.actual_clockin}</div>
                      <span class="text-muted" id="latestatuslate${counter}">Late in ${item.minutes_late} Minutes</span>
                  </div>
              </div>`;
              });
            }
          } else {
            latestatus = '<div class="p-3">Error fetching employee data.</div>';
          }
          $("#nav-status").html(latestatus);
        },
        error: function (err) {
          $("#nav-status").html(
            '<div class="p-3">An error occurred while fetching employee data.</div>'
          );
        },
      });
    });

    //#endregion

    //#region Graph Functions
    $(document).on("change", "#announcementimage", function (e) {
      const input = document.getElementById("announcementimage");
      const file = input.files[0];

      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onloadend = function () {
        const preview = document.getElementById("preview");
        preview.src = reader.result;
      };
      imageUploaded();
    });

    $(document).on("change", "#announcementimage", function (e) {
      const input = document.getElementById("announcementimage");
      const file = input.files[0];

      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onloadend = function () {
        const preview = document.getElementById("previewleave");
        preview.src = reader.result;
      };
      imageUploadedleave();
    });

    document.addEventListener("DOMContentLoaded", function () {
      // Define attendance data
      const attendanceData = {
        present: 80,
        absent: 15,
        late: 5,
      };

      // Get the canvas element for attendance chart
      const attendanceCanvas = document.getElementById("attendanceChart");
      const attendanceCtx = attendanceCanvas.getContext("2d");

      // Set up attendance chart
      const attendanceDataConfig = {
        labels: ["Present", "Absent", "Late"],
        datasets: [
          {
            data: [
              attendanceData.present,
              attendanceData.absent,
              attendanceData.late,
            ],
            backgroundColor: ["#36A2EB", "#F70101", "#FFAA33"],
          },
        ],
      };

      const attendanceOptions = {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          title: {
            display: true,
            text: "Attendance Chart",
            font: {
              size: 16,
            },
          },
        },
        tooltips: {
          callbacks: {
            label: function (tooltipItem, data) {
              const dataset = data.datasets[tooltipItem.datasetIndex];
              const total = dataset.data.reduce(
                (previousValue, currentValue) => previousValue + currentValue
              );
              const currentValue = dataset.data[tooltipItem.index];
              const percentage =
                ((currentValue / total) * 100).toFixed(2) + "%";
              return data.labels[tooltipItem.index] + ": " + percentage;
            },
          },
        },
      };

      // Create attendance chart
      const attendanceChart = new Chart(attendanceCtx, {
        type: "doughnut",
        data: attendanceDataConfig,
        options: attendanceOptions,
      });

      // Define employee data
      const employeeData = {
        Active: 70,
        Resigned: 5,
        Terminate: 5,
        EndofContract: 20,
      };

      // Get the canvas element for employee chart
      const employeeCanvas = document.getElementById("employeeChart");
      const employeeCtx = employeeCanvas.getContext("2d");

      // Set up employee chart
      const employeeDataConfig = {
        labels: ["Active", "Resigned", "Terminate", "End of Contract"],
        datasets: [
          {
            data: [
              employeeData.Active,
              employeeData.Resigned,
              employeeData.Terminate,
              employeeData.EndofContract,
            ],
            backgroundColor: ["#32de84", "#36A2EB", "#F70101", "#FFAA33"],
          },
        ],
      };

      const employeeOptions = {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          title: {
            display: true,
            text: "Employee",
            font: {
              size: 20,
            },
          },
        },
      };

      // Create employee chart
      const employeeChart = new Chart(employeeCtx, {
        type: "pie",
        data: employeeDataConfig,
        options: employeeOptions,
      });
    });

    //employee graph

    // Sample data (replace this with your actual data)
    var jobStatusData = {
      labels: ["Regular", "Probationary", "Project Based"],
      datasets: [
        {
          label: "Job Status",
          data: [50, 30, 20], // Replace with actual counts
          backgroundColor: [
            "rgba(75, 192, 192, 0.2)",
            "rgba(255, 99, 132, 0.2)",
            "rgba(255, 205, 86, 0.2)",
          ],
          borderColor: [
            "rgba(75, 192, 192, 1)",
            "rgba(255, 99, 132, 1)",
            "rgba(255, 205, 86, 1)",
          ],
          borderWidth: 1,
        },
      ],
    };

    var departmentData = {
      labels: ["Admin", "IT", "Cabling"],
      datasets: [
        {
          label: "Employee Count",
          data: [100, 75, 50], // Replace with actual counts
          backgroundColor: [
            "rgba(75, 192, 192, 0.2)",
            "rgba(255, 99, 132, 0.2)",
            "rgba(255, 205, 86, 0.2)",
          ],
          borderColor: [
            "rgba(75, 192, 192, 1)",
            "rgba(255, 99, 132, 1)",
            "rgba(255, 205, 86, 1)",
          ],
          borderWidth: 1,
        },
      ],
    };

    // Get the context of the canvases
    var jobStatusCtx = document
      .getElementById("jobstatusChart")
      .getContext("2d");
    var departmentCtx = document
      .getElementById("departmentChart")
      .getContext("2d");

    // Create bar charts
    var jobStatusChart = new Chart(jobStatusCtx, {
      type: "bar",
      data: jobStatusData,
      options: {
        scales: {
          y: {
            beginAtZero: true,
          },
        },
      },
    });

    var departmentChart = new Chart(departmentCtx, {
      type: "bar",
      data: departmentData,
      options: {
        scales: {
          y: {
            beginAtZero: true,
          },
        },
      },
    });

    //#endregion

    //#region Search Functions
    function searchEmployeeTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInputtotal");
      filter = input.value.toUpperCase();
      table = document.getElementById("dataTableemployees");
      tr = table.getElementsByTagName("tr");

      for (i = 1; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        found = false;

        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
            break;
          }
        }

        if (found) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }

    function searchRegularTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInputRegular");
      filter = input.value.toUpperCase();
      table = document.getElementById("regularemloyeetbl");
      tr = table.getElementsByTagName("tr");

      for (i = 1; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        found = false;

        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
            break;
          }
        }

        if (found) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }

    function searchprobaTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInputproba");
      filter = input.value.toUpperCase();
      table = document.getElementById("probiemloyeetbl");
      tr = table.getElementsByTagName("tr");

      for (i = 1; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        found = false;

        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
            break;
          }
        }

        if (found) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }

    function searchresignedTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInputresigned");
      filter = input.value.toUpperCase();
      table = document.getElementById("resignedemployeetbl");
      tr = table.getElementsByTagName("tr");

      for (i = 1; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        found = false;

        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
            break;
          }
        }

        if (found) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }

    function searchadminTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInputtotaladmin");
      filter = input.value.toUpperCase();
      table = document.getElementById("totaladmintable");
      tr = table.getElementsByTagName("tr");

      for (i = 1; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        found = false;

        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
            break;
          }
        }

        if (found) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }

    function searchitTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInputtotalit");
      filter = input.value.toUpperCase();
      table = document.getElementById("totalittable");
      tr = table.getElementsByTagName("tr");

      for (i = 1; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        found = false;

        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
            break;
          }
        }

        if (found) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }

    function searchcablingTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInputtotalcabling");
      filter = input.value.toUpperCase();
      table = document.getElementById("totalcablingtable");
      tr = table.getElementsByTagName("tr");

      for (i = 1; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        found = false;

        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
            break;
          }
        }

        if (found) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }

    function searchcandidateTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInputtotalcandidate");
      filter = input.value.toUpperCase();
      table = document.getElementById("totalcandidatetable");
      tr = table.getElementsByTagName("tr");

      for (i = 1; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        found = false;

        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
            break;
          }
        }

        if (found) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }

    function searchbagapuroTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInputtotalbagapuro");
      filter = input.value.toUpperCase();
      table = document.getElementById("totalbagapurotable");
      tr = table.getElementsByTagName("tr");

      for (i = 1; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        found = false;

        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
            break;
          }
        }

        if (found) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }

    function searchapprenticeTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInputtotalapprentice");
      filter = input.value.toUpperCase();
      table = document.getElementById("totalapprenticetable");
      tr = table.getElementsByTagName("tr");

      for (i = 1; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        found = false;

        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
            break;
          }
        }

        if (found) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }
    //#endregion

    //#region geofence map

    const OFFICE_LOCATION_LAT = 14.337945;
    const OFFICE_LOCATION_LNG = 121.060511;

    const map = L.map("map").setView(
      [OFFICE_LOCATION_LAT, OFFICE_LOCATION_LNG],
      15
    );

    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
      attribution: "© OpenStreetMap contributors",
    }).addTo(map);

    // const officeIcon = L.icon({
    //     iconUrl: './images/img/5L.png',  // Replace with the path to your office icon image
    //     iconSize: [32, 32],
    //     iconAnchor: [16, 32],
    //     popupAnchor: [0, -32],
    // });

    // const officeMarker = L.marker([OFFICE_LOCATION_LAT, OFFICE_LOCATION_LNG], { icon: officeIcon }).addTo(map);
    // officeMarker.bindPopup('Office Location').openPopup();

    // let geofence;
    // $.ajax({
    //     type: "POST",
    //     url: "/geofencesettings/selectgeofence",
    //     data: {
    //         departmentid: departmentid,
    //     },
    //     success: function (result) {
    //         let data = result.data;
    //         $.each(data, (key, item) => {
    //             geofence = +L.circle([item.latitude, item.longitude], {
    //                 color: "red",
    //                 fillColor: "#f03",
    //                 fillOpacity: 0.3,
    //                 radius: item.radius,
    //                 departmentid: item.departmentid,
    //             }).addTo(map);
    //         });
    //         //console.log(radius);
    //     },
    //     error: function (error) { },
    // });

    let geofence;
    $.ajax({
      type: "GET",
      url: "/geofencesettings/load",
      success: function (result) {
        let data = result.data;
        $.each(data, (key, item) => {
          geofence = +L.circle([item.latitude, item.longitude], {
            color: "red",
            fillColor: "#f03",
            fillOpacity: 0.3,
            radius: item.radius,
          }).addTo(map);
        });
        console.log("data", data);
      },
      error: function (error) {},
    });

    // let geofence;
    // $.ajax({
    //     type: "POST",
    //     url: "/geofencesettings/selectgeofence",
    //     data: {
    //         departmentid: departmentid,
    //     },
    //     success: function (result) {
    //         let data = result.data;
    //         $.each(data, (key, item) => {
    //             geofence = +L.circle([item.latitude, item.longitude], {
    //                 color: "red",
    //                 fillColor: "#f03",
    //                 fillOpacity: 0.3,
    //                 radius: item.radius,
    //                 departmentid: item.departmentid,
    //             }).addTo(map);
    //         });
    //         //console.log(radius);
    //     },
    //     error: function (error) { },
    // });

    // const geofence = L.circle([OFFICE_LOCATION_LAT, OFFICE_LOCATION_LNG], {
    //     color: 'red',
    //     fillColor: '#f03',
    //     fillOpacity: 0.3,
    //     radius: 100
    // }).addTo(map);

    // function checkGeofence(userLocation) {
    //   const userLatLng = L.latLng(userLocation.lat, userLocation.lng);
    //   const isInside = userLatLng.distanceTo(geofence.getLatLng()) <= geofence.getRadius();
    //   //console.log('User is inside the geofence:', isInside);
    //   return isInside;
    // }

    // function updateLocationOnMap(position) {
    //   userLocation = {
    //     lat: position.coords.latitude,
    //     lng: position.coords.longitude
    //   };

    //   // Clear previous markers
    //   map.eachLayer((layer) => {
    //     if (layer instanceof L.Marker) {
    //       layer.remove();
    //     }
    //   });

    //   const userMarker = L.marker([userLocation.lat, userLocation.lng]).addTo(map);
    //   userMarker.bindPopup(`My Location`).openPopup();

    //   const geofenceButton = document.getElementById('clockinbtn');
    //   if (checkGeofence(userLocation)) {
    //     // console.log('User is inside the geofence.');
    //     geofenceButton.style.display = 'block';
    //   } else {
    //     //console.log('User is outside the geofence.');
    //     geofenceButton.style.display = 'block';
    //   }
    // }

    // function handleError(error) {
    //   console.error(`Error getting user location: ${error.message}`, error);

    //   if (error.code === error.PERMISSION_DENIED) {
    //     notifyUserToEnableLocation();
    //   }
    // }

    // function notifyUserToEnableLocation() {
    //   if ('Notification' in window) {
    //     if (Notification.permission !== 'denied') {
    //       Notification.requestPermission().then(permission => {
    //         if (permission === 'granted') {
    //           new Notification('Enable Location Services', {
    //             body: 'Please enable location services to use this feature.',
    //           });
    //         }
    //       });
    //     }
    //   }
    // }

    // const watchId = navigator.geolocation.watchPosition(
    //   updateLocationOnMap,
    //   handleError,
    //   {
    //     enableHighAccuracy: true,
    //     maximumAge: 30000,
    //     timeout: 27000
    //   }
    // );

    //#endregion
  });
</script>
