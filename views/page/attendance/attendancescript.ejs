<script>
  $(document).ready(function () {
    let map;
    let attendanceid = "";
    let startdate = "";
    let enddate = "";
    searchTable();
    LoadTable();
    LoadListEmp();
    LoadDepartment();

    $(document).on("keyup", "#myInput", function () {
      searchTable();
    });

    function LoadTable() {
      $("#dataTableattendance").DataTable({
        destroy: true,
        processing: true,
        serverSide: true,
        paging: false,
        searching: false,
        info: false,
        scrollY: 600,
        scrollCollapse: true,
        serverMethod: "GET",
        ajax: {
          url: "/attendance/load",
          dataSrc: (json) => {
            var finalData = [];
            var data = json.data;

            $.each(data, (key, item) => {
              var action = "";
              var status = item.status;

              action = `
                <button id="editBtn" class="btn text-primary" name="editBtn" data-bs-toggle="modal" data-bs-target="#editlogsmodal"><i class="fas fa-fw fa-pen"></i></button>
               `;

              // var imgElement = document.createElement("img");
              // imgElement.src = "data:image/jpg;base64," + item.image;
              // imgElement.alt = "Profile Image";
              // imgElement.style.width = "80px";
              // imgElement.style.height = "80px";

              finalData.push({
                //image: imgElement.outerHTML,
                attendanceid: item.attendanceid,
                employeeid: item.employeeid,
                attendancedate: item.attendancedate,
                clockin: item.clockin,
                clockout: item.clockout,
                devicein: item.devicein,
                deviceout: item.deviceout,
                totalhours: item.totalhours,
                action: action,
              });
            });

            return finalData;
          },
        },
        columnDefs: [
          {
            targets: 1,
            className: "td-indent",
          },
        ],
        columns: [
          //{ data: "image" },
          { data: "attendanceid" },
          { data: "employeeid" },
          { data: "attendancedate" },
          { data: "clockin" },
          { data: "clockout" },
          { data: "devicein" },
          { data: "deviceout" },
          { data: "totalhours" },
          { data: "action" },
        ],
        createdRow: function (row, data, dataIndex) {
          var clockinCell = $(row).find("td:eq(3)");
          var clockoutCell = $(row).find("td:eq(4)");
          var totalhoursCell = $(row).find("td:eq(7)");

          clockinCell.wrapInner("<span class='clockin-text'></span>");
          clockoutCell.wrapInner("<span class='clockout-text'></span>");
          totalhoursCell.wrapInner("<span class='totalhours-text'></span>");

          $("td", row).each(function (index) {
            this.style.textAlign = "center";
            this.style.verticalAlign = "middle";
          });
        },
        initComplete: function () {},
      });
    }

    $("#datepicker").on("apply.daterangepicker", function (ev, picker) {
      $("#loaddate").click(function () {
        showspinner();
        let startDate = picker.startDate.format("YYYY-MM-DD");
        let endDate = picker.endDate.format("YYYY-MM-DD");
        LoadDateRange(startDate, endDate);
      });
    });

    function LoadDateRange(startDate, endDate) {
      $("#dataTableattendance").DataTable({
        destroy: true,
        processing: true,
        serverSide: true,
        paging: false,
        searching: false,
        info: false,
        scrollY: 600,
        scrollCollapse: true,
        serverMethod: "POST",
        ajax: {
          url: "/attendance/daterange",
          data: {
            startdate: startDate,
            enddate: endDate,
          },
          dataSrc: (json) => {
            var finalData = [];
            var data = json.data;

            $.each(data, (key, item) => {
              var action = "";
              var status = item.status;

              action = `
                <button id="editBtn" class="btn text-primary" name="editBtn" data-bs-toggle="modal" data-bs-target="#editlogsmodal"><i class="fas fa-fw fa-pen"></i></button>
               `;

              // var imgElement = document.createElement("img");
              // imgElement.src = "data:image/jpg;base64," + item.image;
              // imgElement.alt = "Profile Image";
              // imgElement.style.width = "80px";
              // imgElement.style.height = "80px";

              finalData.push({
                //image: imgElement.outerHTML,
                attendanceid: item.attendanceid,
                employeeid: item.employeeid,
                attendancedate: item.attendancedate,
                clockin: item.clockin,
                clockout: item.clockout,
                devicein: item.devicein,
                deviceout: item.deviceout,
                totalhours: item.totalhours,
                action: action,
              });
            });

            return finalData;
          },
        },
        columnDefs: [
          {
            targets: 1,
            className: "td-indent",
          },
        ],
        columns: [
          //{ data: "image" },
          { data: "attendanceid" },
          { data: "employeeid" },
          { data: "attendancedate" },
          { data: "clockin" },
          { data: "clockout" },
          { data: "devicein" },
          { data: "deviceout" },
          { data: "totalhours" },
          { data: "action" },
        ],
        createdRow: function (row, data, dataIndex) {
          $("td", row).each(function (index) {
            this.style.textAlign = "center";
            this.style.verticalAlign = "middle";
          });
        },
        initComplete: function () {},
      });
      hidespinner();
    }

    $("#datepicker").on("apply.daterangepicker", function (ev, picker) {
      $("#checklogs").click(function () {
        showspinner();
        let startDate = picker.startDate.format("YYYY-MM-DD");
        let endDate = picker.endDate.format("YYYY-MM-DD");
        loadmissedlogs(startDate, endDate);
      });
    });

    function loadmissedlogs(startDate, endDate) {
      $("#dataTableattendance").DataTable({
        destroy: true,
        processing: true,
        serverSide: true,
        paging: false,
        searching: false,
        info: false,
        scrollY: 600,
        scrollCollapse: true,
        serverMethod: "POST",
        ajax: {
          url: "/attendance/missedlogs",
          data: {
            startdate: startDate,
            enddate: endDate,
          },
          dataSrc: (json) => {
            var finalData = [];
            var data = json.data;

            $.each(data, (key, item) => {
              var action = "";
              var status = item.status;

              action = `
                <button id="editBtn" class="btn text-primary" name="editBtn" data-bs-toggle="modal" data-bs-target="#editlogsmodal"><i class="fas fa-fw fa-pen"></i></button>
               `;

              // var imgElement = document.createElement("img");
              // imgElement.src = "data:image/jpg;base64," + item.image;
              // imgElement.alt = "Profile Image";
              // imgElement.style.width = "80px";
              // imgElement.style.height = "80px";

              finalData.push({
                //image: imgElement.outerHTML,
                attendanceid: item.attendanceid,
                employeeid: item.employeeid,
                attendancedate: item.attendancedate,
                clockin: item.clockin,
                clockout: item.clockout,
                devicein: item.devicein,
                deviceout: item.deviceout,
                totalhours: item.totalhours,
                action: action,
              });
            });

            return finalData;
          },
        },
        columnDefs: [
          {
            targets: 1,
            className: "td-indent",
          },
        ],
        columns: [
          //{ data: "image" },
          { data: "attendanceid" },
          { data: "employeeid" },
          { data: "attendancedate" },
          { data: "clockin" },
          { data: "clockout" },
          { data: "devicein" },
          { data: "deviceout" },
          { data: "totalhours" },
          { data: "action" },
        ],
        createdRow: function (row, data, dataIndex) {
          $("td", row).each(function (index) {
            this.style.textAlign = "center";
            this.style.verticalAlign = "middle";
          });
        },
        initComplete: function () {},
      });
      hidespinner();
    }

    $("#dataTableattendance tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      attendanceid = dataRow[0];
    });

    $(document).on("click", "#editBtn", function () {
      $(`#dataTableattendancelogs`).find("tr:gt(0)").remove();
      $.ajax({
        type: "POST",
        url: "/attendance/logs",
        data: {
          attendanceid: attendanceid,
        },
        success: function (json) {
          var finalData = [];
          var data = json.data;

          if ($.fn.DataTable.isDataTable("#dataTableattendancelogs")) {
            $("#dataTableattendancelogs").DataTable().destroy();
          }
          material_list_tbl = document.getElementById(
            "dataTableattendancelogs"
          );

          $.each(data, function (key, item) {
            var row = material_list_tbl.insertRow(1);
            var IMAGE = row.insertCell(0);
            var FULLNAME = row.insertCell(1);
            var LOGDATE = row.insertCell(2);
            var LOGTIME = row.insertCell(3);
            var LOGTYPE = row.insertCell(4);
            var LATITUDE = row.insertCell(5);
            var LONGITUDE = row.insertCell(6);
            var DEVICE = row.insertCell(7);
            var LOCATION = row.insertCell(8);

            var imgElement = document.createElement("img");
            imgElement.src = "data:image/jpg;base64," + item.image;
            imgElement.alt = "Profile Image";
            imgElement.style.width = "80px";
            imgElement.style.height = "80px";

            IMAGE.appendChild(imgElement);

            FULLNAME.innerHTML = item.fullname;
            LOGDATE.innerHTML = item.logdate;
            LOGTIME.innerHTML = item.logtime;
            LOGTYPE.innerHTML = item.logtype;
            LATITUDE.innerHTML = item.latitude;
            LONGITUDE.innerHTML = item.longitude;
            DEVICE.innerHTML = item.device;
            LOCATION.innerHTML = item.location;

            $.each(
              [
                FULLNAME,
                LOGDATE,
                LOGTIME,
                LOGTYPE,
                LATITUDE,
                LONGITUDE,
                DEVICE,
                LOCATION,
              ],
              function (_, cell) {
                cell.style.textAlign = "center";
                cell.style.verticalAlign = "middle";
              }
            );
          });
        },
        error: function (xhr, status, error) {},
      });
    });

    $("#datepickermodal").on("apply.daterangepicker", function (ev, picker) {
      $("#exportemployeeattendance").click(function () {
        let employeeid = $("#employeename").val();
        let startDate = picker.startDate.format("YYYY-MM-DD");
        let endDate = picker.endDate.format("YYYY-MM-DD");
        exportempattendance(employeeid, startDate, endDate);
      });
    });

    function exportempattendance(employeeid, startDate, endDate) {
      $.ajax({
        url: "/attendance/exportfileperemployee",
        type: "POST",
        data: {
          employeeid: employeeid,
          startdate: startDate,
          enddate: endDate,
        },
        xhrFields: {
          responseType: "blob",
        },
        success: function (response) {
          if (response) {
            swal({
              title: "Download Employee Attendance",
              text: "Are you sure you want to download the Attendance data?",
              confirm: "#28a745",
              cancel: "#dc3545",
              buttons: {
                confirm: "Yes, download it!",
                cancel: "No, cancel",
              },
              dangerMode: true,
            }).then((result) => {
              if (result) {
                var blob = response;

                var url = URL.createObjectURL(blob);

                var link = document.createElement("a");
                link.href = url;
                link.download = `Attendance_data_of_${employeeid}.xlsx`;
                document.body.appendChild(link);
                link.click();
                URL.revokeObjectURL(url);
              } else {
                swal(
                  "Cancelled",
                  "Payroll data download cancelled :)",
                  "error"
                );
              }
            });
          } else {
            console.error("Error: Empty response");
            swal(
              "Error",
              "Failed to export payroll data. Please try again later.",
              "error"
            );
          }
        },
        error: function (xhr, status, error) {
          console.error("Error:", error);
          swal(
            "Error",
            "Failed to export payroll data. Please try again later.",
            "error"
          );
        },
      });
    }

    $("#datepicker").on("apply.daterangepicker", function (ev, picker) {
      $("#exportBtn").click(function () {
        let startDate = picker.startDate.format("YYYY-MM-DD");
        let endDate = picker.endDate.format("YYYY-MM-DD");
        exportPayroll(startDate, endDate);
      });
    });

    function exportPayroll(startDate, endDate) {
      $.ajax({
        url: "/attendance/exportfile",
        type: "POST",
        data: {
          startdate: startDate,
          enddate: endDate,
        },
        xhrFields: {
          responseType: "blob",
        },
        success: function (response) {
          if (response) {
            swal({
              title: "Download Payroll Data",
              text: "Are you sure you want to download the payroll data?",
              confirm: "#28a745",
              cancel: "#dc3545",
              buttons: {
                confirm: "Yes, download it!",
                cancel: "No, cancel",
              },
              dangerMode: true,
            }).then((result) => {
              if (result) {
                var blob = response;

                var url = URL.createObjectURL(blob);

                var link = document.createElement("a");
                link.href = url;
                link.download = `Attendance_data_${startDate}_${endDate}.xlsx`;
                document.body.appendChild(link);
                link.click();
                URL.revokeObjectURL(url);
              } else {
                swal(
                  "Cancelled",
                  "Payroll data download cancelled :)",
                  "error"
                );
              }
            });
          } else {
            console.error("Error: Empty response");
            swal(
              "Error",
              "Failed to export payroll data. Please try again later.",
              "error"
            );
          }
        },
        error: function (xhr, status, error) {
          console.error("Error:", error);
          swal(
            "Error",
            "Failed to export payroll data. Please try again later.",
            "error"
          );
        },
      });
    }

    function LoadDepartment() {
      $.ajax({
        type: "GET",
        url: "/department/load",
        success: function (result) {
          const data = result.data;
          console.log(data, "data");
          $("#departmentOptions").empty();
          const allDepartmentsCheckbox = `
        <div class="form-check">
          <input
            class="form-check-input"
            type="checkbox"
            name="departmentCheckbox"
            id="department_all"
            value="all"
          />
          <label class="form-check-label" for="department_all">
            All Departments
          </label>
        </div>
      `;
          $("#departmentOptions").append(allDepartmentsCheckbox);
          $.each(data, function (key, item) {
            const checkbox = `
          <div class="form-check">
            <input
              class="form-check-input"
              type="checkbox"
              name="departmentCheckbox"
              id="department_${item.departmentid}"
              value="${item.departmentid}"
            />
            <label class="form-check-label" for="department_${item.departmentid}">
              ${item.departmentname}
            </label>
          </div>
        `;
            $("#departmentOptions").append(checkbox);
          });
          $("#department_all").on("change", function () {
            const isChecked = $(this).is(":checked");
            $("input[name='departmentCheckbox']")
              .not(this)
              .prop("checked", isChecked);
          });

          $("input[name='departmentCheckbox']")
            .not("#department_all")
            .on("change", function () {
              if (!$(this).is(":checked")) {
                $("#department_all").prop("checked", false);
              } else {
                const allChecked =
                  $("input[name='departmentCheckbox']:not(#department_all)")
                    .length ===
                  $(
                    "input[name='departmentCheckbox']:not(#department_all):checked"
                  ).length;
                $("#department_all").prop("checked", allChecked);
              }
            });
        },
        error: function (result) {
          alert("Error: " + result.responseText);
        },
      });
    }

    $("#departmentModal").on("show.bs.modal", function () {
      LoadDepartment();
    });

    $("#confirmDepartmentBtn")
      .off("click")
      .on("click", function () {
        const selectedDepartments = $(
          "input[name='departmentCheckbox']:checked"
        )
          .map(function () {
            return this.value;
          })
          .get();

        if (selectedDepartments.length === 0) {
          swal(
            "Error",
            "Please select at least one department before proceeding.",
            "error"
          );
          return;
        }

        $("#departmentModal").modal("hide");

        exportReports(startDate, endDate, selectedDepartments);
      });

    $("#datepicker").on("apply.daterangepicker", function (ev, picker) {
      startDate = picker.startDate.format("YYYY-MM-DD");
      endDate = picker.endDate.format("YYYY-MM-DD");
      $("#reportsBtn")
        .off("click")
        .on("click", function () {
          $("#departmentModal").modal("show");
        });
    });

    function exportReports(startDate, endDate, departmentIds) {
      console.log(departmentIds,'departmentIds');
      
      swal({
        title: "Exporting Data",
        text: "Please wait while we prepare your data...",
        buttons: false,
        closeOnClickOutside: false,
        closeOnEsc: false,
        icon: "info",
      });

      $.ajax({
        url: "/attendance/exportreports",
        type: "POST",
        data: JSON.stringify({
          startdate: startDate,
          enddate: endDate,
          departmentids: departmentIds,
        }),
        contentType: "application/json",
        xhrFields: {
          responseType: "blob",
        },
        success: function (response) {
          swal.close();
          if (response) {
            swal({
              title: "Your Data is Ready",
              text: "Download the attendance data?",
              icon: "info",
              buttons: {
                confirm: "Yes, download it!",
                cancel: "No, cancel",
              },
            }).then((result) => {
              if (result) {
                var blob = response;
                var url = URL.createObjectURL(blob);
                var link = document.createElement("a");
                link.href = url;
                link.download = `Attendance_data_${startDate}_${endDate}.xlsx`;
                document.body.appendChild(link);
                link.click();
                URL.revokeObjectURL(url);
              } else {
                swal(
                  "Cancelled",
                  "Payroll data download cancelled :)",
                  "error"
                );
              }
            });
          } else {
            swal(
              "Error",
              "Failed to export payroll data. Please try again later.",
              "error"
            );
          }
        },
        error: function (xhr, status, error) {
          swal.close();
          swal(
            "Error",
            "Failed to export payroll data. Please try again later.",
            "error"
          );
        },
      });
    }

    function LoadListEmp() {
      $.ajax({
        type: "GET",
        url: "/employee/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.id, item.id);
            $(options).html(item.fullname);
            $("#employeename").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }
    // Initialize the map
    function initMap() {
      map = L.map("map").setView([0, 0], 2);
      L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
        attribution: "© OpenStreetMap contributors",
      }).addTo(map);

      const marker = L.marker([0, 0]).addTo(map);
      map.on("click", function (e) {
        const { lat, lng } = e.latlng;
        marker.setLatLng([lat, lng]);
        $("#latitude").val(lat.toFixed(6));
        $("#longitude").val(lng.toFixed(6));
      });
    }
    $("#geoFenceModal").on("shown.bs.modal", function () {
      initMap();
    });

    function setGeoFence() {
      const latitude = $("#latitude").val();
      const longitude = $("#longitude").val();
      const radius = $("#radius").val();
      $.ajax({
        type: "POST",
        url: `/attendance/set-geofence?geofenceLatitude=${latitude}&geofenceLongitude=${longitude}&geofenceRadius=${radius}`,
        contentType: "application/json",
        success: function (data) {
          $("#geoFenceModal").modal("hide");
        },
        error: function (error) {
          console.error("Error:", error);
        },
      });
    }

    $(function () {
      $('input[name="daterange"]').daterangepicker(
        {
          opens: "middle",
        },
        function (start, end, label) {
          console.log(
            "A new date selection was made: " +
              start.format("YYYY-MM-DD") +
              " to " +
              end.format("YYYY-MM-DD")
          );
        }
      );
    });

    $(function () {
      $('input[name="daterangemodal"]').daterangepicker(
        {
          opens: "middle",
        },
        function (start, end, label) {
          console.log(
            "A bagong date selection was made: " +
              start.format("YYYY-MM-DD") +
              " to " +
              end.format("YYYY-MM-DD")
          );
        }
      );
    });

    function searchTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInput");
      filter = input.value.toUpperCase();
      table = document.getElementById("dataTableattendance");
      tr = table.getElementsByTagName("tr");

      for (i = 1; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        found = false;

        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
            break;
          }
        }

        if (found) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }

    //#region Import Salary
    $(document).on("click", "#importExcelBtn", function () {
      $("#importsalarymodal").modal("show");
    });

    $(document).on("click", "#importexcelsavebtn", function () {
      let uploadData = $("#importexcelfile").val();
      if (uploadData != "") {
        Loading("Uploading, Please wait for a moment...");
        UploadProcess();
      } else {
        warning("Warning!", "No File Chosen!");
      }
    });

    function UploadProcess() {
      //Reference the FileUpload element.
      var fileUpload = document.getElementById("importexcelfile");

      //Validate whether File is valid Excel file.
      var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.xls|.xlsx|.csv|.ods)$/;
      if (regex.test(fileUpload.value.toLowerCase())) {
        if (typeof FileReader != "undefined") {
          var reader = new FileReader();

          //For Browsers other than IE.
          if (reader.readAsBinaryString) {
            reader.onload = function (e) {
              GetTableFromExcel(e.target.result);
            };
            reader.readAsBinaryString(fileUpload.files[0]);
          } else {
            //For IE Browser.
            reader.onload = function (e) {
              var data = "";
              var bytes = new Uint8Array(e.target.result);
              for (var i = 0; i < bytes.byteLength; i++) {
                data += String.fromCharCode(bytes[i]);
              }
              GetTableFromExcel(data);
            };
            reader.readAsArrayBuffer(fileUpload.files[0]);
          }
        } else {
          warning("Upload", "This browser does not support HTML5.");
        }
      } else {
        warning("Upload", "Please upload a valid Excel file.");
      }
    }

    function GetTableFromExcel(data) {
      var workbook = XLSX.read(data, {
        type: "binary",
      });

      var Sheet = workbook.SheetNames[0];
      var excelRows = XLSX.utils.sheet_to_row_object_array(
        workbook.Sheets[Sheet]
      );
      var columns = Object.keys(excelRows[0]);
      var myTable = document.createElement("table");
      myTable.border = "1";
      var row = myTable.insertRow(-1);

      var dataExcelArr = [];
      for (var i = 0; i < excelRows.length; i++) {
        var data = [];
        var row = myTable.insertRow(-1);
        for (var j = 0; j < columns.length; j++) {
          var cell = row.insertCell(-1);
          cell.innerHTML = excelRows[i][columns[j]];
          data.push({
            item: excelRows[i][columns[j]],
          });
        }
        dataExcelArr.push({
          id: data[0].item,
          attendancedate: data[1].item,
          logs: data[2].item,
        });
      }
      excelDataSave(dataExcelArr);
    }

    function excelDataSave(data) {
      var dataraw = JSON.stringify(data, null, 2);
      console.log(dataraw);
      $.ajax({
        type: "POST",
        url: "/attendance/migrateattendance",
        data: {
          data: dataraw,
        },
        success: function (result) {
          hideLoading();
          console.log("Message: ", result.msg);
          if (result.msg != "success") {
            warning("Info", result.msg);

            $(document).on("click", "#txtBtn", function () {
              downloadTxtFile(result.data, "existing_invalid_data.txt");
            });
          } else {
            success("Saved!", "Data saved!");
            $("#importsalarymodal").modal("hide");
            $("#importexcelfile").val("");
          }

          LoadTable();
        },

        error: function (result) {
          console.error(result);
        },
      });
    }
    //#endregion
  });
</script>
