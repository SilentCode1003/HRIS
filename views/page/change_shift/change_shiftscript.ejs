<script>
  let changeshift = "";
  let targetdate = "";
  let actualdate = "";
  let employeeid = "";
  let status = "";

  $(document).ready(function () {
    const manualMemoTab = $("#manualMemoTab");
    const automationTab = $("#automationTab");
    const dynamicButtonContainer = $("#dynamicButton");
    const titleCard = $("#titleCard");

    if (
      manualMemoTab.length &&
      automationTab.length &&
      dynamicButtonContainer.length
    ) {
      console.log("Elements found: Adding event listeners.");

      function updateButton(isManualMemo) {
        if (isManualMemo) {
          dynamicButtonContainer.html(`
            <div class="flex">
              <button type="button" class="btn btn-add-color" data-bs-toggle="modal" data-bs-target="#subgroupmodal">
                <b>+ Add Shift Rest Day</b>
              </button>
            </div>
          `);
          titleCard.text("Shift Adjustments - Rest Day");
        } else {
          dynamicButtonContainer.html(`
            <div class="flex">
              <button id="addDeductionBtn" type="button" class="btn btn-add-color">
                <b>+ Add Shift Time</b>
              </button>
            </div>
          `);
          titleCard.text("Shift Adjustments - Shift Time");
        }
      }

      manualMemoTab.on("click", function () {
        updateButton(true);
      });

      automationTab.on("click", function () {
        updateButton(false);
      });

      updateButton(true);
    } else {
      console.error("One or more elements are missing:", {
        manualMemoTab: manualMemoTab.length,
        automationTab: automationTab.length,
        dynamicButtonContainer: dynamicButtonContainer.length,
      });
    }

    LoadTable();
    LoadList();
    searchTable();
    LoadListEdit();

    //#region Rest Day

    $(document).on("keyup", "#myInput", function () {
      searchTable();
    });

    // $(function () {
    //   var dtToday = new Date();

    //   var month = dtToday.getMonth() + 1;
    //   var day = dtToday.getDate();
    //   var year = dtToday.getFullYear();
    //   if (month < 10) month = "0" + month.toString();
    //   if (day < 10) day = "0" + day.toString();

    //   var minDate = year + "-" + month + "-" + day;

    //   $("#targetdate").attr("min", minDate);
    //   $("#actualdate").attr("min", minDate);

    //   $('input[type="date"]').on("change", function () {
    //     var dateInput = this.value;
    //     var date = new Date(dateInput);
    //     var options = { weekday: "long" };
    //     var dayName = new Intl.DateTimeFormat("en-US", options).format(date);

    //     if (this.id === "targetdate") {
    //       $("#targetdayName").val(dayName);
    //     } else if (this.id === "actualdate") {
    //       $("#actualdayName").val(dayName);
    //     }
    //   });
    // });

    $(function () {
      $('input[type="date"]').on("change", function () {
        var dateInput = this.value;
        var date = new Date(dateInput);
        var options = { weekday: "long" };
        var dayName = new Intl.DateTimeFormat("en-US", options).format(date);

        if (this.id === "targetdate") {
          $("#targetdayName").val(dayName);
        } else if (this.id === "actualdate") {
          $("#actualdayName").val(dayName);
        }
      });
    });

    function LoadTable() {
      $("#dataTableChangeShiftSettings").DataTable({
        destroy: true,
        processing: true,
        serverSide: true,
        paging: false,
        searching: false,
        info: false,
        scrollY: 600,
        scrollCollapse: true,
        serverMethod: "GET",
        ajax: {
          url: "/change_shift/load",
          dataSrc: (json) => {
            var finalData = [];
            var data = json.data;

            $.each(data, (key, item) => {
              var action = "";
              var status = item.shiftstatus;

              console.log(status);
              

              if (status == "Active") {
                action = `
                <button id="editBtn" class="btn text-primary" name="editBtn" data-bs-toggle="modal" data-bs-target="#editchangeshift"><i class="fas fa-fw fa-edit"></i></button>
                <button id="updateBtn" class="btn text-primary" name="updateBtn"><i class="fas fa-fw fa-eye"></i></button>
                            `;
              } else {
                action = `
                <button id="updateBtn" class="btn text-primary" name="updateBtn"><i class="fas fa-fw fa-eye-slash"></i></button>
                            `;
              }

              finalData.push({
                changeshift: item.id,
                employeeid: item.employeeid,
                fullname: item.fullname,
                actualrd: item.actualrd,
                changerd: item.changerd,
                createby: item.createby,
                shiftstatus: item.shiftstatus,
                action: action,
              });
            });

            return finalData;
          },
        },
        columns: [
          { data: "changeshift" },
          { data: "employeeid" },
          { data: "fullname" },
          { data: "actualrd" },
          { data: "changerd" },
          { data: "createby" },
          { data: "shiftstatus" },
          { data: "action" },
        ],
        createdRow: function (row, data, dataIndex) {
          //miyaka
          var statusCell = $(row).find("td:eq(5)");

          var statusText = data.shiftstatus;

          var statusClass = "";

          switch (statusText.toLowerCase()) {
            case "active":
              statusClass = "active-status";
              break;
            case "inactive":
              statusClass = "inactive-status";
              break;
            default:
              statusClass = "";
          }

          statusCell.html(`<span class="${statusClass}">${statusText}</span>`);

          $("td", row).each(function (index) {
            this.style.textAlign = "center";
            this.style.verticalAlign = "middle";
          });
        },
        initComplete: function () {},
      });
    }

    $(document).on("click", "#changeshiftsavebtn", function () {
      let employeeid = $("#csemployeename").val();
      let targetrddate = $("#targetdate").val();
      let actualrddate = $("#actualdate").val();

      var message = "";

      if (employeeid == "") {
        message += "employeeid is required ";
      }

      if (targetrddate == "") {
        message += "targetrddate is required ";
      }

      if (actualrddate == "") {
        message += "actualrddate is required ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "POST",
          url: "/change_shift/save",
          data: {
            employeeid: employeeid,
            targetrddate: targetrddate,
            actualrddate: actualrddate,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal(
                "Save Successfully",
                "You clicked the button!",
                "success"
              ).then((result) => {
                window.location.reload();
              });
              LoadTable();
            } else if (result.msg == "exist") {
              swal("Error", "This combination already exists.", "error");
            }
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
          },
        });
      }
    });

    function LoadList() {
      $.ajax({
        type: "GET",
        url: "/employee/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.id, item.id);
            $(options).html(item.fullname);
            $("#csemployeename").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    function LoadListEdit() {
      $.ajax({
        type: "GET",
        url: "/employee/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.id, item.id);
            $(options).html(item.fullname);
            $("#editcsemployeename").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    $("#dataTableChangeShiftSettings tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      changeshift = dataRow[0];
      employeeid = dataRow[1];
      actualdate = dataRow[3];
      targetdate = dataRow[4];
      status = dataRow[5];
    });

    $(document).on("click", "#editBtn", function () {
      $.ajax({
        type: "POST",
        url: "/change_shift/getchange_shift",
        data: {
          changeshift: changeshift,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            $.each(existingData, (key, item) => {
              $("#editcsemployeename").val(item.employeeid);
              $("#editactualdate").val(item.actualrd);
              $("#edittargetdate").val(item.changerd);
              $("#editshiftstatus").val(item.shiftstatus);
            });
          } else {
            swal("Error fetching employee data", msg, "error");
          }
        },
        error: function (err) {
          console.error("An error occurred while fetching employee data", err);
          swal("An error occurred while fetching employee data", msg, "error");
        },
      });
    });

    $(function () {
      $('input[type="date"]').on("change", function () {
        var dateInput = this.value;
        var date = new Date(dateInput);
        var options = { weekday: "long" };
        var dayName = new Intl.DateTimeFormat("en-US", options).format(date);
        if (this.id === "edittargetdate") {
          $("#targetdayName").val(dayName);
        } else if (this.id === "editactualdate") {
          $("#actualdayName").val(dayName);
        }
      });
    });

    $(document).on("click", "#editchangeshiftsavebtn", function () {
      let id = changeshift;
      let employeeid = $("#editcsemployeename").val();
      let actualrd = $("#editactualdate").val();
      let changerd = $("#edittargetdate").val();
      let shiftstatus = $("#editshiftstatus").val();

      let message = "";

      if (employeeid === "") {
        message += "employeeid ID is required. ";
      }

      if (actualrd === "") {
        message += "actualrd is required. ";
      }

      if (changerd === "") {
        message += "changerd is required. ";
      }

      if (shiftstatus === "") {
        message += "shiftstatus is required. ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "PUT",
          url: "/change_shift/edit",
          data: {
            changeshift: id,
            employeeid: employeeid,
            actualrd: actualrd,
            changerd: changerd,
            shiftstatus: shiftstatus,
          },
          success: function (result) {
            if (result.msg === "success") {
              swal({
                title: "Update Successfully",
                text: "You clicked the button!",
                icon: "success",
                button: "OK!",
              }).then(() => {
                window.location.reload();
              });
            } else if (result.msg === "exist") {
              swal(
                "Exist",
                "Maybe The Department and Approver Count combination already exists.",
                "warning"
              );
            } else {
              swal("Error", "An error occurred while updating.", "error");
            }
          },
          error: function (err) {
            swal(
              "Error",
              "An error occurred while making the request.",
              "error"
            );
          },
        });
      }
    });

    function searchTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInput");
      filter = input.value.toUpperCase();
      table = document.getElementById("dataTableChangeShiftSettings");
      tr = table.getElementsByTagName("tr");
      for (i = 0; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
          }
        }
        if (found) {
          tr[i].style.display = "";
          found = false;
        } else {
          tr[i].style.display = "none";
        }
      }
    }

    //#endregion

    //#region Shift Time
    $(document).on("click", "#addDeductionBtn", function () {
      $("#subgroupmodaltime").modal("show");
    });

    $(document).on("click", "#viewBtn", function () {
      $("#editchangeshifttime").modal("show");
    });

    LoadEmpDeduc();

    $(document).on("click", "#automationTab", function () {
      console.log("Hit");
      $("#dataTableShiftTimeAdjustments").find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/change_shift/loadshifttime",
        success: function (json) {
          var finalData = [];
          var data = json.data;
          console.log(finalData);

          var material_list_tbl = document.getElementById(
            "dataTableShiftTimeAdjustments"
          );

          $.each(data, function (key, item) {
            var row = material_list_tbl.insertRow(1);
            var SHIFTTIME_ID = row.insertCell(0);
            var FULLNAME = row.insertCell(1);
            var TARGET_DATE = row.insertCell(2);
            var ORIGINAL_SHIFT = row.insertCell(3);
            var CHANGED_SHIFT = row.insertCell(4);
            var CREATE_BY = row.insertCell(5);
            var STATUS = row.insertCell(6);
            var ACTION = row.insertCell(7);

            SHIFTTIME_ID.innerHTML = item.id;
            FULLNAME.innerHTML = item.fullname;
            TARGET_DATE.innerHTML = item.target_date;
            ORIGINAL_SHIFT.innerHTML = item.original_shift;
            CHANGED_SHIFT.innerHTML = item.changed_shift;
            STATUS.innerHTML = item.status;
            CREATE_BY.innerHTML = item.createby;

            var adjustmentStatus = item.status;
            var statusClass = "";
            switch (adjustmentStatus.toLowerCase()) {
              case "active":
                statusClass = "active-status";
                break;
              case "inactive":
                statusClass = "inactive-status";
                break;
              default:
                statusClass = "";
            }
            STATUS.innerHTML = `<span class="${statusClass}">${adjustmentStatus}</span>`;

            ACTION.innerHTML =
              '<button id="viewBtn" class="btn text-primary view-btn"><i class="fas fa-fw fa-eye"></i></button>';
            $.each(
              [
                SHIFTTIME_ID,
                FULLNAME,
                TARGET_DATE,
                ORIGINAL_SHIFT,
                CHANGED_SHIFT,
                CREATE_BY,
                STATUS,
                ACTION,
              ],
              function (_, cell) {
                cell.style.textAlign = "center";
                cell.style.verticalAlign = "middle";
              }
            );
          });

          $("#dataTableShiftTimeAdjustments").on("click", "tr", function () {
            var dataRow = [];
            $(this)
              .find("td")
              .each(function () {
                dataRow.push($(this).text());
              });
            changeshift = dataRow[0];
            console.log("Selected Leave ID:", changeshift);
          });
        },
        error: function (xhr, status, error) {
          console.error("Error fetching approved leaves:", status, error);
        },
      });
    });

    function LoadEmpDeduc() {
      $.ajax({
        type: "GET",
        url: "/employee/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.id, item.id);
            $(options).html(item.fullname);
            $("#timeemployeename").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    $("#timeemployeename").on("change", function () {
      let employeeid = $(this).val();
      $("#timetargertdate").val("");
      $("#timefromorigin").val("");
      $("#timetoorigin").val("");
      $.ajax({
        type: "POST",
        url: "/payroll_adjustments/getimage",
        data: { employeeid: employeeid },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            $.each(existingData, (key, item) => {
              $("#previewleave").attr(
                "src",
                "data:image/jpg;base64," + item.profile_pic
              );
            });
          } else {
            swal("Error fetching employee data", "", "error");
          }
        },
        error: function (err) {
          swal("An error occurred while fetching employee data", err, "error");
        },
      });
    });

    $("#timetargertdate").on("change", function () {
      let target_date = $(this).val();
      let employeeid = $("#timeemployeename").val();

      if (!target_date) {
        swal("Please select a date", "", "warning");
        return;
      }
      function getDayName(dateString) {
        const date = new Date(dateString);
        return date.toLocaleString("en-US", { weekday: "long" });
      }
      let dayName = getDayName(target_date);
      $.ajax({
        type: "POST",
        url: "/change_shift/getshift",
        data: {
          employeeid: employeeid,
          dayname: dayName,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;
            $.each(existingData, (key, item) => {
              $("#timefromorigin").val(item.time_in);
              $("#timetoorigin").val(item.time_out);
            });
          } else {
            swal("Error fetching employee data", "", "error");
          }
        },
        error: function (err) {
          swal("An error occurred while fetching employee data", err, "error");
        },
      });
    });

    //#endregion

    //#region Event Listeners
    $(document).on("click", "#updateBtn", function () {
      Upsert(
        "PUT",
        "/change_shift/update",
        {
          employeeid: employeeid,
          actualrddate: actualdate,
          targetrddate: targetdate,
          changeshift: changeshift,
          status: status,
        },
        (result) => {
          if (result.msg === "success") {
            success("Success", "Data Saved Successfully");
            LoadTable();
          } else {
            swal("Error", "An error occurred while updating.", "error");
          }
        }
      );
    });
    //#endregion
  });
</script>
