<script>
  $(document).ready(function () {
    let salaryid = "";
    console.log("Initialize");
    LoadTable();
    LoadListEmp();
    searchTable();
    LoadeditListEmp();
    formatCurrencyValue();

    $(document).on("keyup", "#myInput", function () {
      searchTable();
    });

    document
      .getElementById("exportExcelBtn")
      .addEventListener("click", function () {
        exportTableToExcel(
          "dataTablesalary",
          "EmployeeSalary.xlsx",
          function () {
            swal(
              "Update Successfully",
              "You clicked the button!",
              "success"
            ).then((results) => {
              window.location.reload();
            });
            LoadTable();
          }
        );
      });

    function LoadTable() {
      $("#dataTablesalary").DataTable({
        destroy: true,
        processing: true,
        serverSide: true,
        paging: false,
        searching: false,
        info: false,
        scrollY: 600,
        scrollCollapse: true,
        serverMethod: "GET",
        ajax: {
          url: "/salary/load",
          dataSrc: (json) => {
            var finalData = [];
            var data = json.data;

            $.each(data, (key, item) => {
              var action = "";
              var status = item.status;

              action = `
                        <button id="editBtn" class="btn text-primary" name="editBtn" data-bs-toggle="modal" data-bs-target="#editsalarymodal"><i class="fas fa-fw fa-pen"></i></button>
                    `;

              // var imgElement = document.createElement("img");
              // imgElement.src = "data:image/jpg;base64," + item.image;
              // imgElement.alt = "Profile Image";
              // imgElement.style.width = "90px";
              // imgElement.style.height = "90px";

              finalData.push({
                // image: imgElement.outerHTML,
                salaryid: item.salaryid,
                employeeid: item.employeeid,
                monthly: item.monthly,
                allowances: item.allowances,
                adjustments: item.adjustments,
                payrolltype: item.payrolltype,
                action: action,
              });
            });

            return finalData;
          },
        },
        columnDefs: [
          {
            targets: 1,
            className: "td-indent",
          },
        ],
        columns: [
          { data: "salaryid" },
          { data: "employeeid" },
          {
            data: "monthly",
            render: function (data, type, row) {
              return (
                "₱" +
                parseFloat(data).toLocaleString("en-US", {
                  minimumFractionDigits: 2,
                  maximumFractionDigits: 2,
                })
              );
            },
          },
          {
            data: "allowances",
            render: function (data, type, row) {
              return (
                "₱" +
                parseFloat(data).toLocaleString("en-US", {
                  minimumFractionDigits: 2,
                  maximumFractionDigits: 2,
                })
              );
            },
          },
          {
            data: "adjustments",
            render: function (data, type, row) {
              return (
                "₱" +
                parseFloat(data).toLocaleString("en-US", {
                  minimumFractionDigits: 2,
                  maximumFractionDigits: 2,
                })
              );
            },
          },
          { data: "payrolltype" },
          { data: "action" },
        ],

        createdRow: function (row, data, dataIndex) {
          //miyaka
          var monthlyCell = $(row).find("td:eq(2)");
          var allowancesCell = $(row).find("td:eq(3)");

          monthlyCell.wrapInner("<span class='monthly-text'></span>");
          allowancesCell.wrapInner("<span class='allowances-text'></span>");

          $("td", row).each(function (index) {
            this.style.textAlign = "center";
            this.style.verticalAlign = "middle";
          });
        },
        initComplete: function () {
          console.log("Done");
        },
      });
    }

    $(document).on("click", "#salarysavebtn", function () {
      let employeeid = $("#salaryemp").val();
      let monthly = $("#msemp").val();
      let allowances = $("#allowances").val();
      let adjustments = $("#adjustments").val();
      let payrolltype = $("#payrolltype").val();
      let effectivedate = $("#effectivedate").val();

      var message = "";

      if (employeeid == "") {
        message += "employeeid is required ";
      }

      if (monthly == "") {
        message += "monthly is required ";
      }

      if (allowances == "") {
        message += "allowances is required ";
      }

      if (adjustments == "") {
        message += "monthly is required ";
      }

      if (payrolltype == "") {
        message += "allowances is required ";
      }

      if (effectivedate == "") {
        message += "effectivedate is required ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        monthly = monthly.replace(/,/g, "").replace("₱", "");
        allowances = allowances.replace(/,/g, "").replace("₱", "");
        adjustments = adjustments.replace(/,/g, "").replace("₱", "");
        $.ajax({
          type: "POST",
          url: "/salary/save",
          data: {
            employeeid: employeeid,
            payrolltype: payrolltype,
            monthly: parseFloat(monthly),
            allowances: parseFloat(allowances),
            adjustments: parseFloat(adjustments),
            effectivedate: effectivedate,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal({
                title: "Saved Successfully",
                text: "You clicked the button!",
                icon: "success",
                button: "OK!",
              }).then((result) => {
                window.location.reload();
              });
              LoadTable();
            } else {
              swal({
                title: "Exist",
                text: "Data already exists!",
                icon: "warning",
                button: "OK!",
              }).then((result) => {
                window.location.reload();
              });
              LoadTable();
            }
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
            console.error("Error saving data:", err);
          },
        });
      }
    });

    function LoadListEmp() {
      $.ajax({
        type: "GET",
        url: "/employee/selectdistinctsalary",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.id, item.id);
            $(options).html(item.fullname);
            $("#salaryemp").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    function LoadeditListEmp() {
      $.ajax({
        type: "GET",
        url: "/employee/loadedit",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.id, item.id);
            $(options).html(item.fullname);
            $("#editsalaryemp").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    $("#dataTablesalary tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      salaryid = dataRow[0];
    });

    $(document).on("click", "#editBtn", function () {
      $.ajax({
        type: "POST",
        url: "/salary/getsalary",
        data: {
          salaryid: salaryid,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            $.each(existingData, (key, item) => {
              $("#editdepartmentid").val(item.salaryid);
              $("#editsalaryemp").val(item.employeeid);
              $("#editmsemp").val(formatCurrencyValue(item.monthly));
              $("#editallowances").val(formatCurrencyValue(item.allowances));
              $("#editadjustments").val(formatCurrencyValue(item.adjustments));
              $("#editpayrolltype").val(item.payrolltype);
            });
          } else {
            swal("Error fetching employee data", message, "error");
          }
        },
        error: function (err) {
          swal(
            "An error occurred while fetching employee data",
            message,
            "error"
          );
        },
      });
    });

    $(document).on("click", "#editsalarysavebtsn", function () {
      console.log("Save button clicked");
      let id = salaryid;
      let employeeid = $("#editsalaryemp").val();
      let monthly = $("#editmsemp")
        .val()
        .replace(/[^\d.-]/g, "");
      let adjustments = $("#editadjustments")
        .val()
        .replace(/[^\d.-]/g, "");
      let allowances = $("#editallowances")
        .val()
        .replace(/[^\d.-]/g, "");
      let payrolltype = $("#editpayrolltype").val();
      let effectivedate = $("#editeffectivedate").val();

      var message = "";

      if (employeeid === "") {
        message += "employeeid is required. ";
      }

      if (monthly === "") {
        message += "monthly is required. ";
      }

      if (allowances === "") {
        message += "allowances is required. ";
      }

      if (adjustments === "") {
        message += "monthly is required. ";
      }

      if (payrolltype === "") {
        message += "allowances is required. ";
      }

      if (effectivedate === "") {
        message += "effectivedate is required. "; 
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "PUT",
          url: "/salary/edit",
          data: {
            salaryid: id,
            employeeid: employeeid,
            monthly: parseFloat(monthly),
            allowances: parseFloat(allowances),
            adjustments: parseFloat(adjustments),
            payrolltype: payrolltype,
            effectivedate: effectivedate,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal({
                title: "Update Successfully",
                text: "You clicked the button!",
                icon: "success",
                button: "OK!",
              }).then((result) => {
                window.location.reload();
              });
              LoadTable();
            } else if (result.msg == "exist") {
              swal({
                title: "Exist",
                text: "Data already exists!",
                icon: "warning",
                button: "OK!",
              });
            } else {
              swal(
                "Data already exists!",
                "You clicked the button!",
                "warning"
              );
            }
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
          },
        });
      }
    });

    //#region FUNCTIONS
    function searchTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInput");
      filter = input.value.toUpperCase();
      table = document.getElementById("dataTablesalary");
      tr = table.getElementsByTagName("tr");
      for (i = 0; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
          }
        }
        if (found) {
          tr[i].style.display = "";
          found = false;
        } else {
          tr[i].style.display = "none";
        }
      }
    }
    //#endregion

    //#region Import Salary
    $(document).on("click", "#importExcelBtn", function () {
      $("#importsalarymodal").modal("show");
    });

    $(document).on("click", "#importexcelsavebtn", function () {
      let uploadData = $("#importexcelfile").val();
      if (uploadData != "") {
        Loading("Uploading, Please wait for a moment...");
        UploadProcess();
      } else {
        warning("Warning!", "No File Chosen!");
      }
    });

    function UploadProcess() {
      //Reference the FileUpload element.
      var fileUpload = document.getElementById("importexcelfile");

      //Validate whether File is valid Excel file.
      var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.xls|.xlsx|.csv|.ods)$/;
      if (regex.test(fileUpload.value.toLowerCase())) {
        if (typeof FileReader != "undefined") {
          var reader = new FileReader();

          //For Browsers other than IE.
          if (reader.readAsBinaryString) {
            reader.onload = function (e) {
              GetTableFromExcel(e.target.result);
            };
            reader.readAsBinaryString(fileUpload.files[0]);
          } else {
            //For IE Browser.
            reader.onload = function (e) {
              var data = "";
              var bytes = new Uint8Array(e.target.result);
              for (var i = 0; i < bytes.byteLength; i++) {
                data += String.fromCharCode(bytes[i]);
              }
              GetTableFromExcel(data);
            };
            reader.readAsArrayBuffer(fileUpload.files[0]);
          }
        } else {
          warning("Upload", "This browser does not support HTML5.");
        }
      } else {
        warning("Upload", "Please upload a valid Excel file.");
      }
    }

    function GetTableFromExcel(data) {
      //Read the Excel File data in binary
      var workbook = XLSX.read(data, {
        type: "binary",
      });

      //get the name of First Sheet.
      var Sheet = workbook.SheetNames[0];

      //Read all rows from First Sheet into an JSON array.
      var excelRows = XLSX.utils.sheet_to_row_object_array(
        workbook.Sheets[Sheet]
      );
      var columns = Object.keys(excelRows[0]);

      //Create a HTML Table element.
      var myTable = document.createElement("table");
      myTable.border = "1";

      //Add the header row.
      var row = myTable.insertRow(-1);

      var dataExcelArr = [];
      //Add the data rows from Excel file.
      for (var i = 0; i < excelRows.length; i++) {
        //Add the data row.
        var data = [];
        var row = myTable.insertRow(-1);
        for (var j = 0; j < columns.length; j++) {
          var cell = row.insertCell(-1);
          cell.innerHTML = excelRows[i][columns[j]];
          data.push({
            item: excelRows[i][columns[j]],
          });
        }
        dataExcelArr.push({
          employeeid: data[1].item,
          monthly: data[2].item,
          allowance: data[3].item,
          adjustment: data[4].item,
          payrolltype: data[5].item,
        });
      }
      excelDataSave(dataExcelArr);
    }

    function excelDataSave(data) {
      var dataraw = JSON.stringify(data, null, 2);
      console.log(dataraw);
      $.ajax({
        type: "POST",
        url: "/salary/upload",
        data: {
          data: dataraw,
        },
        success: function (result) {
          hideLoading();
          console.log("Message: ", result.msg);
          if (result.msg != "success") {
            warning("Info", result.msg);

            $(document).on("click", "#txtBtn", function () {
              downloadTxtFile(result.data, "existing_invalid_data.txt");
            });
          } else {
            success("Saved!", "Data saved!");
            $("#importsalarymodal").modal("hide");
            $("#importexcelfile").val("");
          }

          LoadTable();
        },

        error: function (result) {
          console.error(result);
        },
      });
    }
    //#endregion
  });
</script>
