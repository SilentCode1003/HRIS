<script>
    let govloanid = "";
  
    $(document).ready(function () {
      LoadTable();
      LoadList();
      LoadEditEmp();
      LoadPayrollDate();
      LoadLoanType();
      EditLoadPayrollDate();
      searchTable();
      LoadAdvancedList();
      AdvancedLoadPayrollDate();
  
      $(document).on("keyup", "#myInput", function () {
        searchTable();
      });
  
      function LoadTable() {
        $("#dataTablegovermentLoans").DataTable({
          destroy: true,
          processing: true,
          serverSide: true,
          paging: false,
          searching: false,
          info: false,
          scrollY: 600,
          scrollCollapse: true,
          serverMethod: "GET",
          ajax: {
            url: "/eportalgovloans/load",
            dataSrc: (json) => {
              var finalData = [];
              var data = json.data;
  
              $.each(data, (key, item) => {
                var action = "";
                var status = item.status;
                action = `
                        <button id="viewBtn" class="btn text-primary" name="viewBtn" data-bs-toggle="modal" data-bs-target="#viewgovloansmodal"><i class="fas fa-eye"></i></button>
                       `;
  
                finalData.push({
                  loanid: item.loanid,
                  loan_type: item.loan_type,
                  per_month: item.per_month,
                  amount_recieved: item.amount_recieved,
                  createdate: item.createdate,
                  createby: item.createby,
                  status: item.status,
                  action: action,
                });
              });
  
              return finalData;
            },
          },
          columnDefs: [
            {
              targets: 1,
              className: "td-indent",
            },
          ],
          columns: [
            { data: "loanid" },
            { data: "loan_type" },
            {
              data: "per_month",
              render: function (data, type, row) {
                return (
                  "₱" +
                  parseFloat(data).toLocaleString("en-US", {
                    minimumFractionDigits: 2,
                    maximumFractionDigits: 2,
                  })
                );
              },
            },
            {
              data: "amount_recieved",
              render: function (data, type, row) {
                return (
                  "₱" +
                  parseFloat(data).toLocaleString("en-US", {
                    minimumFractionDigits: 2,
                    maximumFractionDigits: 2,
                  })
                );
              },
            },
            { data: "createdate" },
            { data: "createby" },
            { data: "status" },
            { data: "action" },
          ],
          createdRow: function (row, data, dataIndex) {
            var statusCell = $(row).find("td:eq(6)");
            statusCell.wrapInner("<span class='approved-status'></span>");
  
            $("td", row).each(function (index) {
              this.style.textAlign = "center";
              this.style.verticalAlign = "middle";
            });
          },
  
          initComplete: function () {},
        });
      }
  
      function LoadList() {
        $.ajax({
          type: "GET",
          url: "/employee/load",
          success: function (result) {
            var data = result.data;
  
            $.each(data, function (key, item) {
              var options = new Option(item.id, item.id);
              $(options).html(item.fullname);
              $("#govloanemployeeid").append(options);
            });
          },
          error: function (result) {
            alert("error: " + result.data);
          },
        });
      }
  
      function LoadAdvancedList() {
        $.ajax({
          type: "GET",
          url: "/employee/load",
          success: function (result) {
            var data = result.data;
  
            $.each(data, function (key, item) {
              var options = new Option(item.id, item.id);
              $(options).html(item.fullname);
              $("#govloanadvancedemployeeid").append(options);
            });
          },
          error: function (result) {
            alert("error: " + result.data);
          },
        });
      }
  
      function LoadEditEmp() {
        $.ajax({
          type: "GET",
          url: "/employee/load",
          success: function (result) {
            var data = result.data;
  
            $.each(data, function (key, item) {
              var options = new Option(item.id, item.id);
              $(options).html(item.fullname);
              $("#editgovloanemployeeid").append(options);
            });
          },
          error: function (result) {
            alert("error: " + result.data);
          },
        });
      }
  
      function LoadPayrollDate() {
        $.ajax({
          type: "GET",
          url: "/gov_loans/loadreq",
          success: function (result) {
            var data = result.data;
  
            $.each(data, function (key, item) {
              var options = new Option(item.payrolldate, item.payrolldate);
              $(options).html(item.payrolldate);
              $("#govloaneffectivedate").append(options);
            });
          },
          error: function (result) {
            swal("error: " + result.data);
          },
        });
      }
  
      function LoadLoanType() {
        $.ajax({
          type: "GET",
          url: "/loan_type/load",
          success: function (result) {
            var data = result.data;
  
            $.each(data, function (key, item) {
              var options = new Option(item.name, item.name);
              $(options).html(item.name);
              $("#govloantype").append(options);
            });
          },
          error: function (result) {
            swal("error: " + result.data);
          },
        });
      }
  
      function EditLoadPayrollDate() {
        $.ajax({
          type: "GET",
          url: "/setpayrolldate/loadreq",
          success: function (result) {
            var data = result.data;
  
            $.each(data, function (key, item) {
              var options = new Option(item.payrolldate, item.payrolldate);
              $(options).html(item.payrolldate);
              $("#addpayrolldateot").append(options);
            });
          },
          error: function (result) {
            swal("error: " + result.data);
          },
        });
      }
  
      function AdvancedLoadPayrollDate() {
        $.ajax({
          type: "GET",
          url: "/setpayrolldate/loadreq",
          success: function (result) {
            var data = result.data;
  
            $.each(data, function (key, item) {
              var options = new Option(item.payrolldate, item.payrolldate);
              $(options).html(item.payrolldate);
              $("#govloanadvancedpayrolldate").append(options);
            });
          },
          error: function (result) {
            alert("error: " + result.data);
          },
        });
      }
  
      $("#dataTablegovermentLoans tbody").on("click", "tr", function () {
        var dataRow = [];
        $(this)
          .closest("tr")
          .find("td")
          .each(function () {
            dataRow.push($(this).text());
          });
        govloanid = dataRow[0];
      });
  
      $(document).on("click", "#viewBtn", function () {
        $("#dataTablegovermentdetails").find("tr:gt(0)").remove();
  
        $.ajax({
          type: "POST",
          url: "/gov_loans/getgovloans",
          data: {
            govloanid: govloanid,
          },
          success: function (result) {
            if (result.msg === "success") {
              const existingData = result.data;
              const TittleContainer = $("#TittleContainer");
              TittleContainer.empty();
  
            
              const firstItem = existingData[0]; 
              const cardHtml = `<h3 class="modal-title" id="">${firstItem.fullname}'s ${firstItem.loan_type}</h3>`;
              $("#datename").text(firstItem.fullname);
              TittleContainer.append(cardHtml);
  
              var totalLoanAmount = 0;
              var totalAmountPaid = 0;
  
  
              var material_list_tbl = $("#dataTablegovermentdetails").DataTable();
              material_list_tbl.clear().draw();
  
              $.each(existingData, function (key, item) {
  
                totalLoanAmount += parseFloat(item.per_month);
  
                var rowNode = material_list_tbl.row
                  .add([
                    formatDate(item.payrolldates),
                    item.loan_type,
                    formatCurrencyValue(item.per_month),
                    item.loanstatus,
                    item.paid_dates,
                    item.payment_type,
                  ])
                  .draw()
                  .node();
  
  
                var statusCell = $(rowNode).find("td:eq(3)");
                var statusText = item.loanstatus;
                var statusClass = "";
  
                switch (statusText) {
                  case "PAID":
                    statusClass = "active-status";
  
                    totalAmountPaid += parseFloat(item.per_month);
                    break;
                  case "NOT PAID":
                    statusClass = "pending-status";
                    break;
                  default:
                    statusClass = "";
                }
  
                statusCell.html(
                  `<span class="${statusClass}">${statusText}</span>`
                );
  
  
                $(rowNode).find("td").css({
                  "text-align": "center",
                  "vertical-align": "middle",
                });
              });
  
              $("#totalloanamount").text(formatCurrencyValue(totalLoanAmount));
              $("#totalamountpaid").text(formatCurrencyValue(totalAmountPaid));
            } else {
              swal("Error fetching");
            }
          },
          error: function (xhr, status, error) {
            console.error(xhr, status, error);
          },
        });
      });
    });
  
    function searchTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInput");
      filter = input.value.toUpperCase();
      table = document.getElementById("dataTablegovermentLoans");
      tr = table.getElementsByTagName("tr");
      for (i = 0; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
          }
        }
        if (found) {
          tr[i].style.display = "";
          found = false;
        } else {
          tr[i].style.display = "none";
        }
      }
    }
  </script>
  