<script>
  let violationid = "";

  $(document).ready(function () {
    LoadTable();
    LoadList();
    LoadEditactionid();
    searchTable();

    $(document).on("keyup", "#myInput", function () {
      searchTable();
    });

    function LoadTable() {
      $("#dataTableviolation").DataTable({
        destroy: true,
        processing: true,
        serverSide: true,
        paging: false,
        searching: false,
        info: false,
        scrollY: 600,
        scrollCollapse: true,
        serverMethod: "GET",
        ajax: {
          url: "/violation/load",
          dataSrc: (json) => {
            var finalData = [];
            var data = json.data;

            $.each(data, (key, item) => {
              var action = "";
              var status = item.status;

              action = `
                    <button id="editBtn" class="btn text-primary" name="editBtn" data-bs-toggle="modal" data-bs-target="#editviolationmodal"><i class="fas fa-fw fa-pen"></i></button>
                   `;

              finalData.push({
                violationid: item.violationid,
                description: item.description,
                actionid: item.actionid,
                createby: item.createby,
                createdate: item.createdate,
                status: item.status,
                action: action,
              });
            });

            return finalData;
          },
        },
        columnDefs: [
          {
            targets: 1,
            className: "td-indent",
          },
        ],
        columns: [
          { data: "violationid" },
          { data: "description" },
          { data: "actionid" },
          { data: "createby" },
          { data: "createdate" },
          { data: "status" },
          { data: "action" },
        ],
        createdRow: function (row, data, dataIndex) {
          //miyaka
          var statusCell = $(row).find("td:eq(5)");

          var statusText = data.status;

          var statusClass = "";

          switch (statusText.toLowerCase()) {
            case "active":
              statusClass = "active-status";
              break;
            case "inactive":
              statusClass = "inactive-status";
              break;
            default:
              statusClass = "";
          }

          statusCell.html(`<span class="${statusClass}">${statusText}</span>`);

          $("td", row).each(function (index) {
            this.style.textAlign = "center";
            this.style.verticalAlign = "middle";
          });
        },

        initComplete: function () {},
      });
    }

    $(document).on("click", "#violationsavebtn", function () {
      let description = $("#violationdescription").val();
      let actionid = $("#violationactionid").val();

      var message = "";

      if (description == "") {
        message += "shiftname is required ";
      }

      if (actionid == "") {
        message += "status is required ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "POST",
          url: "/violation/save",
          data: {
            description: description,
            actionid: actionid,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal({
                title: "Saved Successfully",
                text: "You clicked the button!",
                icon: "success",
                button: "OK!",
              }).then((results) => {
                window.location.reload();
              });
              LoadTable();
            } else {
              swal({
                title: "Exist",
                text: "Data already exists!",
                icon: "warning",
                button: "OK!",
              });
            }
          },
          error: function (err) {
            swal("Data already exist!", "You clicked the button!", "warning");
          },
        });
      }
    });

    function LoadList() {
      $.ajax({
        type: "GET",
        url: "/disciplinaryaction/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.actioncode, item.actioncode);
            $(options).html(item.actioncode);
            $("#violationactionid").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    function LoadEditactionid() {
      $.ajax({
        type: "GET",
        url: "/disciplinaryaction/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.actionid, item.actionid);
            $(options).html(item.actioncode);
            $("#editviolationactionid").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    $("#dataTableviolation tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      violationid = dataRow[0];
    });

    $(document).on("click", "#editBtn", function () {
      $.ajax({
        type: "POST",
        url: "/violation/getviolation",
        data: {
          violationid: violationid,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            $.each(existingData, (key, item) => {
              $("#editshiftid").val(item.violationid);
              $("#editviolationdescription").val(item.description);
              $("#editviolationactionid").val(item.actionid);
              $("#editvatiolationstatus").val(item.status);
            });
          } else {
            swal("Error fetching employee data", "success");
          }
        },
        error: function (err) {
          swal("An error occurred while fetching employee data", err, "error");
        },
      });
    });
    $(document).on("click", "#violationeditbtn", function () {
      let id = violationid;
      let description = $("#editviolationdescription").val();
      let actionid = $("#editviolationactionid").val();
      let status = $("#editvatiolationstatus").val();

      var message = "";

      if (description === "") {
        message += "departmentname is required. ";
      }

      if (actionid === "") {
        message += "status is required. ";
      }

      if (status === "") {
        message += "status is required. ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "POST",
          url: "violation/update",
          data: {
            violationid: id,
            description: description,
            actionid: actionid,
            status: status,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal({
                title: "Update Successfully",
                text: "You clicked the button!",
                icon: "success",
                button: "OK!",
              }).then((results) => {
                window.location.reload();
              });
              LoadTable();
            } else if (result.msg == "exist") {
              swal({
                title: "Exist",
                text: "Data already exists!",
                icon: "warning",
                button: "OK!",
              });
            } else {
              swal(
                "Data already exists!",
                "You clicked the button!",
                "warning"
              );
            }
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
          },
        });
      }
    });

    function searchTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInput");
      filter = input.value.toUpperCase();
      table = document.getElementById("dataTableviolation");
      tr = table.getElementsByTagName("tr");
      for (i = 0; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
          }
        }
        if (found) {
          tr[i].style.display = "";
          found = false;
        } else {
          tr[i].style.display = "none";
        }
      }
    }
  });
</script>
