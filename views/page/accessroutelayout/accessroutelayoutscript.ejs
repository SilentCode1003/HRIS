<script>
  $(document).ready(function () {
    let id = "";
    let status = "";
    let routename = "";
    let layoutname = "";
    let accesname = "";

    LoadList();
    LoadTable();
    LoadListModal();
    searchTable();

    $(document).on("keyup", "#myInput2", function () {
      searchTable();
    });

    $(document).on("click", "#addBtn", function () {
      let route = $("#route").val();
      let layout = $("#layout").val();
      let access = $("#accesstype").val();
      let message = "";

      console.log(route, layout, access);

      if (route == "") {
        message += "route name, ";
      }
      if (layout == "") {
        message += "layout name, ";
      }
      if (access == "--Select Access--") {
        message += "access type, ";
      }

      if (message != "") {
        showSweetAlert(
          "Required",
          `${message.slice(0, -2)} is required!`,
          "info",
          "OK"
        );
      } else {
        $.ajax({
          type: "POST",
          url: "/accessroutelayout/save",
          data: {
            route: route,
            layout: layout,
            access: access,
          },
          success: function (result) {
            console.log(result);
            if (result.msg == "success") {
              LoadTable();
              showSweetAlert("Success", "Added Successfully!", "success", "OK");
            } else {
              LoadTable();
              showSweetAlert(
                "Warning",
                `${route} ${layout} ${access} ${result.msg}`,
                "warning",
                "OK"
              );
            }
          },
          error: function (error) {
            showSweetAlert("Error", error, "error", "OK");
          },
        });
      }
    });

    $(document).on("click", "#editBtn", function () {
      $("#idmodal").val(id);
      $("#editModal").modal("show");
      $("#routemodal").val(routename);
      $("#layoutmodal").val(layoutname);

      // Usage example
      var value = getValueByText("accesstypemodal", `${accesname}`);
      console.log(value); // Outputs the value of the option with display text 'Option 2'

      $(`#accesstypemodal option[value="${value}"]`).attr(
        "selected",
        "selected"
      );
    });

    //Edit Update
    $(document).on("click", "#saveBtn", function () {
      let route = $("#routemodal").val();
      let layout = $("#layoutmodal").val();
      let access = $("#accesstypemodal").val();

      var message = "";

      if (route == "" && access == "" && layout == "") {
        message += "Please fill up atleast 1 field";
      }

      if (message != "") {
        warning("Required", `${message}`);
      } else {
        $.ajax({
          type: "PUT",
          url: "/accessroutelayout/edit",
          data: {
            route: route,
            layout: layout,
            access: access,
            id: id,
          },
          success: function (result) {
            if (result.msg == "success") {
              LoadTable();
              $("#routemodal").val("");
              $("#layoutmodal").val("");
              $("#accessmodal").val("");
              $("#editModal").modal("hide");

              showSweetAlert("Saved", "Edit Successfully!", "success", "OK");
            }

            if (result.msg == "exist") {
              showSweetAlert("Exist", `${route} already exist!`, "info", "OK");
            }
          },
          error: function (err) {
            showSweetAlert("Error", err, "error", "OK");
          },
        });
      }
    });

    // Function to get the value of an option by its display text
    function getValueByText(fieldName, displayText) {
      // Find the select element by its name attribute
      var selectElement = document.querySelector(`select[name="${fieldName}"]`);

      // Check if the select element exists
      if (selectElement) {
        // Loop through the options to find the one that matches the display text
        for (var i = 0; i < selectElement.options.length; i++) {
          if (selectElement.options[i].text === displayText) {
            return selectElement.options[i].value;
          }
        }
      } else {
        console.log("Select element not found");
      }
      return null; // Return null if no matching option is found
    }

    $("#search").on("input", function () {
      filterTableRows("#datatable", 6, "#search");
    });

    $("#data-table tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      console.log(dataRow);
      id = dataRow[0];
      routename = dataRow[1];
      layoutname = dataRow[2];
      accesname = dataRow[3];
      status = dataRow[6];
    });

    //Status Update
    $(document).on("click", "#activeBtn", function () {
      console.log(id);
      console.log(status);
      $.ajax({
        type: "PUT",
        url: "/accessroutelayout/status",
        data: {
          status: status,
          id: id,
        },
        success: function (result) {
          if (result.msg == "success") {
            LoadTable();
            success("Saved", "Successfully");
          }

          if (result.msg == "notexist") {
            warning(`${id} does not exist!`);
          }
        },
        error: function (err) {
          warning("Warning", err);
        },
      });
    });

    $(document).on("click", "#inactiveBtn", function () {
      console.log(id);
      console.log(status);
      $.ajax({
        type: "PUT",
        url: "/accessroutelayout/status",
        data: {
          status: status,
          id: id,
        },
        success: function (result) {
          if (result.msg == "success") {
            LoadTable();
            success("Saved", "Successfully");
          }

          if (result.msg == "notexist") {
            warning(`${id} does not exist!`);
          }
        },
        error: function (err) {
          warning("Warning", err);
        },
      });
    });

    function LoadList() {
      $.ajax({
        type: "GET",
        url: "/access/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.accessid, item.accessid);
            $(options).html(item.accessname);
            $("#accesstype").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    function LoadListModal() {
      $.ajax({
        type: "GET",
        url: "/access/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.accessid, item.accessid);
            $(options).html(item.accessname);
            $("#accesstypemodal").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    function LoadTable() {
      $("#data-table").DataTable({
        destroy: true,
        processing: true,
        serverSide: true,
        paging: false,
        searching: false,
        info: false,
        scrollCollapse: true,
        scrollY: 600,
        serverMethod: "GET",
        ajax: {
          url: "/accessroutelayout/load",
          dataSrc: (json) => {
            var finalData = [];
            var data = json.data;
            let action = "";

            $.each(data, (key, item) => {
              if (item.status === "ACTIVE") {
                action = `
                            <span class="editbutton" id="editBtn" name="editBtn" data-toggle="modal" data-bs-target="#editModal"><i class="fas fa-edit" style="color: rgb(99, 115, 129);"></i></span>
                            <span class="editbutton" id="inactiveBtn"><i class="fas fa-eye-slash" style="color: rgb(99, 115, 129);"></i></span>`;
              } else if (item.status === "INACTIVE") {
                action = `
                            <span class="editbutton" id="editBtn" name="editBtn" data-toggle="modal" data-target="#editModal"><i class="fas fa-edit" style="color: rgb(99, 115, 129);"></i></span>
                            <span class="editbutton" id="activeBtn"><i class="fas fa-eye" style="color: rgb(99, 115, 129);"></i></span>`;
              }

              finalData.push({
                id: item.id,
                route: item.route,
                layout: item.layout,
                accessid: item.accessid,
                createdby: item.createdby,
                createddate: item.createddate,
                status: item.status,
                action: action,
              });
            });

            return finalData;
          },
        },
        columnDefs: [
          {
            targets: 1,
            className: "td-indent",
          },
        ],
        columns: [
          { data: "id" },
          { data: "route" },
          { data: "layout" },
          { data: "accessid" },
          { data: "createdby" },
          { data: "createddate" },
          { data: "status" },
          { data: "action" },
        ],
        createdRow: function (row, data, dataIndex) {
          //miyaka
          var statusCell = $(row).find("td:eq(6)");

          var statusText = data.status;

          var statusClass = "";

          switch (statusText.toLowerCase()) {
            case "pending":
              statusClass = "pending-status";
              break;
            case "cancelled":
              statusClass = "cancelled-status";
              break;
            case "active":
              statusClass = "approved-status";
              break;
            case "inactive":
              statusClass = "rejected-status";
              break;
            default:
              statusClass = "";
          }

          statusCell.html(`<span class="${statusClass}">${statusText}</span>`);

          $("td", row).each(function (index) {
            this.style.textAlign = "center";
            this.style.verticalAlign = "middle";
          });
        },
        initComplete: function () {},
      });
    }

    // $("#search").on("input", function () {
    //   filterTableRows("#data-table", 8, "#search");
    // })

    function searchTable() {
    var input, filter, found, table, tr, td, i, j;
    input = document.getElementById("myInput2");
    filter = input.value.toUpperCase();
    table = document.getElementById("data-table");
    tr = table.getElementsByTagName("tr");
    for (i = 0; i < tr.length; i++) {
      td = tr[i].getElementsByTagName("td");
      for (j = 0; j < td.length; j++) {
        if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
          found = true;
        }
      }
      if (found) {
        tr[i].style.display = "";
        found = false;
      } else {
        tr[i].style.display = "none";
      }
    }
  }
  });
</script>
