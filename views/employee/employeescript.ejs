<script>
  let base64String = "";
  let employeeid = "";
  $(document).ready(function () {
    console.log('Initialize');
    LoadTable();
    LoadList();
    LoadPosition();
    LoadModal();
    LoadModalPosition();


    $(document).on("click", "#employeesavebtn", function () {
      console.log("Save button clicked");
      let firstname = $("#employeefname").val();
      let middlename = $("#employeemname").val();
      let lastname = $("#employeelname").val();
      let birthday = $("#employeebirthday").val();
      let gender = $("#employeegender").val();
      let phone = $("#employeephone").val();
      let email = $("#employeeemail").val();
      let hiredate = $("#employeehiredate").val();
      let jobstatus = $("#employeejobstatus").val();
      let ercontactname = $("#employeeemergencyname").val();
      let ercontactphone = $("#employeeemergencyphone").val();
      let department = $("#employeedepartment").val();
      let position = $("#employeeposition").val();
      let address = $("#employeeaddress").val();
      let profilePicturePath =base64String;

      var message = "";

      if (firstname == "") {
        message += "First Name is required. ";
      }

      if (middlename == "") {
        message += "First Name is required. ";
      }

      if (lastname == "") {
        message += "Last Name is required. ";
      }

      if (birthday == "") {
        message += "Birthday is required. ";
      }

      if (gender == "") {
        message += "Gender is required. ";
      }

      if (phone == "") {
        message += "Phone is required. ";
      }

      if (email == "") {
        message += "Email is required. ";
      }

      if (hiredate == "") {
        message += "Hire Date is required. ";
      }

      if (jobstatus == "") {
        message += "Job Status is required. ";
      }

      if (ercontactname == "") {
        message += "Emergency Contact Name is required. ";
      }

      if (ercontactphone == "") {
        message += "Emergency Contact Phone is required. ";
      }

      if (department == "") {
        message += "Department is required. ";
      }

      if (position == "") {
        message += "Position is required. ";
      }

      if (address == "") {
        message += "Address is required. ";
      }

      if (profilePicturePath == "") {
        message += "Profile is required. ";
      }

      if (message != "") {
        // Display an error message indicating which fields are missing
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "POST",
          url: "/employee/save",
          data: {
            firstname: firstname,
            middlename: middlename,
            lastname: lastname,
            birthday: birthday,
            gender: gender,
            phone: phone,
            email: email,
            hiredate: hiredate,
            jobstatus: jobstatus,
            ercontactname: ercontactname,
            ercontactphone: ercontactphone,
            department: department,
            position: position,
            address: address,
            profilePicturePath: profilePicturePath,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal({
                title: "Saved Successfully",
                text: "You clicked the button!",
                icon: "success",
                button: "OK!",
              })
                .then(results => {
                  window.location.reload();
                });
              LoadTable();
            } else if (result.msg == "exist") {
              swal({
                title: "Exist",
                text: "Data already exists!",
                icon: "warning",
                button: "OK!",
              });
            } else {
              swal("Data already exists!", "You clicked the button!", "warning");
            }
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
          },
        });
      }
    });

    function LoadList() {
      $.ajax({
        type: "GET",
        url: "/department/load",
        success: function (result) {
          console.log(result.data);
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.departmentname, item.departmentname);
            $(options).html(item.departmentname);
            $('#employeedepartment').append(options);
            console.log(item.departmentname);
          });
        },
        error: function (result) {
          alert('error: ' + result.data);
        }
      });


    }

    function LoadPosition() {
      $.ajax({
        type: "GET",
        url: "/position/load",
        success: function (result) {
          console.log(result.data);
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.positionname, item.positionname);
            $(options).html(item.positionname);
            $('#employeeposition').append(options);
            console.log(item.positionname);
          });
        },
        error: function (result) {
          alert('error: ' + result.data);
        }
      });


    }


    function LoadTable() {
      $("#dataTableemployees").DataTable({
        destroy: true,
        processing: true,
        serverSide: true,
        paging: false,
        searching: false,
        info: false,
        scrollY: 400,
        scrollCollapse: true,
        serverMethod: "GET",
        ajax: {
          url: "/employee/load",
          dataSrc: (json) => {
            var finalData = [];
            var data = json.data;

            console.log(data);
  
            console.log(data);
            $.each(data, (key, item) => {
              var action = "";
              var status = item.status;

              action = `
                <button id="edit-btn" class="btn text-primary" name="edit-btn" data-bs-toggle="modal" data-bs-target="#viewmodal"><i class="fas fa-fw fa-eye"></i></button>
               `;

              finalData.push({
                newEmployeeId: item.newEmployeeId,
                firstname: item.firstname,
                phone: item.phone,
                email: item.email,
                department: item.department,
                position: item.position,
                action: action,
              });
            });

            return finalData;
          },
        },
        columnDefs: [
          {
            targets: 1,
            className: "td-indent",
          },
        ],
        columns: [
          { data: "newEmployeeId" },
          { data: "firstname" },
          { data: "phone" },
          { data: "email" },
          { data: "department" },
          { data: "position" },
          { data: "action" },
        ],
        initComplete: function () {
          console.log('Done');
        },
      });
    }

    $("#dataTableemployees tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      console.log(dataRow);
      employeeid = dataRow[0];
    });

    $(document).on("click", "#edit-btn", function () {
      // Get the employee ID from the button's data attribute or from wherever it's defined
    
      // Make an AJAX request to fetch existing data based on the employee ID
      $.ajax({
        type: "POST",
        url: `/employee/getemployee`,
        data: {
          employeeid: employeeid, // Define or obtain the employee ID
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;
    
            $.each(existingData, (key, item) => {
              $("#editemployeeid").val(item.employeeid);
              $("#editemployeefname").val(item.firstname);
              $("#editemployeemname").val(item.middlename);
              $("#editemployeelname").val(item.lastname);
              $("#editemployeebday").val(item.birthday);
              $('#editemployeegender').val(`${item.gender}`)
              //$('#editemployeegender').append(`<option selected value="${item.gender}">${item.gender}</option>`);
              $("#editemployeephone").val(item.phone);
              $("#editemployeeemail").val(item.email);
              $("#editemployeehiredate").val(item.hiredate);
              $('#editemployeejobstatus').val(`${item.jobstatus}`)
             // $('#editemployeejobstatus').append(`<option selected value="${item.jobstatus}">${item.jobstatus}</option>`);
              $("#editemployeeemergencyname").val(item.ercontactname);
              $("#editemployeeemergencyphone").val(item.ercontactphone);
              $("#editemployeedepartment").val(item.department);
              //$('#editemployeeposition').append(`<option selected value="${item.position}">${item.position}</option>`);
              $("#editemployeeaddress").val(item.address);
              $('#editpreview').attr('src', "data:image/jpg;base64," + item.profilePicturePath);
              $('#editemployeeposition').val(`${item.position}`)
              base64String =item.profilePicturePath;
            });
          } else {
            swal("Error fetching employee data", message, "error");
          }
        },
        error: function (err) {
          swal("An error occurred while fetching employee data", message, "error");
        },
      });
    });
    
    $(document).on("click", "#editsavebtn", function () {
      console.log("Save button clicked");
      let newEmployeeId = employeeid;
      let firstname = $("#editemployeefname").val();
      let middlename = $("#editemployeemname").val();
      let lastname = $("#editemployeelname").val();
      let birthday = $("#editemployeebday").val();
      let gender = $("#editemployeegender").val();
      let phone = $("#editemployeephone").val();
      let email = $("#editemployeeemail").val();
      let hiredate = $("#editemployeehiredate").val();
      let jobstatus = $("#editemployeejobstatus").val();
      let ercontactname = $("#editemployeeemergencyname").val();
      let ercontactphone = $("#editemployeeemergencyphone").val();
      let department = $("#editemployeedepartment").val();
      let position = $("#editemployeeposition").val();
      let address = $("#editemployeeaddress").val();
      let profilePicturePath =base64String;// Use base64String for profile picture path      
      var message = "";
      
        if (firstname === "") {
          message += "firstname is required. ";
        }
      
        if (lastname === "") {
          message += "lastname is required. ";
        }
      
        if (birthday === "") {
          message += "birthday is required. ";
        }
  
        if (gender === "") {
          message += "gender is required. ";
        }
      
        if (phone === "") {
          message += "phone is required. ";
        }
      
        if (email === "") {
          message += "email is required. ";
        }
  
        if (hiredate === "") {
          message += "hiredate is required. ";
        }
      
        if (jobstatus === "") {
          message += "jobstatus is required. ";
        }
      
        if (ercontactname === "") {
          message += "ercontactname is required. ";
        }
  
        if (ercontactphone === "") {
          message += "ercontactphone is required. ";
        }
  
        if (department === "") {
          message += "departmentId is required. ";
        }
  
        if (position === "") {
          message += "positionId is required. ";
        }
  
        if (address === "") {
          message += "address is required. ";
        }
  
        if (profilePicturePath === "") {
          message += "profilePicturePath is required. ";
        }      
        if (message !== "") {
          swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "POST",
          url: "/employee/update",
          data: {
            newEmployeeId: newEmployeeId,
            firstname: firstname,
            middlename: middlename,
            lastname: lastname,
            birthday: birthday,
            gender: gender,
            phone: phone,
            email: email,
            hiredate: hiredate,
            jobstatus: jobstatus,
            ercontactname: ercontactname,
            ercontactphone: ercontactphone,
            department: department,
            position: position,
            address: address,
            profilePicturePath: profilePicturePath,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal({
                title: "Update Successfully",
                text: "You clicked the button!",
                icon: "success",
                button: "OK!",
              })
                .then(results => {
                  window.location.reload();
                });
              LoadTable();
            } else if (result.msg == "exist") {
              swal({
                title: "Exist",
                text: "Data already exists!",
                icon: "warning",
                button: "OK!",
              });
            } else {
              swal("Data already exists!", "You clicked the button!", "warning");
            }
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
          },
        });
      }
    });

    function LoadModal() {
      $.ajax({
        type: "GET",
        url: "/department/load",
        success: function (result) {
          console.log(result.data);
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.departmentname, item.departmentname);
            $(options).html(item.departmentname);
            $('#editemployeedepartment').append(options);
            console.log(item.departmentname);
          });
        },
        error: function (result) {
          alert('error: ' + result.data);
        }
      });


    }

    function LoadModalPosition() {
      $.ajax({
        type: "GET",
        url: "/position/load",
        success: function (result) {
          console.log(result.data);
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.positionname, item.positionname);
            $(options).html(item.positionname);
            $('#editemployeeposition').append(options);
            console.log(item.positionname);
          });
        },
        error: function (result) {
          alert('error: ' + result.data);
        }
      });


    }
    
    

    
    

    $(document).on('change', '#employeeprofile', function (e) {
      const input = document.getElementById('employeeprofile');
      const file = input.files[0];

      console.log('click');

      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onloadend = function () {
        const preview = document.getElementById('preview');
        preview.src = reader.result;
      }
      imageUploaded();
    })

    //

    //#region Image Proccessing
    function imageUploaded() {
      const input = document.getElementById('employeeprofile');
      const file = input.files[0];

      var reader = new FileReader();
      console.log("next");

      reader.onload = function () {
        base64String = reader.result.replace("data:", "")
          .replace(/^.+,/, "");

        imageBase64Stringsep = base64String;

        // alert(imageBase64Stringsep);
        console.log(base64String);
      }
      reader.readAsDataURL(file);
    }


    $(document).on('change', '#editemployeeprofile', function (e) {
      const input = document.getElementById('editemployeeprofile');
      const file = input.files[0];

      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onloadend = function () {
        const preview = document.getElementById('editpreview');
        preview.src = reader.result;
      }
      editimage();
    })

    //

    //#region Image Proccessing
    function editimage() {
      const input = document.getElementById('editemployeeprofile');
      const file = input.files[0];

      var reader = new FileReader();
      console.log("next");

      reader.onload = function () {
        base64String = reader.result.replace("data:", "")
          .replace(/^.+,/, "");

        imageBase64Stringsep = base64String;

        // alert(imageBase64Stringsep);
        console.log(base64String);
      }
      reader.readAsDataURL(file);
    }

  
  });

  

</script>