<script>
  $(document).ready(function(){
    console.log('Initialize');
    LoadTable();
    LoadList();
    LoadPosition();

    $(document).on("click", "#saveBtn", function () {
      console.log("Save button clicked");
      let firstname = $("#savefname").val();
      let middlename = $("#savemname").val();
      let lastname = $("#savelname").val();
      let birthday = $("#savebday").val();
      let gender = $("#savegender").val();
      let phone = $("#savephone").val();
      let email = $("#saveemail").val();
      let hiredate = $("#savehiredate").val();
      let jobstatus = $("#savejob").val();
      let ercontactname = $("#saveECname").val();
      let ercontactphone = $("#saveECphone").val();
      let department = $("#employeedepartment").val();
      let position = $("#saveposition").val();
      let address = $("#saveaddress").val();
    
      var message = "";
    
      if (firstname == "") {
        message += "First Name is required. ";
      }

      if (middlename == "") {
        message += "First Name is required. ";
      }
    
      if (lastname == "") {
        message += "Last Name is required. ";
      }
    
      if (birthday == "") {
        message += "Birthday is required. ";
      }
    
      if (gender == "") {
        message += "Gender is required. ";
      }
    
      if (phone == "") {
        message += "Phone is required. ";
      }
    
      if (email == "") {
        message += "Email is required. ";
      }
    
      if (hiredate == "") {
        message += "Hire Date is required. ";
      }
    
      if (jobstatus == "") {
        message += "Job Status is required. ";
      }
    
      if (ercontactname == "") {
        message += "Emergency Contact Name is required. ";
      }
    
      if (ercontactphone == "") {
        message += "Emergency Contact Phone is required. ";
      }
    
      if (department == "") {
        message += "Department is required. ";
      }
    
      if (position == "") {
        message += "Position is required. ";
      }
    
      if (address == "") {
        message += "Address is required. ";
      }
    
      if (message != "") {
        // Display an error message indicating which fields are missing
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "POST",
          url: "/employee/save",
          data: {
            newEmployeeId: newEmployeeId,
            firstname: firstname,
            middlename: middlename,
            lastname: lastname,
            birthday: birthday,
            gender: gender,
            phone: phone,
            email: email,
            hiredate: hiredate,
            jobstatus: jobstatus,
            ercontactname: ercontactname,
            ercontactphone: ercontactphone,
            department: department,
            position: position,
            address: address,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal({
                title: "Saved Successfully",
                text: "You clicked the button!",
                icon: "success",
                button: "OK!",
              })
              .then(results => {
                window.location.reload();
              });
              LoadTable();
            } else if (result.msg == "exist") {
              swal({
                title: "Exist",
                text: "Data already exists!",
                icon: "warning",
                button: "OK!",
              });
            } else {
              swal("Data already exists!", "You clicked the button!", "warning");
            }
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
          },
        });
      }
    });

    function LoadList () {
      $.ajax({
        type: "GET",
        url: "/department/load",
        success: function (result) {
            console.log(result.data);
            var data = result.data;
    
            $.each(data, function (key, item) {
                var options = new Option(item.departmentname, item.departmentname);
                $(options).html(item.departmentname);
                $('#employeedepartment').append(options);
                console.log(item.departmentname);
            });
        },
        error: function (result) {
            alert('error: ' + result.data);
        }
    });
    
      
    }

    function LoadPosition () {
      $.ajax({
        type: "GET",
        url: "/position/load",
        success: function (result) {
            console.log(result.data);
            var data = result.data;
    
            $.each(data, function (key, item) {
                var options = new Option(item.positionname, item.positionname);
                $(options).html(item.positionname);
                $('#saveposition').append(options);
                console.log(item.positionname);
            });
        },
        error: function (result) {
            alert('error: ' + result.data);
        }
    });
    
      
    }
    

    function LoadTable() {
        $("#dataTableemployees").DataTable({
          destroy: true,
          processing: true,
          serverSide: true,
          paging: false,
          searching: false,
          info: false,
          scrollY: 400,
          scrollCollapse: true,
          serverMethod: "GET",
          ajax: {
            url: "/employee/load",
            dataSrc: (json) => {
              var finalData = [];
              var data = json.data;
  
              console.log(data);
              $.each(data, (key, item) => {
                var action = "";
                var status = item.status;

                action = `
                <button id="editBtn" class="btn text-danger" name="editBtn" data-bs-toggle="modal" data-bs-target="#viewmodal"><i class="fas fa-fw fa-eye"></i></button>
               `;
  
                finalData.push({
                    newEmployeeId: item.newEmployeeId,
                    firstname: item.firstname,
                    phone: item.phone,
                    email: item.email,
                    department: item.department,
                    position: item.position,
                    action: action,
                });
              });
  
              return finalData;
            },
          },
          columnDefs: [
            {
              targets: 1,
              className: "td-indent",
            },
          ],
          columns: [
            { data: "newEmployeeId" },
            { data: "firstname" },
            { data: "phone"},
            { data: "email" },
            { data: "department" },
            { data: "position" },
            { data: "action" },
          ],
          initComplete: function () {
            console.log('Done');
          },
        });
      }
  
});

    //img preview
    function updatePreview(input, target) {
        let file = input.files[0];
        let reader = new FileReader();
        
        reader.readAsDataURL(file);
        reader.onload = function () {
            let img = document.getElementById(target);
            // can also use "this.result"
            img.src = reader.result;
        }
    }
    //profile img preview
    function EditPreview(input, target) {
        let file = input.files[0];
        let reader = new FileReader();
        
        reader.readAsDataURL(file);
        reader.onload = function () {
            let img = document.getElementById(target);
            // can also use "this.result"
            img.src = reader.result;
        }
    }
    //search bar
    
function searchTable() {
    var input, filter, found, table, tr, td, i, j;
    input = document.getElementById("myInput");
    filter = input.value.toUpperCase();
    table = document.getElementById("dataTableemployees");
    tr = table.getElementsByTagName("tr");
    for (i = 0; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        for (j = 0; j < td.length; j++) {
            if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
                found = true;
            }
        }
        if (found) {
            tr[i].style.display = "";
            found = false;
        } else {
            tr[i].style.display = "none";
        }
    }
}
</script>