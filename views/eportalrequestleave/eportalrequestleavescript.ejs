<script>
  let base64String = "";
  let leavesettingsid = "";
  let employeeid = "<%= employeeid %>";
  let totalLeaveGlobal = 0;
  let unusedLeaveGlobal = "";
  let totalusedGlobal = 0;
  $(document).ready(function () {
    console.log("Initialize");
    LoadTable();
    LoadList();
    LoadListHeader();
    LoadLeaveTypes();

    function LoadTable() {
      $("#dataTableapplyleave").DataTable({
        destroy: true,
        processing: true,
        serverSide: true,
        paging: false,
        searching: false,
        info: false,
        scrollY: 400,
        scrollCollapse: true,
        type: "GET",
        ajax: {
          url: "/eportalrequestleave/loadpending",
          dataSrc: (json) => {
            var finalData = [];
            var data = json.data;

            console.log(data);
            $.each(data, (key, item) => {
              var action = "";
              var status = item.status;

              action = `
                      <button id="editBtn" class="btn text-primary" name="editBtn" data-bs-toggle="modal" data-bs-target="#allleavemodal"><i class="fas fa-fw fa-pen"></i></button>
                    `;

              finalData.push({
                leaveid: item.leaveid,
                leavestartdate: item.leavestartdate,
                leaveenddate: item.leaveenddate,
                leavetype: item.leavetype,
                reason: item.reason,
                applieddate: item.applieddate,
                action: action,
              });
            });

            console.log(finalData);

            return finalData;
          },
        },
        columnDefs: [
          {
            targets: 1,
            className: "td-indent",
          },
        ],
        columns: [
          { data: "leaveid" },
          { data: "leavestartdate" },
          { data: "leaveenddate" },
          { data: "leavetype" },
          { data: "reason" },
          { data: "applieddate" },
          { data: "action" },
        ],
        initComplete: function () {
          console.log("Done");
        },
      });
    }

    $(document).on("click", "#nav-approved", function () {
      console.log('Hit');
      $("#dataTableleaveApproved").find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/eportalrequestleave/loadapproved",
        success: function (json) {
          var finalData = [];
          var data = json.data;
          console.log(finalData);

          material_list_tbl = document.getElementById("dataTableleaveApproved");

          $.each(data, function (key, item) {
            var row = material_list_tbl.insertRow(1);
            var LEAVE_ID = row.insertCell(0);
            var LEAVE_STARTDADTE = row.insertCell(1);
            var LEAVE_ENDATE = row.insertCell(2);
            var LEAVE_TYPE = row.insertCell(3);
            var REASON = row.insertCell(4);
            var APPLIEDDATE = row.insertCell(5);

            LEAVE_ID.innerHTML = item.leaveid;
            LEAVE_STARTDADTE.innerHTML = item.leavestartdate;
            LEAVE_ENDATE.innerHTML = item.leaveenddate;
            LEAVE_TYPE.innerHTML = item.leavetype;
            REASON.innerHTML = item.reason;
            APPLIEDDATE.innerHTML = item.applieddate;

            $.each(
              [
                LEAVE_ID,
                LEAVE_STARTDADTE,
                LEAVE_ENDATE,
                LEAVE_TYPE,
                REASON,
                APPLIEDDATE,
              ],
              function (_, cell) {
                cell.style.textAlign = "center";
                cell.style.verticalAlign = "middle";
              }
            );
          });
        },
        error: function (xhr, status, error) {},
      });
    });

    function LoadListHeader(leavesettingsid) {
      $.ajax({
        type: "POST",
        url: "eportalrequestleave/loadheader",
        data: {
          leavesettingsid: leavesettingsid,
          employeeid: employeeid,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;
            $.each(existingData, (key, item) => {
              $("#leaveperyearheader").text(item.totalleave);
              $("#Unusedleaveheader").text(item.unused);
              $("#UsedleaveHeader").text(item.used);
              totalLeaveGlobal = parseFloat(item.totalleave);
              unusedLeaveGlobal = parseFloat(item.unused);
              totalusedGlobal = parseFloat(item.used);
            });
          } else {
            swal("Error fetching employee data", msg, "error");
          }
        },
        error: function (err) {
          swal("An Error Occurred", msg, "error");
        },
      });
    }

    function LoadLeaveTypes() {
      $.ajax({
        type: "GET",
        url: "/eportalrequestleave/loadleavetype",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.leavetype, item.leavesettingsid);
            $(options).html(item.leavetype);
            $("#leavetypeheader").append(options);
          });
        },
        error: function (result) {
          alert("Error: " + result.data);
        },
      });
    }

    $("#leavetypeheader").change(function () {
      var selectedLeavesettingsid = $(this).val();
      LoadListHeader(selectedLeavesettingsid);
    });

    function LoadList() {
      $.ajax({
        type: "GET",
        url: "/eportalrequestleave/loadleavetype",
        success: function (result) {
          var data = result.data;

          //$("#leavetype").empty();

          $.each(data, function (key, item) {
            var options = new Option(
              item.leavesettingsid,
              item.leavesettingsid
            );
            $(options).html(item.leavetype);
            $("#leavetype").append(options);
          });
          if (data.length > 0) {
            var initialUnusedLeave = data[0].unusedleave;
            $("#unusedleave").val(initialUnusedLeave);
          }
        },
        error: function (result) {
          alert("Error: " + result.data);
        },
      });
      $("#leavetype").change(function () {
        var selectedLeaveType = $(this).val();
        updateUnusedLeave(selectedLeaveType);
      });

      $("#loadListBtn").click(function () {
        LoadList();
      });
    }

    function updateUnusedLeave(selectedLeaveType) {
      $.ajax({
        type: "POST",
        url: "/eportalrequestleave/getunusedleave",
        data: { leavetype: selectedLeaveType },
        success: function (result) {
          var data = result.data;
          if (Array.isArray(data) && data.length > 0) {
            unusedLeaveGlobal = data[0].unusedleave;
            $("#unusedleave").val(unusedLeaveGlobal);

            if (unusedLeaveGlobal !== "") {
              console.log("Unused leave value:", unusedLeaveGlobal);
            } else {
              console.log("Unused leave value is not set.");
            }
          } else {
            console.error("Error: No data or incorrect data format.");
            alert("Error fetching total unused leave. Please try again.");
          }
        },
        error: function (xhr, status, error) {
          console.error("Error fetching total unused leave:", error);
          alert("Error fetching total unused leave. Please try again.");
        },
      });
    }

    console.log("unused", unusedLeaveGlobal);

    $("#loadListBtn").click(function () {
      LoadList();
    });

    $(document).on("click", "#pendingleavesavebtn", function () {
      let startdate = $("#startldate").val();
      let enddate = $("#endldate").val();
      let leavetype = $("#leavetype").val();
      let reason = $("#leavereason").val();
      let paidDays = $("#paiddays").val();
      let image = base64String;

      var message = "";

      if (startdate == "") {
        message += "Start Date is required ";
      }

      if (enddate == "") {
        message += "End Date is required ";
      }

      if (leavetype == "") {
        message += "Leave Type is required ";
      }

      if (reason == "") {
        message += "Reason is required ";
      }

      if (paidDays == "") {
        message += "Paid Days is required ";
      } else if (paidDays <= 0) {
        message += "Paid Days must be greater than 0 ";
      }

      if (image == "") {
        message += "Image is required ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "POST",
          url: "/eportalrequestleave/submit",
          data: {
            employeeid: employeeid,
            startdate: startdate,
            enddate: enddate,
            leavetype: leavetype,
            reason: reason,
            durationDays: paidDays,
            image: image,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal(
                "Update Successfully",
                "You clicked the button!",
                "success"
              ).then((result) => {
                window.location.reload();
              });
              LoadTable();
            } else if (result.msg == "exist") {
              swal("Exist", "Data already exists!", "warning");
            }
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
          },
        });
      }
    });

    function calculateUnpaidDays(durationDays) {
      let unusedDays = parseFloat(unusedLeaveGlobal);
      let unpaidDays = durationDays - unusedDays;
      return unpaidDays < 0 ? 0 : unpaidDays;
    }

    $("#startldate, #endldate").change(function () {
      let startLDate = new Date($("#startldate").val());
      let endLDate = new Date($("#endldate").val());
      let durationDays = Math.floor(
        (endLDate - startLDate) / (1000 * 60 * 60 * 24)
      );

      let unpaidDays = calculateUnpaidDays(durationDays);
      let paidDays =
        durationDays < unusedLeaveGlobal ? durationDays : unusedLeaveGlobal;

      $("#durationdays").val(durationDays);
      $("#paiddays").val(paidDays);
      $("#unpaiddays").val(unpaidDays);
    });

    $("#dataTableapplyleave tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      console.log(dataRow);
      leaveid = dataRow[0];
    });
    $(document).on("click", "#editBtn", function () {
      $.ajax({
        type: "POST",
        url: "/allleave/getleavedashboard",
        data: {
          leaveid: leaveid,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            $.each(existingData, (key, item) => {
              $("#id").val(item.leaveid);
              $("#pendingleavename").val(item.employeeid);
              $("#pendingleaveemail").val(item.email);
              $("#pendingleavegender").val(item.gender);
              $("#pendingleavephone").val(item.phone);
              $("#pendingleavetype").val(item.leavetype);
              $("#pendingleaveapplydate").val(item.applieddate);
              $("#pendingleavestart").val(item.leavestartdate);
              $("#pendingleaveend").val(item.leaveenddate);
              $("#pendingleavereason").val(item.reason);
              $("#pendingleaveaction").val(item.status);
            });
          } else {
            swal("Error fetching employee data", "success");
          }
        },
        error: function (err) {
          swal("An error occurred while fetching employee data", err, "error");
        },
      });
    });
    $(document).on("click", "#pendingleavesavebtn", function () {
      console.log("Save button clicked");
      let id = leaveid;
      let status = $("#pendingleaveaction").val();

      var message = "";

      if (status === "") {
        message += "status is required. ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "POST",
          url: "/allleave/update",
          data: {
            leaveid: id,
            status: status,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal(
                "Save Successfully",
                "You clicked the button!",
                "success"
              ).then((results) => {
                window.location.reload();
              });
              LoadTable();
            }
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
          },
        });
      }
    });
  });

  $(document).on("change", "#uploadimage", function (e) {
    const input = document.getElementById("uploadimage");
    const file = input.files[0];

    const reader = new FileReader();
    reader.readAsDataURL(file);
    reader.onloadend = function () {
      const preview = document.getElementById("preview");
      preview.src = reader.result;
    };
    imageUploaded();
  });

  function imageUploaded() {
    const input = document.getElementById("uploadimage");
    const file = input.files[0];

    var reader = new FileReader();

    reader.onload = function () {
      base64String = reader.result.replace("data:", "").replace(/^.+,/, "");

      imageBase64Stringsep = base64String;
    };
    reader.readAsDataURL(file);
  }

  $(document).on("change", "#editcoafile", function (e) {
    const input = document.getElementById("editcoafile");
    const file = input.files[0];

    const reader = new FileReader();
    reader.readAsDataURL(file);
    reader.onloadend = function () {
      const preview = document.getElementById("editpreviewfile");
      preview.src = reader.result;
    };
    EditImage();
  });

  function EditImage() {
    const input = document.getElementById("editcoafile");
    const file = input.files[0];

    var reader = new FileReader();

    reader.onload = function () {
      base64String = reader.result.replace("data:", "").replace(/^.+,/, "");

      imageBase64Stringsep = base64String;
    };
    reader.readAsDataURL(file);
  }
</script>
