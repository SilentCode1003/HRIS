<script>
  $(document).ready(function () {

    //#region declaration
    let leaveid = '';
    let cashadvanceid = "";
    let anouncementdiv = "";
    let bdaydiv = "";
    LoadTable();
    loadtotalCard();
    LoadBdayFolks();
    loadleaveBadge();
    loadCashBadge();
    loadregularCard();
    loadprobitionaryCard();
    loadresignedCard();
    loadtotaladminCard();
    loadtotalITCard();
    loadtotalcablingCard();
    loadtotalcandidateCard();
    loadtotalbagapuroCard();
    searchEmployeeTable();
    searchRegularTable();
    searchprobaTable();
    searchresignedTable();
    searchadminTable();
    searchitTable();
    searchcablingTable();
    searchcandidateTable();
    searchbagapuroTable();
    GenerateAnouncement();

    //#endregion


    //#region search key up

    $(document).on('keyup', '#myInputtotal', function () {
      searchEmployeeTable();
    });

    $(document).on('keyup', '#myInputRegular', function () {
      searchRegularTable();
    });

    $(document).on('keyup', '#myInputproba', function () {
      searchprobaTable();
    });

    $(document).on('keyup', '#myInputresigned', function () {
      searchresignedTable();
    });

    $(document).on('keyup', '#myInputtotaladmin', function () {
      searchadminTable();
    });

    $(document).on('keyup', '#myInputtotalit', function () {
      searchitTable();
    });

    $(document).on('keyup', '#myInputtotalcabling', function () {
      searchcablingTable();
    });

    $(document).on('keyup', '#myInputtotalcandidate', function () {
      searchcandidateTable();
    });

    $(document).on('keyup', '#myInputtotalbagapuro', function () {
      searchbagapuroTable();
    });


    //#endregion    


    //#region Load Modal Table
    //#Employee Modal
    $(document).on("click", "#totalEMP", function () {

      $.ajax({
        type: "GET",
        url: "/employee/totalactive",
        success: function (json) {
          var data = json.data;

          populatedatatable(data)

        },
        error: function (xhr, status, error) {
        },
      });
    });

    function populatedatatable(data) {
      const tableBody = $('#dataTableemployees tbody');
      tableBody.empty();

      if (data.length === 0) {
        const tr = $('<tr>').append($('<td>', {
          colspan: 7,
          class: 'text-center',
          text: 'No Data Matched'
        }));
        tableBody.append(tr);
      } else {
        data.forEach(item => {
          const tr = $('<tr>').append(
            $('<td>', {
              html: item.profilePicturePath
                ? `<img src="data:image/jpg;base64,${item.profilePicturePath}" alt="Product Image" class="" style="max-width: 90px; max-height: 90px;"/>`
                : 'No Image',
              'data-label': 'Product Image',
            }),
            $('<td>', { text: item.newEmployeeId, 'data-label': 'ID', class: 'custom-mobile-align' }),
            $('<td>', { text: item.firstname, 'data-label': 'Category', class: 'custom-mobile-align' }),
            $('<td>', { text: item.phone, 'data-label': 'Created By', class: 'custom-mobile-align' }),
            $('<td>', { text: item.email, 'data-label': 'Created Date', class: 'custom-mobile-align' }),
            $('<td>', { text: item.jobstatus, class: 'custom-mobile-align' }),
            $('<td>', { text: item.department, class: 'custom-mobile-align' }),
            $('<td>', { text: item.position, class: 'custom-mobile-align' }),

          );

          tableBody.append(tr);
        });
      }
    }

    //#Regular Employee Modal
    $(document).on("click", "#totalregularEMP", function () {
      $(`#regularemloyeetbl`).find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/employee/totalregular",
        success: function (json) {

          var finalData = [];
          var data = json.data;
          populateregularemloyeetbl(data);

        },
        error: function (xhr, status, error) {
        },
      });
    });

    function populateregularemloyeetbl(data) {
      const tableBody = $('#regularemloyeetbl tbody');
      tableBody.empty();

      if (data.length === 0) {
        const tr = $('<tr>').append($('<td>', {
          colspan: 7,
          class: 'text-center',
          text: 'No Data Matched'
        }));
        tableBody.append(tr);
      } else {
        data.forEach(item => {
          const tr = $('<tr>').append(
            $('<td>', {
              html: item.profilePicturePath
                ? `<img src="data:image/jpg;base64,${item.profilePicturePath}" alt="Product Image" class="" style="max-width: 90px; max-height: 90px;"/>`
                : 'No Image',
              'data-label': 'Product Image',
            }),
            $('<td>', { text: item.newEmployeeId, 'data-label': 'ID', class: 'custom-mobile-align' }),
            $('<td>', { text: item.firstname, 'data-label': 'Category', class: 'custom-mobile-align' }),
            $('<td>', { text: item.contact, 'data-label': 'Created By', class: 'custom-mobile-align' }),
            $('<td>', { text: item.email, 'data-label': 'Created Date', class: 'custom-mobile-align' }),
            $('<td>', { text: item.me_department, class: 'custom-mobile-align' }),
            $('<td>', { text: item.me_position, class: 'custom-mobile-align' }),

          );

          tableBody.append(tr);
        });
      }
    }

    //#Probationary Employee Modal
    $(document).on("click", "#totalprobiEMP", function () {
      $(`#probiemloyeetbl`).find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/employee/totalprobi",
        success: function (json) {

          var finalData = [];
          var data = json.data;
          populateprobiemloyeetbl(data);

        },
        error: function (xhr, status, error) {
        },
      });
    });

    function populateprobiemloyeetbl(data) {
      const tableBody = $('#probiemloyeetbl tbody');
      tableBody.empty();

      if (data.length === 0) {
        const tr = $('<tr>').append($('<td>', {
          colspan: 7,
          class: 'text-center',
          text: 'No Data Matched'
        }));
        tableBody.append(tr);
      } else {
        data.forEach(item => {
          const tr = $('<tr>').append(
            $('<td>', {
              html: item.profilePicturePath
                ? `<img src="data:image/jpg;base64,${item.profilePicturePath}" alt="Product Image" class="" style="max-width: 90px; max-height: 90px;"/>`
                : 'No Image',
              'data-label': 'Product Image',
            }),
            $('<td>', { text: item.newEmployeeId, 'data-label': 'ID', class: 'custom-mobile-align' }),
            $('<td>', { text: item.firstname, 'data-label': 'Category', class: 'custom-mobile-align' }),
            $('<td>', { text: item.phone, 'data-label': 'Created By', class: 'custom-mobile-align' }),
            $('<td>', { text: item.email, 'data-label': 'Created Date', class: 'custom-mobile-align' }),
            $('<td>', { text: item.department, class: 'custom-mobile-align' }),
            $('<td>', { text: item.position, class: 'custom-mobile-align' }),

          );

          tableBody.append(tr);
        });
      }
    }

    //#Resigned Employee
    $(document).on("click", "#totalresignedEMP", function () {
      $(`#resignedemployeetbl`).find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/employee/totalresigned",
        success: function (json) {
          var finalData = [];
          var data = json.data;
          populateresignedemployeetbl(data);

        },
        error: function (xhr, status, error) {
        },
      });
    });

    function populateresignedemployeetbl(data) {
      const tableBody = $('#resignedemployeetbl tbody');
      tableBody.empty();

      if (data.length === 0) {
        const tr = $('<tr>').append($('<td>', {
          colspan: 9,
          class: 'text-center',
          text: 'No Data Matched'
        }));
        tableBody.append(tr);
      } else {
        data.forEach(item => {
          const tr = $('<tr>').append(
            $('<td>', {
              html: item.profilePicturePath
                ? `<img src="data:image/jpg;base64,${item.profilePicturePath}" alt="Product Image" class="" style="max-width: 90px; max-height: 90px;"/>`
                : 'No Image',
              'data-label': 'Product Image',
            }),
            $('<td>', { text: item.newEmployeeId, 'data-label': 'ID', class: 'custom-mobile-align' }),
            $('<td>', { text: item.firstname, 'data-label': 'Category', class: 'custom-mobile-align' }),
            $('<td>', { text: item.phone, 'data-label': 'Created By', class: 'custom-mobile-align' }),
            $('<td>', { text: item.department, class: 'custom-mobile-align' }),
            $('<td>', { text: item.position, class: 'custom-mobile-align' }),
            $('<td>', { text: item.reason, class: 'custom-mobile-align' }),
            $('<td>', { text: item.dateresigned, class: 'custom-mobile-align' }),
            $('<td>', { text: item.createdate, class: 'custom-mobile-align' }),

          );

          tableBody.append(tr);
        });
      }
    }

    //#Total Admin
    $(document).on("click", "#totaladminEMP", function () {
      $(`#totaladmintable`).find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/totaladmin",
        success: function (json) {

          var finalData = [];
          var data = json.data;
          populatetotaladmintable(data);

        },
        error: function (xhr, status, error) {
        },
      });
    });

    function populatetotaladmintable(data) {
      const tableBody = $('#totaladmintable tbody');
      tableBody.empty();

      if (data.length === 0) {
        const tr = $('<tr>').append($('<td>', {
          colspan: 7,
          class: 'text-center',
          text: 'No Data Matched'
        }));
        tableBody.append(tr);
      } else {
        data.forEach(item => {
          const tr = $('<tr>').append(
            $('<td>', {
              html: item.profilePicturePath
                ? `<img src="data:image/jpg;base64,${item.profilePicturePath}" alt="Product Image" class="" style="max-width: 90px; max-height: 90px;"/>`
                : 'No Image',
              'data-label': 'Product Image',
            }),
            $('<td>', { text: item.newEmployeeId, 'data-label': 'ID', class: 'custom-mobile-align' }),
            $('<td>', { text: item.firstname, 'data-label': 'Category', class: 'custom-mobile-align' }),
            $('<td>', { text: item.phone, 'data-label': 'Created By', class: 'custom-mobile-align' }),
            $('<td>', { text: item.email, class: 'custom-mobile-align' }),
            $('<td>', { text: item.position, class: 'custom-mobile-align' }),
            $('<td>', { text: item.tenure, class: 'custom-mobile-align' }),

          );

          tableBody.append(tr);
        });
      }
    }

    //#Total IT Department
    $(document).on("click", "#totalitEMP", function () {
      $(`#totalittable`).find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/totalIT",
        success: function (json) {

          var finalData = [];
          var data = json.data;
          populatetotalittable(data);

        },
        error: function (xhr, status, error) {
        },
      });
    });

    function populatetotalittable(data) {
      const tableBody = $('#totalittable tbody');
      tableBody.empty();

      if (data.length === 0) {
        const tr = $('<tr>').append($('<td>', {
          colspan: 7,
          class: 'text-center',
          text: 'No Data Matched'
        }));
        tableBody.append(tr);
      } else {
        data.forEach(item => {
          const tr = $('<tr>').append(
            $('<td>', {
              html: item.profilePicturePath
                ? `<img src="data:image/jpg;base64,${item.profilePicturePath}" alt="Product Image" class="" style="max-width: 90px; max-height: 90px;"/>`
                : 'No Image',
              'data-label': 'Product Image',
            }),
            $('<td>', { text: item.newEmployeeId, 'data-label': 'ID', class: 'custom-mobile-align' }),
            $('<td>', { text: item.firstname, 'data-label': 'Category', class: 'custom-mobile-align' }),
            $('<td>', { text: item.phone, 'data-label': 'Created By', class: 'custom-mobile-align' }),
            $('<td>', { text: item.email, class: 'custom-mobile-align' }),
            $('<td>', { text: item.position, class: 'custom-mobile-align' }),
            $('<td>', { text: item.tenure, class: 'custom-mobile-align' }),

          );

          tableBody.append(tr);
        });
      }
    }

    //#Total Cabling Department
    $(document).on("click", "#totalcablingEMP", function () {
      $(`#totalcablingtable`).find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/totalcabling",
        success: function (json) {

          var finalData = [];
          var data = json.data;
          populatetotalcablingtable(data);

        },
        error: function (xhr, status, error) {
        },
      });
    });

    function populatetotalcablingtable(data) {
      const tableBody = $('#totalcablingtable tbody');
      tableBody.empty();

      if (data.length === 0) {
        const tr = $('<tr>').append($('<td>', {
          colspan: 7,
          class: 'text-center',
          text: 'No Data Matched'
        }));
        tableBody.append(tr);
      } else {
        data.forEach(item => {
          const tr = $('<tr>').append(
            $('<td>', {
              html: item.profilePicturePath
                ? `<img src="data:image/jpg;base64,${item.profilePicturePath}" alt="Product Image" class="" style="max-width: 90px; max-height: 90px;"/>`
                : 'No Image',
              'data-label': 'Product Image',
            }),
            $('<td>', { text: item.newEmployeeId, 'data-label': 'ID', class: 'custom-mobile-align' }),
            $('<td>', { text: item.firstname, 'data-label': 'Category', class: 'custom-mobile-align' }),
            $('<td>', { text: item.phone, 'data-label': 'Created By', class: 'custom-mobile-align' }),
            $('<td>', { text: item.email, class: 'custom-mobile-align' }),
            $('<td>', { text: item.position, class: 'custom-mobile-align' }),
            $('<td>', { text: item.tenure, class: 'custom-mobile-align' }),

          );

          tableBody.append(tr);
        });
      }
    }

    //#Total Candidate for Regular
    $(document).on("click", "#totalcandidate", function () {
      $(`#totalcandidatetable`).find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/totalcandidate",
        success: function (json) {

          var finalData = [];
          var data = json.data;
          populatetotalcandidatetable(data);

        },
        error: function (xhr, status, error) {
        },
      });
    });

    function populatetotalcandidatetable(data) {
      const tableBody = $('#totalcandidatetable tbody');
      tableBody.empty();

      if (data.length === 0) {
        const tr = $('<tr>').append($('<td>', {
          colspan: 7,
          class: 'text-center',
          text: 'No Data Matched'
        }));
        tableBody.append(tr);
      } else {
        data.forEach(item => {
          const tr = $('<tr>').append(
            $('<td>', {
              html: item.profilePicturePath
                ? `<img src="data:image/jpg;base64,${item.profilePicturePath}" alt="Product Image" class="" style="max-width: 90px; max-height: 90px;"/>`
                : 'No Image',
              'data-label': 'Product Image',
            }),
            $('<td>', { text: item.newEmployeeId, 'data-label': 'ID', class: 'custom-mobile-align' }),
            $('<td>', { text: item.firstname, 'data-label': 'Category', class: 'custom-mobile-align' }),
            $('<td>', { text: item.department, class: 'custom-mobile-align' }),
            $('<td>', { text: item.hiredate, class: 'custom-mobile-align' }),
            $('<td>', { text: item.position, class: 'custom-mobile-align' }),
            $('<td>', { text: item.tenure, class: 'custom-mobile-align' }),

          );

          tableBody.append(tr);
        });
      }
    }

    //#Bagapuro Family
    $(document).on("click", "#totalbagapuro", function () {
      $(`#totalbagapurotable`).find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/totalbagapuroapi",
        success: function (json) {

          var finalData = [];
          var data = json.data;
          populatetotalbagapurotable(data);

        },
        error: function (xhr, status, error) {
        },
      });
    });

    function populatetotalbagapurotable(data) {
      const tableBody = $('#totalbagapurotable tbody');
      tableBody.empty();

      if (data.length === 0) {
        const tr = $('<tr>').append($('<td>', {
          colspan: 7,
          class: 'text-center',
          text: 'No Data Matched'
        }));
        tableBody.append(tr);
      } else {
        data.forEach(item => {
          const tr = $('<tr>').append(
            $('<td>', {
              html: item.profilePicturePath
                ? `<img src="data:image/jpg;base64,${item.profilePicturePath}" alt="Product Image" class="" style="max-width: 90px; max-height: 90px;"/>`
                : 'No Image',
              'data-label': 'Product Image',
            }),
            $('<td>', { text: item.newEmployeeId, 'data-label': 'ID', class: 'custom-mobile-align' }),
            $('<td>', { text: item.firstname, 'data-label': 'Category', class: 'custom-mobile-align' }),
            $('<td>', { text: item.department, class: 'custom-mobile-align' }),
            $('<td>', { text: item.hiredate, class: 'custom-mobile-align' }),
            $('<td>', { text: item.position, class: 'custom-mobile-align' }),
            $('<td>', { text: item.tenure, class: 'custom-mobile-align' }),

          );

          tableBody.append(tr);
        });
      }
    }


    //#endregion


    //#region Load Card 
    function loadtotalCard() {
      $.ajax({
        type: "GET",
        url: "/countactive",
        success: function (result) {
          if (result.msg === "success") {
            const totalActive = result.data.activeCount;
            $("#totalEmployeeCard .h5").text(totalActive);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadregularCard() {
      $.ajax({
        type: "GET",
        url: "/countregular",
        success: function (result) {
          if (result.msg === "success") {
            const totalRegular = result.data.regularCount;
            $("#regularEmployeeCard .h5").text(totalRegular);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadprobitionaryCard() {
      $.ajax({
        type: "GET",
        url: "/countprobitionary",
        success: function (result) {
          if (result.msg === "success") {
            const totalProbitionary = result.data.probitionaryCount;

            // Update the content of the Total Employee card using id
            $("#probationaryEmployeeCard .h5").text(totalProbitionary);
          } else {
            // Handle error cases if needed
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          // Handle AJAX error
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadresignedCard() {
      $.ajax({
        type: "GET",
        url: "/countresigned",
        success: function (result) {
          if (result.msg === "success") {
            const totalResigned = result.data.resignedCount;

            // Update the content of the Total Employee card using id
            $("#resignedEmployeeCard .h5").text(totalResigned);
          } else {
            // Handle error cases if needed
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          // Handle AJAX error
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadtotaladminCard() {
      $.ajax({
        type: "GET",
        url: "/countadmin",
        success: function (result) {
          if (result.msg === "success") {
            const totalempadmin = result.data.adminCount;

            // Update the content of the Total Employee card using id
            $("#totalADMIN .h5").text(totalempadmin);
          } else {
            // Handle error cases if needed
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          // Handle AJAX error
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadtotalITCard() {
      $.ajax({
        type: "GET",
        url: "/countit",
        success: function (result) {
          if (result.msg === "success") {
            const totalIT = result.data.ITCount;
            $("#totalIT .h5").text(totalIT);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadtotalcablingCard() {
      $.ajax({
        type: "GET",
        url: "/countcabling",
        success: function (result) {
          if (result.msg === "success") {
            const totalCabling = result.data.CablingCount;
            $("#totalCABLING .h5").text(totalCabling);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadtotalcandidateCard() {
      $.ajax({
        type: "GET",
        url: "/countcandidate",
        success: function (result) {
          if (result.msg === "success") {
            const totalCandidate = result.data.CandidateCount;
            $("#totalempcandidate .h5").text(totalCandidate);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadtotalbagapuroCard() {
      $.ajax({
        type: "GET",
        url: "/countbagapuro",
        success: function (result) {
          if (result.msg === "success") {
            const totalBagapuro = result.data.BagapuroCount;
            $("#totalempbagapuro .h5").text(totalBagapuro);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }
    //#endregion


    //#region Load Badge Notif
    function loadleaveBadge() {
      $.ajax({
        type: "GET",
        url: "/countreqleavebadge",
        success: function (result) {
          if (result.msg === "success") {
            const totalleave = result.data.leavereqCount;
            $("#loadleaveBadge").text(totalleave);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    function loadCashBadge() {
      $.ajax({
        type: "GET",
        url: "/countcashreqbadge",
        success: function (result) {
          if (result.msg === "success") {
            const totalCa = result.data.CAreqCount;
            $("#loadcaBadge").text(totalCa);
          } else {
            console.error("Error fetching data:", result.msg);
          }
        },
        error: function (err) {
          console.error("AJAX error:", err.statusText);
        },
      });
    }

    //#endregion


    //#region Announcement and Bday Folks
    // $.ajax({
    //   url: "/announcement/load",
    //   method: "GET",
    //   dataType: "json",

    //   success: function (data) {
    //     let details = data.data;
    //     let bulletinid = [];
    //     $.each(details, (key, item) => {
    //       bulletinid.push({
    //         id: item.bulletinid,
    //       });
    //     });
    //     LoadAnnouncement(bulletinid);
    //   },
    //   error: function (error) {
    //     console.error(error);
    //   },
    // });

    // function LoadAnnouncement(bulletinid) {
    //   $.each(bulletinid, (key, item) => {
    //     let id = item.id;
    //     GenerateAnouncement();
    //   });
    // }

    function GenerateAnouncement() {
      $.ajax({
        type: "GET",
        url: "/getbulletin",
        // data: {
        //   bulletinid: id,
        // },
        success: function (result) {
          if (result.msg === "success") {
            const announcementData = result.data;
            let counter = 0;

            $.each(announcementData, (key, item) => {
              counter++;
              anouncementdiv += `
              <div class="carousel-item active" data-bs-interval="2000">
                <img id="preview${counter}"  src="data:image/jpg;base64,${item.image}" class="d-block w-100" alt="..."
                style="height: 470px;">
              <div class="carousel-caption d-none d-md-block">
                <h5 id="announcetitle${counter}">${item.title}</h5>
                <p id="announcedesc${counter}">${item.description}</p>
                <p id="announcedate${counter}">${item.targetdate}</p>
              </div>
                                    </div>
                                    <button class="carousel-control-prev" type="button"
                                        data-bs-target="#carouselannouncement" data-bs-slide="prev">
                                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                        <span class="visually-hidden">Previous</span>
                                    </button>
                                    <button class="carousel-control-next" type="button"
                                        data-bs-target="#carouselannouncement" data-bs-slide="next">
                                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                        <span class="visually-hidden">Next</span>
                                    </button>`;
            });
          } else {
            console.error("Error: ", result.message);
            swal(
              "An error occurred while fetching announcement data",
              "Please try again later.",
              "error"
            );
          }

          $("#carouselannouncement").html(anouncementdiv);
        },
        error: function (err) {
          console.error("AJAX Error: ", err.responseText);
          swal(
            "An error occurred while fetching announcement data",
            "Please try again later.",
            "error"
          );
        },
      });
    }

    //<<<<<<<<<<<B DAY FOLKS>>>>>>>>>>>>>>>>>>>>>>>>

    function LoadBdayFolks() {
      $.ajax({
        type: "GET",
        url: "/getbday",
        success: function (result) {
          if (result.msg === "success") {
            const bdayData = result.data;
            let counterbday = 0;

            $.each(bdayData, (key, item) => {
              counterbday++;
              bdaydiv += `
              <div class="carousel-item active" data-bs-interval="2000">
                                        <img id="preview${counterbday}" src="data:image/jpg;base64,${item.profilePicturePath}" class="d-block w-100" alt="..."
                                            style="height: 470px;">
                                        <div class="carousel-caption d-none d-md-block">
                                            <h5 id="employeeid${counterbday}">${item.firstname}</h5>
                                            <h6 id="bdaydate${counterbday}">${item.birthday}</h6>
                                        </div>
                                    </div>
                                    <button class="carousel-control-prev" type="button"
                                        data-bs-target="#carouselannouncement" data-bs-slide="prev">
                                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                        <span class="visually-hidden">Previous</span>
                                    </button>
                                    <button class="carousel-control-next" type="button"
                                        data-bs-target="#carouselannouncement" data-bs-slide="next">
                                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                        <span class="visually-hidden">Next</span>
                                    </button>`;
            });


            $("#carouselbday").html(bdaydiv);
          } else {
            console.error("Error: ", result.message);
            swal(
              "An error occurred while fetching announcement data",
              "Please try again later.",
              "error"
            );
          }
        },
        // Add a closing bracket here
      });
    }

    //#endregion


    //#region Load All Requset Table 
    function LoadTable() {
      $("#dataTableleaverequest").DataTable({
        destroy: true,
        processing: true,
        serverSide: true,
        paging: false,
        searching: false,
        info: false,
        scrollY: 400,
        scrollCollapse: true,
        serverMethod: "GET",
        ajax: {
          url: "/load",
          dataSrc: (json) => {
            var finalData = [];
            var data = json.data;

            $.each(data, (key, item) => {
              var action = "";
              var status = item.status;

              action = `
                      <button id="editBtn" class="btn text-primary" name="editBtn" data-bs-toggle="modal" data-bs-target="#allleavemodal"><i class="fas fa-fw fa-eye"></i></button>
                     `;

              var imgElement = document.createElement("img");
              imgElement.src = "data:image/jpg;base64," + item.image;
              imgElement.alt = "Profile Image";
              imgElement.style.width = "100px";
              imgElement.style.height = "100px";


              finalData.push({
                image: imgElement.outerHTML,
                leaveid: item.leaveid,
                firstname: item.firstname,
                leavestartdate: item.leavestartdate,
                leaveenddate: item.leaveenddate,
                leavetype: item.leavetype,
                reason: item.reason,
                applieddate: item.applieddate,
                action: action,
              });
            });

            return finalData;
          },
        },
        columnDefs: [
          {
            targets: 1,
            className: "td-indent",
          },
        ],
        columns: [
          { data: "image" },
          { data: "leaveid" },
          { data: "firstname" },
          { data: "leavestartdate" },
          { data: "leaveenddate" },
          { data: "leavetype" },
          { data: "reason" },
          { data: "applieddate" },
          { data: "action" },
        ],
        createdRow: function (row, data, dataIndex) {
          $('td', row).each(function (index) {
            this.style.textAlign = "center";
            this.style.verticalAlign = "middle";
          });
        },
        initComplete: function () {
        },
      });
    }

    $("#dataTableleaverequest tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      leaveid = dataRow[1];
    });

    $(document).on("click", "#editBtn", function () {
      $.ajax({
        type: "POST",
        url: "http://localhost:3005/getleave",
        data: {
          leaveid: leaveid,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            $.each(existingData, (key, item) => {
              $("#pendingleaveid").val(item.leaveid);
              $("#pendingleavename").val(item.employeeid);
              $("#pendingleaveemail").val(item.email);
              $("#pendingleavegender").val(item.gender);
              $("#pendingleavephone").val(item.phone);
              $("#pendingleavetype").val(item.leavetype);
              $("#pendingleaveapplydate").val(item.applieddate);
              $("#pendingleavestart").val(item.leavestartdate);
              $("#pendingleaveend").val(item.leaveenddate);
              $("#pendingleavereason").val(item.reason);
              $("#pendingleaveaction").val(item.status);
              $("#pendingleaveremarks").val(item.comment);

            });
          } else {
            swal("Error fetching employee data", "success");
          }
        },
        error: function (err) {
          swal("An error occurred while fetching employee data", err, "error");
        },
      });
    });

    $(document).on("click", "#pendingleavesavebtn", function () {
      let id = leaveid
      let status = $("#pendingleaveaction").val();
      let comment = $("#pendingleaveremarks").val();

      var message = "";


      if (status === "") {
        message += "status is required. ";
      }

      if (status === "Pending") {
        message += "status is required. ";
      }

      if (status === "Cancel") {
        message += "Youre not Allowed to Cancel The Employee Request";
      }

      if (comment === "") {
        message += "comment is required. ";
      }


      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        swal({
          title: "Are you sure?",
          text: `Do you want to '${status}' this request?`,
          icon: "warning",
          buttons: true,
          dangerMode: true,
        })
          .then((willApprove) => {
            if (willApprove) {
              $.ajax({
                type: "POST", 
                url: "/allleave/update",
                data: {
                  leaveid: id,
                  status: status,
                  comment: comment,
                },
                success: function (result) {
                  if (result.msg == "success") {
                    swal("Save Successfully", "You clicked the button!", "success",)
                      .then(results => {
                        window.location.reload();
                      });
                    LoadTable();
                  }
                },
                error: function (err) {
                  swal("Error", "An error occurred while saving data.", "error");
                },
                error: function (err) {
                  swal("Error", "An error occurred while saving data.", "error");
                },
              });
            } else {
              swal("Action Canceled", "", "info");
            }
          });
      }
    });

    //cashadvance section-->
    $(document).on("click", "#nav-ca-tab", function () {
      $("#dataTablecashrequest").find("tr:gt(0)").remove();

      $.ajax({
        type: "GET",
        url: "/loadCA",
        success: function (json) {

          var finalData = [];
          var data = json.data;

          material_list_tbl = document.getElementById("dataTablecashrequest");

          $.each(data, function (key, item) {
            var row = material_list_tbl.insertRow(1);
            var IMAGE = row.insertCell(0);
            var CASHADVANCE_ID = row.insertCell(1);
            var NAME = row.insertCell(2);
            var REQUEST_DATE = row.insertCell(3);
            var AMOUNT = row.insertCell(4);
            var PURPOSE = row.insertCell(5);
            var STATUS = row.insertCell(6);
            var ACTION = row.insertCell(7);

            var action = document.createElement("button");
            action.id = "editCABtn"; 
            action.className = "btn text-primary view-btn"; // Use a class
            action.setAttribute("data-bs-toggle", "modal");
            action.setAttribute("data-bs-target", "#pendingcamodal");
            action.innerHTML = '<i class="fas fa-fw fa-eye"></i>';
            action.onclick = function () {
              var dataRow = [];
              $(this).closest("tr").find("td").each(function () {
                dataRow.push($(this).text());
              });
              cashadvanceid = dataRow[1];
            };

            var imgElement = document.createElement("img");
            imgElement.src = "data:image/jpg;base64," + item.image;
            imgElement.alt = "Profile Image";
            imgElement.style.width = "100px";
            imgElement.style.height = "100px";

            IMAGE.appendChild(imgElement);
            CASHADVANCE_ID.innerHTML = item.employeeid;
            NAME.innerHTML = item.firstname;
            REQUEST_DATE.innerHTML = item.requestdate;
            AMOUNT.innerHTML = item.amount;
            PURPOSE.innerHTML = item.purpose;
            STATUS.innerHTML = item.status;
            ACTION.appendChild(action);

            $.each([CASHADVANCE_ID, NAME, REQUEST_DATE, AMOUNT, PURPOSE, STATUS, ACTION], function (_, cell) {
              cell.style.textAlign = "center";
              cell.style.verticalAlign = "middle";
            });
          });
        },
        error: function (xhr, status, error) {
        },
      });
    });

    $(document).on("click", "#editCABtn", function () {
      $.ajax({
        type: "POST",
        url: "/requestcashadvance/getreqca",
        data: {
          cashadvanceid: cashadvanceid,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            $.each(existingData, (key, item) => {
              $("#id").val(item.cashadvanceid);
              $("#pendingcaname").val(item.employeeid);
              $("#pendingcaemail").val(item.email);
              $("#pendingcagender").val(item.gender);
              $("#pendingcaphone").val(item.phone);
              $("#pendingreqdate").val(item.requestdate);
              $("#pendingamount").val(item.amount);
              $("#pendingpurpose").val(item.purpose);
              $("#pendingcastatus").val(item.status);
              $("#pendingcaapprovaldate").val(item.approvaldate);
            });
          } else {
            swal("Error fetching employee data", "success");
          }
        },
        error: function (err) {
          swal("An error occurred while fetching employee data", err, "error");
        },
      });
    });
    $(document).on("click", "#pendingcasavebtn", function () {

      let id = cashadvanceid;
      let status = $("#pendingcastatus").val();
      let comment = $("#pendingcaremarks").val();

      let message = "";

      if (status === "") {
        message += "Status is required. ";
      }

      if (comment === "") {
        message += "Comment is required. ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        // Ask for confirmation before proceeding
        swal({
          title: "Are you sure?",
          text: `Do you want to '${status}' this request?`,
          icon: "warning",
          buttons: true,
          dangerMode: true,
        })
          .then((willApprove) => {
            if (willApprove) {
              $.ajax({
                type: "POST",
                url: "/requestcashadvance/update",
                data: {
                  cashadvanceid: id,
                  status: status,
                  comment: comment,
                },
                success: function (result) {
                  if (result.msg === "success") {
                    swal({
                      title: "Save Successfully",
                      text: "You clicked the button!",
                      icon: "success",
                    }).then(() => {
                      window.location.reload();
                    });
                    LoadTable();
                  } else {
                    swal("Error", "An error occurred while saving data.", "error");
                  }
                },
                error: function (xhr, status, error) {
                  swal({
                    title: "Error",
                    text: "An error occurred while saving data.",
                    icon: "error",
                  });
                  console.error("AJAX error:", error);
                },
              });
            } else {
              // User clicked "Cancel"
              swal("Action Canceled", "", "info");
            }
          });
      }
    });

    //#endregion


    //#region Graph Functions
    $(document).on("change", "#announcementimage", function (e) {
      const input = document.getElementById("announcementimage");
      const file = input.files[0];


      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onloadend = function () {
        const preview = document.getElementById("preview");
        preview.src = reader.result;
      };
      imageUploaded();
    });

    document.addEventListener("DOMContentLoaded", function () {
      // Define attendance data
      const attendanceData = {
        present: 80,
        absent: 15,
        late: 5,
      };

      // Get the canvas element for attendance chart
      const attendanceCanvas = document.getElementById("attendanceChart");
      const attendanceCtx = attendanceCanvas.getContext("2d");

      // Set up attendance chart
      const attendanceDataConfig = {
        labels: ["Present", "Absent", "Late"],
        datasets: [
          {
            data: [
              attendanceData.present,
              attendanceData.absent,
              attendanceData.late,
            ],
            backgroundColor: ["#36A2EB", "#F70101", "#FFAA33"],
          },
        ],
      };

      const attendanceOptions = {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          title: {
            display: true,
            text: "Attendance Chart",
            font: {
              size: 16,
            },
          },
        },
        tooltips: {
          callbacks: {
            label: function (tooltipItem, data) {
              const dataset = data.datasets[tooltipItem.datasetIndex];
              const total = dataset.data.reduce(
                (previousValue, currentValue) => previousValue + currentValue
              );
              const currentValue = dataset.data[tooltipItem.index];
              const percentage =
                ((currentValue / total) * 100).toFixed(2) + "%";
              return data.labels[tooltipItem.index] + ": " + percentage;
            },
          },
        },
      };

      // Create attendance chart
      const attendanceChart = new Chart(attendanceCtx, {
        type: "doughnut",
        data: attendanceDataConfig,
        options: attendanceOptions,
      });

      // Define employee data
      const employeeData = {
        Active: 70,
        Resigned: 5,
        Terminate: 5,
        EndofContract: 20,
      };

      // Get the canvas element for employee chart
      const employeeCanvas = document.getElementById("employeeChart");
      const employeeCtx = employeeCanvas.getContext("2d");

      // Set up employee chart
      const employeeDataConfig = {
        labels: ["Active", "Resigned", "Terminate", "End of Contract"],
        datasets: [
          {
            data: [
              employeeData.Active,
              employeeData.Resigned,
              employeeData.Terminate,
              employeeData.EndofContract,
            ],
            backgroundColor: ["#32de84", "#36A2EB", "#F70101", "#FFAA33"],
          },
        ],
      };

      const employeeOptions = {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          title: {
            display: true,
            text: "Employee",
            font: {
              size: 20,
            },
          },
        },
      };

      // Create employee chart
      const employeeChart = new Chart(employeeCtx, {
        type: "pie",
        data: employeeDataConfig,
        options: employeeOptions,
      });
    });

    //employee graph

    // Sample data (replace this with your actual data)
    var jobStatusData = {
      labels: ["Regular", "Probationary", "Project Based"],
      datasets: [
        {
          label: "Job Status",
          data: [50, 30, 20], // Replace with actual counts
          backgroundColor: [
            "rgba(75, 192, 192, 0.2)",
            "rgba(255, 99, 132, 0.2)",
            "rgba(255, 205, 86, 0.2)",
          ],
          borderColor: [
            "rgba(75, 192, 192, 1)",
            "rgba(255, 99, 132, 1)",
            "rgba(255, 205, 86, 1)",
          ],
          borderWidth: 1,
        },
      ],
    };

    var departmentData = {
      labels: ["Admin", "IT", "Cabling"],
      datasets: [
        {
          label: "Employee Count",
          data: [100, 75, 50], // Replace with actual counts
          backgroundColor: [
            "rgba(75, 192, 192, 0.2)",
            "rgba(255, 99, 132, 0.2)",
            "rgba(255, 205, 86, 0.2)",
          ],
          borderColor: [
            "rgba(75, 192, 192, 1)",
            "rgba(255, 99, 132, 1)",
            "rgba(255, 205, 86, 1)",
          ],
          borderWidth: 1,
        },
      ],
    };

    // Get the context of the canvases
    var jobStatusCtx = document
      .getElementById("jobstatusChart")
      .getContext("2d");
    var departmentCtx = document
      .getElementById("departmentChart")
      .getContext("2d");

    // Create bar charts
    var jobStatusChart = new Chart(jobStatusCtx, {
      type: "bar",
      data: jobStatusData,
      options: {
        scales: {
          y: {
            beginAtZero: true,
          },
        },
      },
    });

    var departmentChart = new Chart(departmentCtx, {
      type: "bar",
      data: departmentData,
      options: {
        scales: {
          y: {
            beginAtZero: true,
          },
        },
      },
    });

    //#endregion


    //#region Search Functions
    function searchEmployeeTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInputtotal");
      filter = input.value.toUpperCase();
      table = document.getElementById("dataTableemployees");
      tr = table.getElementsByTagName("tr");

      for (i = 1; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        found = false;

        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
            break;
          }
        }

        if (found) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }

    function searchRegularTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInputRegular");
      filter = input.value.toUpperCase();
      table = document.getElementById("regularemloyeetbl");
      tr = table.getElementsByTagName("tr");

      for (i = 1; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        found = false;

        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
            break;
          }
        }

        if (found) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }

    function searchprobaTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInputproba");
      filter = input.value.toUpperCase();
      table = document.getElementById("probiemloyeetbl");
      tr = table.getElementsByTagName("tr");

      for (i = 1; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        found = false;

        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
            break;
          }
        }

        if (found) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }

    function searchresignedTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInputresigned");
      filter = input.value.toUpperCase();
      table = document.getElementById("resignedemployeetbl");
      tr = table.getElementsByTagName("tr");

      for (i = 1; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        found = false;

        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
            break;
          }
        }

        if (found) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }

    function searchadminTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInputtotaladmin");
      filter = input.value.toUpperCase();
      table = document.getElementById("totaladmintable");
      tr = table.getElementsByTagName("tr");

      for (i = 1; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        found = false;

        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
            break;
          }
        }

        if (found) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }

    function searchitTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInputtotalit");
      filter = input.value.toUpperCase();
      table = document.getElementById("totalittable");
      tr = table.getElementsByTagName("tr");

      for (i = 1; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        found = false;

        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
            break;
          }
        }

        if (found) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }

    function searchcablingTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInputtotalcabling");
      filter = input.value.toUpperCase();
      table = document.getElementById("totalcablingtable");
      tr = table.getElementsByTagName("tr");

      for (i = 1; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        found = false;

        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
            break;
          }
        }

        if (found) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }

    function searchcandidateTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInputtotalcandidate");
      filter = input.value.toUpperCase();
      table = document.getElementById("totalcandidatetable");
      tr = table.getElementsByTagName("tr");

      for (i = 1; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        found = false;

        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
            break;
          }
        }

        if (found) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }

    function searchbagapuroTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInputtotalbagapuro");
      filter = input.value.toUpperCase();
      table = document.getElementById("totalbagapurotable");
      tr = table.getElementsByTagName("tr");

      for (i = 1; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        found = false;

        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
            break;
          }
        }

        if (found) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }
    //#endregion

  });
</script>