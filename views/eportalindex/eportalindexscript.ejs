<script>
    $(document).ready(function () {
        let userLocation = '';
        let employeeid = "<%= employeeid %>";
        let departmentid = '<%= departmentid %>';
        let devicein = '';
        let deviceout = '';
        let bdaydiv = "";
        let anouncementdiv = "";
        let geofenceid = '';
        LoadTable();
        LoadBdayFolks();
        GenerateAnouncement();

        console.log('department', departmentid);

        const map = L.map('map').setView([0, 0], 15);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Â© OpenStreetMap contributors'
        }).addTo(map);

        // let geofencesettings = [];
        let geofences = [];

        $.ajax({
            type: "POST",
            url: "/geofencesettings/departmentgefence",
            data: {
                departmentid: departmentid,
            },
            success: function (result) {
                let data = result.data;
                console.log(data);
                data.forEach(item => {
                    const geofence = L.circle([item.latitude, item.longitude], {
                        color: "red",
                        fillColor: "#f03",
                        fillOpacity: 0.3,
                        radius: item.radius,
                        geofenceid: item.geofenceid,
                        departmentid: item.departmentid,
                    }).addTo(map);
                    geofences.push(geofence);
                    // geofencesettings.push({
                    //     geofenceid: item.geofenceid,
                    //     latitude: item.latitude,
                    //     longitude: item.longitude,
                    //     radius: item.rad
                    // });
                });

                validateUserLocation();
            },
            error: function (error) {
                console.error('Error loading geofences:', error);
            },
        });

        function checkGeofence(userLocation) {
            const userLatLng = L.latLng(userLocation.lat, userLocation.lng);

            for (const geofence of geofences) {
                const geofenceLatLng = geofence.getLatLng();
                const distance = userLatLng.distanceTo(geofenceLatLng);

                if (distance <= geofence.getRadius()) {
                    console.log('Geofence ID:', geofence.options.geofenceid);
                    console.log('true');
                    geofenceid = geofence.options.geofenceid;
                    return true;

                }
            }
            console.log('false');
            return false;
        }

        function updateLocationOnMap(position) {
            userLocation = {
                lat: position.coords.latitude,
                lng: position.coords.longitude
            };

            map.eachLayer((layer) => {
                if (layer instanceof L.Marker) {
                    layer.remove();
                }
            });

            const userMarker = L.marker([userLocation.lat, userLocation.lng]).addTo(map);
            userMarker.bindPopup(`My Location`).openPopup();
            const geofenceButtonClockIn = document.getElementById('clockinbtn');
            const geofenceButtonClockOut = document.getElementById('clockoutbtn');

            if (checkGeofence(userLocation)) {
                swal("You are inside the geofence!", "You clicked the clockin button!", "success");
                console.log('User is inside the geofence.');
                geofenceButtonClockIn.style.display = 'block';
                geofenceButtonClockOut.style.display = 'block';
            } else {
                swal("You are outside the geofence!", "You clicked the clockin button!", "warning");
                console.log('User is outside the geofence.');
                geofenceButtonClockIn.style.display = 'none';
                geofenceButtonClockOut.style.display = 'none';
            }
        }

        function handleError(error) {
            console.error(`Error getting user location: ${error.message}`);
        }

        function validateUserLocation() {
            if ('geolocation' in navigator) {
                navigator.geolocation.getCurrentPosition(
                    updateLocationOnMap,
                    handleError,
                    { enableHighAccuracy: true, maximumAge: 10000, timeout: 1000 }
                );
            } else {
                console.error('Geolocation is not supported on this device.');
            }
        }



        //#region buttons

        $('#clockinbtn').on('click', function () {
            swal({
                title: "Confirm Clock-in",
                text: "Are you sure you want to clock in?",
                icon: "info",
                buttons: ["Cancel", "Yes, Clock In"],
                dangerMode: false,
            }).then((proceed) => {
                if (proceed) {
                    getDeviceInformation()
                        .then((devicein) => {
                            $.ajax({
                                type: "POST",
                                url: "/eportalindex/clockin",
                                data: {
                                    employeeid: employeeid,
                                    latitude: userLocation.lat,
                                    longitude: userLocation.lng,
                                    devicein: devicein,
                                    geofenceid: geofenceid,
                                },
                                success: function (response) {

                                    if (response.msg === "exist") {
                                        swal({
                                            title: "Clock-in Warning",
                                            text: "You have already clocked in today.",
                                            icon: "warning",
                                        });
                                    } else if (response.status === "success") {
                                        swal({
                                            title: "Clock-in successful!",
                                            icon: "success",
                                        }).then(() => {
                                        });
                                    } else {
                                        swal({
                                            title: "Clock-in failed",
                                            text: response.message,
                                            icon: "error",
                                        });
                                    }
                                },
                                error: function (xhr, status, error) {

                                    swal({
                                        title: "Error",
                                        text: "Unable to clock in. Please try again.",
                                        icon: "error",
                                    });
                                }
                            });
                        })
                        .catch((error) => {
                            console.error("Error getting device information:", error);
                        });
                } else {
                    swal("Clock-in Canceled", "", "info");
                }
            });
        });

        $('#clockoutbtn').on('click', function () {
            if (!userLocation || typeof userLocation.lat === 'undefined' || typeof userLocation.lng === 'undefined') {
                console.error("Error: userLocation is not defined or incomplete.");
                return;
            }
            swal({
                title: "Confirm Clock-out",
                text: "Are you sure you want to clock out?",
                icon: "info",
                buttons: ["Cancel", "Yes, Clock Out"],
                dangerMode: false,
            }).then((proceed) => {
                if (proceed) {
                    $.ajax({
                        type: "POST",
                        url: "/eportalindex/clockout",
                        data: {
                            employeeid: employeeid,
                            latitude: userLocation.lat,
                            longitude: userLocation.lng,
                            employeeid: employeeid,
                            deviceout: deviceout,
                            geofenceid: geofenceid,
                        },

                        success: function (response) {

                            if (response.msg === "exist") {
                                swal({
                                    title: "Clock-in Warning",
                                    text: "You have already clocked in today.",
                                    icon: "warning",
                                });
                            } else if (response.status === "success") {
                                swal({
                                    title: "Clock-out successful!",
                                    icon: "success",
                                }).then(() => {
                                });
                            } else {
                                swal({
                                    title: "Clock-in failed",
                                    text: response.message,
                                    icon: "error",
                                });
                            }
                        },
                        error: function (xhr, status, error) {


                            swal({
                                title: "Error",
                                text: "Unable to clock out. Please try again.",
                                icon: "error",
                            });
                        }
                    });
                } else {
                    swal("Clock-out Canceled", "", "info");
                }
            });
        });

        //#endregion



        //#region tables
        function LoadTable() {
            $("#attendanceTable").DataTable({
                destroy: true,
                processing: true,
                serverSide: true,
                paging: false,
                searching: false,
                info: false,
                scrollY: 400,
                scrollCollapse: true,
                serverMethod: "POST",
                ajax: {
                    url: "/eportalindex/emplogs",
                    data: {
                        employeeid: employeeid,
                    },
                    dataSrc: (json) => {
                        var finalData = [];
                        var data = json.data;
                        $.each(data, (key, item) => {

                            finalData.push({
                                logdate: item.logdate,
                                logtype: item.logtype,
                                logtime: item.logtime,
                            });
                        });

                        return finalData;
                    },
                },
                columnDefs: [
                    {
                        targets: 1,
                        className: "td-indent",
                    },
                ],
                columns: [
                    { data: "logdate" },
                    { data: "logtype" },
                    { data: "logtime" },
                ],
                createdRow: function (row, data, dataIndex) {
                    $('td', row).each(function (index) {
                        this.style.textAlign = "center";
                        this.style.verticalAlign = "middle";
                    });
                },
                initComplete: function () {
                },
            });
        }


        function LoadBdayFolks() {
            $.ajax({
                type: "GET",
                url: "/getbdaytoday",
                success: function (result) {
                    if (result.msg === "success") {
                        const bdayData = result.data;
                        let counterbday = 0;
                        let bdaydiv = "";

                        if (bdayData.length === 0) {
                            bdaydiv = `<div class="carousel-item active" data-bs-interval="2000">
                                    <img src="/images/img/bday.jpg" class="d-block w-100" alt="Default Image"
                                        style="height: 470px;">
                                    <div class="carousel-caption d-none d-md-block">
                                        <h5>No Birthdays Today</h5>
                                    </div>
                                </div>`;
                        } else {
                            $.each(bdayData, (key, item) => {
                                counterbday++;
                                bdaydiv += `
                            <div class="carousel-item active" data-bs-interval="2000">
                                <img id="preview${counterbday}" src="data:image/jpg;base64,${item.profilePicturePath}" class="d-block w-100" alt="..."
                                    style="height: 470px;">
                                <div class="carousel-caption d-none d-md-block">
                                    <h5 id="employeeid${counterbday}">${item.firstname}</h5>
                                    <h6 id="bdaydate${counterbday}">${item.birthday}</h6>
                                </div>
                            </div>
                            <button class="carousel-control-prev" type="button"
                                data-bs-target="#carouselannouncement" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button"
                                data-bs-target="#carouselannouncement" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>`;
                            });
                        }

                        $("#carouselbday").html(bdaydiv);
                    } else {
                        console.error("Error: ", result.message);
                        swal(
                            "An error occurred while fetching announcement data",
                            "Please try again later.",
                            "error"
                        );
                    }
                },
            });
        }




        function GenerateAnouncement() {
            $.ajax({
                type: "GET",
                url: "/getbulletin",
                // data: {
                //   bulletinid: id,
                // },
                success: function (result) {
                    if (result.msg === "success") {
                        const announcementData = result.data;
                        let counter = 0;
                        $.each(announcementData, (key, item) => {
                            counter++;
                            anouncementdiv += `
              <div class="carousel-item active" data-bs-interval="2000">
                <img id="preview${counter}"  src="data:image/jpg;base64,${item.image}" class="d-block w-100" alt="..."
                style="height: 470px;">
              <div class="carousel-caption d-none d-md-block">
                <h5 id="announcetitle${counter}">${item.title}</h5>
                <p id="announcedesc${counter}">${item.description}</p>
                <p id="announcedate${counter}">${item.targetdate}</p>
              </div>
                                    </div>
                                    <button class="carousel-control-prev" type="button"
                                        data-bs-target="#carouselannouncement" data-bs-slide="prev">
                                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                        <span class="visually-hidden">Previous</span>
                                    </button>
                                    <button class="carousel-control-next" type="button"
                                        data-bs-target="#carouselannouncement" data-bs-slide="next">
                                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                        <span class="visually-hidden">Next</span>
                                    </button>`;
                        });
                    } else {
                        console.error("Error: ", result.message);
                        swal(
                            "An error occurred while fetching announcement data",
                            "Please try again later.",
                            "error"
                        );
                    }

                    $("#carouselannouncement").html(anouncementdiv);
                },
                error: function (err) {
                    console.error("AJAX Error: ", err.responseText);
                    swal(
                        "An error occurred while fetching announcement data",
                        "Please try again later.",
                        "error"
                    );
                },
            });
        }

        //#endregion
    });
</script>