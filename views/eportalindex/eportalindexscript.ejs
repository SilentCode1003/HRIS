<script>
const OFFICE_LOCATION_LAT = 14.337945;
    const OFFICE_LOCATION_LNG = 121.060511;

    const map = L.map('map').setView([OFFICE_LOCATION_LAT, OFFICE_LOCATION_LNG], 15);

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: 'Â© OpenStreetMap contributors'
    }).addTo(map);

    const officeMarker = L.marker([OFFICE_LOCATION_LAT, OFFICE_LOCATION_LNG]).addTo(map);
    officeMarker.bindPopup('Office Location').openPopup();

    const geofence = L.circle([OFFICE_LOCATION_LAT, OFFICE_LOCATION_LNG], {
        color: 'red',
        fillColor: '#f03',
        fillOpacity: 0.3,
        radius: 100
    }).addTo(map);

    function checkGeofence(userLocation) {
        const userLatLng = L.latLng(userLocation.lat, userLocation.lng);
        return userLatLng.distanceTo(geofence.getLatLng()) <= geofence.getRadius();
    }

    function updateLocationOnMap(position) {
        const userLocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
        };

        // Clear previous markers
        map.eachLayer((layer) => {
            if (layer instanceof L.Marker) {
                layer.remove();
            }
        });

        const userMarker = L.marker([userLocation.lat, userLocation.lng]).addTo(map);
        userMarker.bindPopup(`Your Location<br>Lat: ${userLocation.lat}<br>Lng: ${userLocation.lng}`).openPopup();

        if (checkGeofence(userLocation)) {
            console.log('User is inside the geofence.');
        } else {
            console.log('User is outside the geofence.');
        }
    }

    function handleError(error) {
        console.error(`Error getting user location: ${error.message}`);
    }

    // Watch the device's position continuously
    const watchId = navigator.geolocation.watchPosition(updateLocationOnMap, handleError, {
        enableHighAccuracy: true,
        maximumAge: 30000,
        timeout: 27000
    });

</script>