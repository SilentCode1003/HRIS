<script>
  let departmentid = "";
  let base64String = "";

  $(document).ready(function () {
    LoadTable();
    searchTable();
    LoadList();
    LoadListEdit();

    $(document).on('keyup', '#myInput', function () {
      searchTable();
    });

    function LoadTable() {
      $("#dataTabledepartment").DataTable({
        destroy: true,
        processing: true,
        serverSide: true,
        paging: false,
        searching: false,
        info: false,
        scrollY: 400,
        scrollCollapse: true,
        serverMethod: "GET",
        ajax: {
          url: "/department/load",
          dataSrc: (json) => {
            var finalData = [];
            var data = json.data;
            $.each(data, (key, item) => {
              var action = "";
              var status = item.status;

              action = `
                <button id="editBtn" class="btn text-primary" name="editBtn" data-bs-toggle="modal" data-bs-target="#editdepartmentmodal"><i class="fas fa-fw fa-pen"></i></button>
               `;

              finalData.push({
                departmentid: item.departmentid,
                departmentname: item.departmentname,
                departmenthead: item.departmenthead,
                createdby: item.createdby,
                createdate: item.createdate,
                status: item.status,
                action: action,
              });
            });

            return finalData;
          },
        },
        columnDefs: [
          {
            targets: 1,
            className: "td-indent",
          },
        ],
        columns: [
          { data: "departmentid" },
          { data: "departmentname" },
          { data: "departmenthead" },
          { data: "createdby" },
          { data: "createdate" },
          { data: "status" },
          { data: "action" },
        ],
        createdRow: function (row, data, dataIndex) {
          //miyaka
          var statusCell = $(row).find("td:eq(5)");
 
          var statusText = data.status;

          var statusClass = "";
 
          switch (statusText.toLowerCase()) {
            case "active":
              statusClass = "active-status";
              break;
            case "inactive":
              statusClass = "inactive-status";
              break;
            default:
              statusClass = ""; 
          }
          
          statusCell.html(`<span class="${statusClass}">${statusText}</span>`);

          $("td", row).each(function (index) {
            this.style.textAlign = "center";
            this.style.verticalAlign = "middle";
          });
        },

        initComplete: function () {
        },
      });
    }


    $(document).on("click", "#departmentsavebtn", function () {
      let departmentname = $("#departmentname").val();
      let departmenthead = $("#departhead").val();
      let departmenticon = base64String;
      var message = "";

      if (departmentname == "") {
        message += "TITTLE ";
      }

      if (departmenthead == "") {
        message += "TITTLE ";
      }

      if (departmenticon == "") {
        message += "DESCRIPTION ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "POST",
          url: "/department/save",
          data: {
            departmentname: departmentname,
            departmenthead: departmenthead,
            departmenticon: departmenticon,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal({
                title: "Saved Successfully",
                text: "You clicked the button!",
                icon: "success",
                button: "OK!",
              })
                .then(results => {
                  window.location.reload();
                })
              LoadTable();
            }
            else {
              swal({
                title: "Exist",
                text: "Data already exists!",
                icon: "warning",
                button: "OK!",
              });
            }

          },
          error: function (err) {
            swal("Data already exist!", "You clicked the button!", "warning");
          },
        });
      }

    });

    function LoadList() {
      $.ajax({
        type: "GET",
        url: "/totalbagapuroapi",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.firstname, item.firstname);
            $(options).html(item.firstname);
            $("#departhead").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    function LoadListEdit() {
      $.ajax({
        type: "GET",
        url: "/totalbagapuroapi",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.firstname, item.firstname);
            $(options).html(item.firstname);
            $("#editdepartmenthead").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }


    $("#dataTabledepartment tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      departmentid = dataRow[0];
    });

    $(document).on("click", "#editBtn", function () {
      $.ajax({
        type: "POST",
        url: "/department/getdepartment",
        data: {
          departmentid: departmentid,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            $.each(existingData, (key, item) => {
              $("#editdepartmentid").val(item.departmentid);
              $("#editdepartmentname").val(item.departmentname);
              $("#editpreview").attr(
                "src",
                "data:image/jpg;base64," + item.departmenticon
              );
              base64String = item.departmenticon;
              $("#editdepartmenthead").val(item.departmenthead);
              $("#editdepartmentstatus").val(item.status);
            });
          } else {
            swal("Error fetching employee data", message, "error");
          }
        },
        error: function (err) {
          swal("An error occurred while fetching employee data", message, "error");
        },
      });
    });

    $(document).on("click", "#editdepartmentsavebtn", function () {
      let id = departmentid
      let departmentname = $("#editdepartmentname").val();
      let departmenthead = $("#editdepartmenthead").val();
      let status = $("#editdepartmentstatus").val();
      let departmenticon = base64String;

      var message = "";

      if (departmentname === "") {
        message += "departmentname is required. ";
      }

      if (departmenthead === "") {
        message += "departmenthead is required. ";
      }

      if (status === "") {
        message += "status is required. ";
      }

      if (departmenticon === "") {
        message += "status is required. ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "POST",
          url: "department/update",
          data: {
            departmentid: id,
            departmentname: departmentname,
            departmenthead: departmenthead,
            departmenticon: departmenticon,
            status: status,
          },
          success: function (result) {
            if (result.msg == "success") {
              swal({
                title: "Update Successfully",
                text: "You clicked the button!",
                icon: "success",
                button: "OK!",
              })
                .then(results => {
                  window.location.reload();
                });
              LoadTable();
            } else if (result.msg == "exist") {
              swal({
                title: "Exist",
                text: "Data already exists!",
                icon: "warning",
                button: "OK!",
              });
            } else {
              swal("Data already exists!", "You clicked the button!", "warning");
            }
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
          },
        });
      }
    });

    function searchTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInput");
      filter = input.value.toUpperCase();
      table = document.getElementById("dataTabledepartment");
      tr = table.getElementsByTagName("tr");
      for (i = 0; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
          }
        }
        if (found) {
          tr[i].style.display = "";
          found = false;
        } else {
          tr[i].style.display = "none";
        }
      }
    }


    $(document).on("change", "#addicon", function (e) {
    const input = document.getElementById("addicon");
    const file = input.files[0];

    const reader = new FileReader();
    reader.readAsDataURL(file);
    reader.onloadend = function () {
      const preview = document.getElementById("preview");
      preview.src = reader.result;
    };
    imageUploaded();
  });

  function imageUploaded() {
    const input = document.getElementById("addicon");
    const file = input.files[0];

    var reader = new FileReader();

    reader.onload = function () {
      base64String = reader.result.replace("data:", "").replace(/^.+,/, "");

      imageBase64Stringsep = base64String;
    };
    reader.readAsDataURL(file);
  }

  $(document).on("change", "#editicon", function (e) {
    const input = document.getElementById("editicon");
    const file = input.files[0];

    const reader = new FileReader();
    reader.readAsDataURL(file);
    reader.onloadend = function () {
      const preview = document.getElementById("editpreview");
      preview.src = reader.result;
    };
    EditImage();
  });

  function EditImage() {
    const input = document.getElementById("editicon");
    const file = input.files[0];

    var reader = new FileReader();

    reader.onload = function () {
      base64String = reader.result.replace("data:", "").replace(/^.+,/, "");

      imageBase64Stringsep = base64String;
    };
    reader.readAsDataURL(file);
  }


  });


</script>