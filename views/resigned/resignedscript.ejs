<script>
  let resignedid = "";

  $(document).ready(function () {
    LoadTable();
    LoadListEmp();
    searchTable();
    LoadeditListEmp();

    $(document).on('keyup', '#myInput', function () {
      searchTable();
    });


    function LoadTable() {
      $("#dataTableresigned").DataTable({
        destroy: true,
        processing: true,
        serverSide: true,
        paging: false,
        searching: false,
        info: false,
        scrollY: 400,
        scrollCollapse: true,
        serverMethod: "GET",
        ajax: {
          url: "/resigned/load",
          dataSrc: (json) => {
            var finalData = [];
            var data = json.data;

            $.each(data, (key, item) => {
              var action = "";
              var status = item.status;

              action = `
                  <button id="editBtn" class="btn text-primary" name="editBtn" data-bs-toggle="modal" data-bs-target="#editresignedmodal"><i class="fas fa-fw fa-pen"></i></button>
                 `;

              finalData.push({
                resignedid: item.resignedid,
                employeeid: item.employeeid,
                reason: item.reason,
                dateresigned: item.dateresigned,
                status: item.status,
                createby: item.createby,
                createdate: item.createdate,
                action: action,
              });
            });

            return finalData;
          },
        },
        columnDefs: [
          {
            targets: 1,
            className: "td-indent",
          },
        ],
        columns: [
          { data: "resignedid" },
          { data: "employeeid" },
          { data: "reason" },
          { data: "dateresigned" },
          { data: "status" },
          { data: "createby" },
          { data: "createdate" },
          { data: "action" },
        ],
        createdRow: function (row, data, dataIndex) {
          //miyaka
          var statusCell = $(row).find("td:eq(4)");
          var dateresignedCell = $(row).find("td:eq(3)");
         
          var statusText = data.status;

          
          var statusClass = "";

          
          switch (statusText.toLowerCase()) {
            case "resigned":
              statusClass = "resigned-status";
              break;
            case "terminated":
              statusClass = "terminated-status";
              break;
              case "end_of_contract":
              statusClass = "end_of_contract-status";
              break;
              case "awol":
              statusClass = "awol-status";
              break;
            default:
              statusClass = ""; 
          }

          
          statusCell.html(`<span class="${statusClass}">${statusText}</span>`);
          dateresignedCell.wrapInner("<span class='dateresigned-text'></span>");

          $("td", row).each(function (index) {
            this.style.textAlign = "center";
            this.style.verticalAlign = "middle";
          });
        },
        initComplete: function () {
        },
      });
    }



    $(document).on("click", "#resignedsavebtn", function () {
      let newEmployeeId = $("#resignedemployee").val();
      let reason = $("#resignedreason").val();
      let dateresigned = $("#dateresigned").val();
      let status = $("#resignedstatus").val();


      var message = "";

      if (newEmployeeId == "") {
        message += "shiftname is required ";
      }

      if (reason == "") {
        message += "status is required ";
      }

      if (dateresigned == "") {
        message += "department is required ";
      }

      if (status == "") {
        message += "createby is required ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {

        $.ajax({
          type: "POST",
          url: "/resigned/save",
          data: {
            newEmployeeId: newEmployeeId,
            reason: reason,
            dateresigned: dateresigned,
            status: status,

          },
          success: function (result) {
            if (result.msg == "success") {
              swal({
                title: "Saved Successfully",
                text: "You clicked the button!",
                icon: "success",
                button: "OK!",
              })
                .then(results => {
                  window.location.reload();
                })
              LoadTable();
            }
            else {
              swal({
                title: "Exist",
                text: "Data already exists!",
                icon: "warning",
                button: "OK!",
              });
            }

          },
          error: function (err) {
            swal("Data already exist!", "You clicked the button!", "warning");
          },
        });
      }

    });


    function LoadListEmp() {
      $.ajax({
        type: "GET",
        url: "/employee/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.newEmployeeId, item.newEmployeeId);
            $(options).html(item.firstname);
            $("#resignedemployee").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    function LoadeditListEmp() {
      $.ajax({
        type: "GET",
        url: "/employee/loadedit",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.newEmployeeId, item.newEmployeeId);
            $(options).html(item.firstname);
            $("#editresignedemployee").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }


    $("#dataTableresigned tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      resignedid = dataRow[0];
    });

    $(document).on("click", "#editBtn", function () {
      $.ajax({
        type: "POST",
        url: "/resigned/getresigned",
        data: {
          resignedid: resignedid,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;

            $.each(existingData, (key, item) => {
              $("#editdepartmentid").val(item.resignedid);
              $("#editresignedemployee").val(item.employeeid);
              $("#editresignedreason").val(item.reason);
              $("#editdateresigned").val(item.dateresigned);
              $("#editresignedstatus").val(item.status);
            });
          } else {
            swal("Error fetching employee data", message, "error");
          }
        },
        error: function (err) {
          swal("An error occurred while fetching employee data", message, "error");
        },
      });
    });

    $(document).on("click", "#editresignedsavebtn", function () {
      let id = resignedid
      let reason = $("#editresignedreason").val();
      let status = $("#editresignedstatus").val();

      var message = "";

      if (reason === "") {
        message += "departmentname is required. ";
      }

      if (status === "") {
        message += "departmentname is required. ";
      }

      if (message !== "") {
        swal("Validation Error", message, "error");
      } else {
        $.ajax({
          type: "POST",
          url: "/resigned/update",
          data: {
            resignedid: id,
            reason: reason,
            status: status,

          },
          success: function (result) {
            if (result.msg == "success") {
              swal({
                title: "Update Successfully",
                text: "You clicked the button!",
                icon: "success",
                button: "OK!",
              })
                .then(results => {
                  window.location.reload();
                });
              LoadTable();
            } else if (result.msg == "exist") {
              swal({
                title: "Exist",
                text: "Data already exists!",
                icon: "warning",
                button: "OK!",
              });
            } else {
              swal("Data already exists!", "You clicked the button!", "warning");
            }
          },
          error: function (err) {
            swal("Error", "An error occurred while saving data.", "error");
          },
        });
      }
    });


  });

  function searchTable() {
    var input, filter, found, table, tr, td, i, j;
    input = document.getElementById("myInput");
    filter = input.value.toUpperCase();
    table = document.getElementById("dataTableresigned");
    tr = table.getElementsByTagName("tr");
    for (i = 0; i < tr.length; i++) {
      td = tr[i].getElementsByTagName("td");
      for (j = 0; j < td.length; j++) {
        if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
          found = true;
        }
      }
      if (found) {
        tr[i].style.display = "";
        found = false;
      } else {
        tr[i].style.display = "none";
      }
    }
  }

</script>